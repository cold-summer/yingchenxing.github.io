<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安卓开发（三）UI组件—布局</title>
    <url>/2021/09/03/AndroidDevelopment01/</url>
    <content><![CDATA[<h1 id="布局管理器"><a href="#布局管理器" class="headerlink" title="布局管理器"></a>布局管理器</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol>
<li><p>线性布局</p>
</li>
<li><p>相对布局</p>
</li>
</ol>
<h2 id="线性布局（LinearLayout）"><a href="#线性布局（LinearLayout）" class="headerlink" title="线性布局（LinearLayout）"></a>线性布局（LinearLayout）</h2><h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><p><img src="/2021/09/03/AndroidDevelopment01/1630639147085.png"></p>
<p>layout_height、width：控制长、宽</p>
<p>layout_padding：控制边距</p>
<p>layout_orientation：排列方式（纵向、横向）</p>
<p>layout_margin：组件外边距</p>
<p>background：背景颜色</p>
<p>gravity：调整位置</p>
<p>layout_weight：权重</p>
<h2 id="相对布局（RelativeLayout）"><a href="#相对布局（RelativeLayout）" class="headerlink" title="相对布局（RelativeLayout）"></a>相对布局（RelativeLayout）</h2><h3 id="常用属性-1"><a href="#常用属性-1" class="headerlink" title="常用属性"></a>常用属性</h3><p><img src="/2021/09/03/AndroidDevelopment01/1630672158326.png"></p>
<p>layout_toRightOf：放在……右边</p>
<p>layout_align: 边缘对齐</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（二）UI组件—组件</title>
    <url>/2021/09/03/AndroidDevelopment02/</url>
    <content><![CDATA[<h1 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tv_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>maxLength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello World<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>drawableRight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/wechat<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>drawablePadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>singleLine</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>ellipsize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>focusableInTouchMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>drawableRight</td>
<td>右边显示图片</td>
</tr>
<tr>
<td>drawablePadding</td>
<td>图片间隔</td>
</tr>
<tr>
<td>textColor</td>
<td>文字颜色</td>
</tr>
<tr>
<td>textSize</td>
<td>文字大小</td>
</tr>
<tr>
<td>singleLine</td>
<td>在一行显示</td>
</tr>
<tr>
<td>ellipsize</td>
<td>跑马灯</td>
</tr>
<tr>
<td>focusableInTouchMode</td>
<td>可触摸</td>
</tr>
</tbody></table>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestViewActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> TextView mTv1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> TextView mTv2<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_test_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv1 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>STRIKE_THRU_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中划线</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>UNDERLINE_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//下划线</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAntiAlias</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//去除锯齿</span>
        mTv2 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Intent类"><a href="#Intent类" class="headerlink" title="Intent类"></a>Intent类</h1><p>通常用于活动中的跳转</p>
<pre class="line-numbers language-java"><code class="language-java">Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SecondActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//startActivity方法</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h1><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><ul>
<li>文字大小、颜色</li>
<li>自定义背景形状‘</li>
<li>点击事件</li>
</ul>
<h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@id/btn_3<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/bg_btn4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showToast<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="两种设置点击事件的方法"><a href="#两种设置点击事件的方法" class="headerlink" title="两种设置点击事件的方法"></a>两种设置点击事件的方法</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>在对应的类中直接设置事件</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtn3 <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//方法一</span>
        mBtn3<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>ButtonActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"btn3被点击了"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//桌面弹出提示信息</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>直接在xml文件中中填写方法名</p>
<pre class="line-numbers language-xml"><code class="language-xml"> android:onClick="showToast"
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并在对应的Java类中构造该方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showToast</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"我被点击了"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//桌面弹出提示信息</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Button设置background不生效问题"><a href="#Button设置background不生效问题" class="headerlink" title="Button设置background不生效问题"></a>Button设置background不生效问题</h2><p>在res/values/themes.xml中将下列代码</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.Button<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialComponents.DayNight.DarkActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>改为</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.Button<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialComponents.DayNight.DarkActionBar.Bridge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="实现点击变色功能"><a href="#实现点击变色功能" class="headerlink" title="实现点击变色功能"></a>实现点击变色功能</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FF5346<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>radius</td>
<td>圆角</td>
</tr>
<tr>
<td>state_pressed</td>
<td>Button状态</td>
</tr>
<tr>
<td>solid</td>
<td>填充</td>
</tr>
</tbody></table>
<h1 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h1><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/et_2<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFAD33<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/et_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>drawableLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/we<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>inputType</td>
<td>输入类型（textpassword：以*代替）</td>
</tr>
<tr>
<td>hint</td>
<td>输入提示</td>
</tr>
</tbody></table>
<h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><pre class="line-numbers language-java"><code class="language-java">mEtUserName<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"edittext"</span><span class="token punctuation">,</span> charSequence<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span>Editable editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Log.d ( tag, msg ):</strong></p>
<p>​    tag: 打印信息的标签</p>
<p>​    msg: 要打印的信息</p>
<h1 id="通过类管理多个控件"><a href="#通过类管理多个控件" class="headerlink" title="通过类管理多个控件"></a>通过类管理多个控件</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">OnClick</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Intent intent <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_radiobutton<span class="token operator">:</span>
                intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>RadioButtonActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="RadioButton"><a href="#RadioButton" class="headerlink" title="RadioButton"></a>RadioButton</h1><h2 id="常用属性-1"><a href="#常用属性-1" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioGroup</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rg_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioButton</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rb_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioButton</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rb_2<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>woman<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RadioGroup</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>checked</th>
<th>初始化按钮是否选中</th>
</tr>
</thead>
</table>
<p>监听是否选中的方法</p>
<pre class="line-numbers language-xml"><code class="language-xml">android:state_checked="true"
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="事件监听-1"><a href="#事件监听-1" class="headerlink" title="事件监听"></a>事件监听</h2><p><strong>以RadioGroup为单位</strong></p>
<pre class="line-numbers language-java"><code class="language-java">mRg1 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>rg_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
mRg1<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RadioGroup<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>RadioGroup radioGroup<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        RadioButton radioButton <span class="token operator">=</span> radioGroup<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>RadioButtonActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> radioButton<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h1><h2 id="常用属性-2"><a href="#常用属性-2" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/cb_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tv_title<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>button</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/bg_checkbox<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
&lt;CheckBox
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>android:button</th>
<th>更改复选框图案样式</th>
</tr>
</thead>
</table>
<h2 id="事件监听-2"><a href="#事件监听-2" class="headerlink" title="事件监听"></a>事件监听</h2><pre class="line-numbers language-java"><code class="language-java">cb1<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>CompoundButton compoundButton<span class="token punctuation">,</span> <span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>CheckBoxAcitivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>b<span class="token operator">?</span><span class="token string">"选中"</span><span class="token operator">:</span><span class="token string">"未选中"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="通过gradle使用第三方库"><a href="#通过gradle使用第三方库" class="headerlink" title="通过gradle使用第三方库"></a>通过gradle使用第三方库</h1><h2 id="以glide库为例"><a href="#以glide库为例" class="headerlink" title="以glide库为例"></a>以glide库为例</h2><h3 id="第一步：修改build-gradle文件"><a href="#第一步：修改build-gradle文件" class="headerlink" title="第一步：修改build.gradle文件"></a>第一步：修改build.gradle文件</h3><p>在app文件夹下的build.gradle中，将</p>
<pre><code>dependencies &#123;

    implementation &#39;androidx.appcompat:appcompat:1.2.0&#39;
    implementation &#39;com.google.android.material:material:1.3.0&#39;
    implementation &#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;
    testImplementation &#39;junit:junit:4.12&#39;
    androidTestImplementation &#39;androidx.test.ext:junit:1.1.2&#39;
    androidTestImplementation &#39;androidx.test.espresso:espresso-core:3.3.0&#39;
&#125;
</code></pre>
<p>改为</p>
<pre><code>dependencies &#123;

    implementation &#39;androidx.appcompat:appcompat:1.2.0&#39;
    implementation &#39;com.google.android.material:material:1.3.0&#39;
    implementation &#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;
    testImplementation &#39;junit:junit:4.12&#39;
    androidTestImplementation &#39;androidx.test.ext:junit:1.1.2&#39;
    androidTestImplementation &#39;androidx.test.espresso:espresso-core:3.3.0&#39;
    implementation &#39;com.github.bumptech.glide:glide:4.12.0&#39;
    annotationProcessor &#39;com.github.bumptech.glide:compiler:4.12.0&#39;
&#125;
</code></pre>
<h3 id="第二步：修改setting-gradle文件"><a href="#第二步：修改setting-gradle文件" class="headerlink" title="第二步：修改setting.gradle文件"></a>第二步：修改setting.gradle文件</h3><p>在setting.gradle文件中做相应更改（glide库不需要改）</p>
<pre><code>repositories &#123;
    google()
    mavenCentral()
    jcenter() // Warning: this repository is going to shut down soon
&#125;
</code></pre>
<h3 id="第三步：联网（可选）"><a href="#第三步：联网（可选）" class="headerlink" title="第三步：联网（可选）"></a>第三步：联网（可选）</h3><p>打开AndroidManiFest.xml文件，在</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.edittext<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>    
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>加入</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>表示联网权限</p>
<h1 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h1><h2 id="常用属性-3"><a href="#常用属性-3" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/iv_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/we<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>scaleType=</th>
<th>缩放形式</th>
</tr>
</thead>
<tbody><tr>
<td>fitXY</td>
<td>撑满控件，宽高比发生改变</td>
</tr>
<tr>
<td>fitCenter</td>
<td>保持宽高比缩放，直至完全显示</td>
</tr>
<tr>
<td>centerCrop</td>
<td>保持宽高比缩放，直至完全覆盖空间，裁剪显示</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>android:src</th>
<th>加入本地图片</th>
</tr>
</thead>
</table>
<h2 id="使用glide加入网络图片"><a href="#使用glide加入网络图片" class="headerlink" title="使用glide加入网络图片"></a>使用glide加入网络图片</h2><p>使用方法：</p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"网址"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>ImagineViewAcitivity控件<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-java"><code class="language-java">mIv4<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"https://ss3.baidu.com/-fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/48540923dd54564e3cf222ffb1de9c82d0584f65.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mIv4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（一）通过XML和Java控制UI界面</title>
    <url>/2021/09/02/AndroidDevelopment03/</url>
    <content><![CDATA[<h1 id="使用XML布局文件控制UI界面"><a href="#使用XML布局文件控制UI界面" class="headerlink" title="使用XML布局文件控制UI界面"></a>使用XML布局文件控制UI界面</h1><ol>
<li>在Android应用的res/layout目录下编写XML文件</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0066FF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFFFFF<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>在Activity中使用以下Java代码显示XML文件中布局的内容</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml">setContentView(R.layout.activity_main);
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>该代码在创建时会自动生成</strong></p>
<h1 id="在Java代码中控制UI界面"><a href="#在Java代码中控制UI界面" class="headerlink" title="在Java代码中控制UI界面"></a>在Java代码中控制UI界面</h1><pre class="line-numbers language-java"><code class="language-java">FrameLayout frameLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FrameLayout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
frameLayout<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>chen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setContentView</span><span class="token punctuation">(</span>frameLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>
TextView tv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tv<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"begin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tv<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_SP<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="使用XML和Java代码混合控制UI界面"><a href="#使用XML和Java代码混合控制UI界面" class="headerlink" title="使用XML和Java代码混合控制UI界面"></a>使用XML和Java代码混合控制UI界面</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Button mBtnTextView<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtnTextView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_textview<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtnTextView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//跳转到TextView演示界面</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>TestViewActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>

    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_textview<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>TextView<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（四）UI组件—视图</title>
    <url>/2021/09/07/AndroidDevelopment04/</url>
    <content><![CDATA[<h1 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h1><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/list_view<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token string">"Orange"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ArrayAdapter<span class="token operator">&lt;</span>String<span class="token operator">></span> adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span>
                MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_list_item_1<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ListView listView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>数组中的数据无法直接传递到ListView，需要借助适配器完成。</p>
<p>Android提供了很多适配器的实践类（如：ArrayAdapter）</p>
<pre class="line-numbers language-java"><code class="language-java">ArrayAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>当前上下文<span class="token punctuation">,</span> ListView子项布局id<span class="token punctuation">,</span> 适配的数据<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h2><p><img src="/2021/09/07/AndroidDevelopment04/1631017249023.png"></p>
<h2 id="自定义适配器"><a href="#自定义适配器" class="headerlink" title="自定义适配器"></a>自定义适配器</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span>Fruit<span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> resourceId<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">FruitAdapter</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">int</span> textViewResourceId<span class="token punctuation">,</span>
                        List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> objects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> textViewResourceId<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>
        resourceId <span class="token operator">=</span> textViewResourceId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> View convertview<span class="token punctuation">,</span> ViewGroup parent<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//position指在容器中的位置</span>
        Fruit fruit <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取当前Fruit实例</span>
        View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ImageView fruitImage <span class="token operator">=</span>view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例化Imageview</span>
        TextView fruitName <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例化TextView</span>
        fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将图片传入</span>
        fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将文字传入</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在getview（）方法中每次都将布局重新加载了一遍，将加载好的布局缓存到convertView参数可节约时间</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>convertview <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    view <span class="token operator">=</span> convertview<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ListView的点击事件"><a href="#ListView的点击事件" class="headerlink" title="ListView的点击事件"></a>ListView的点击事件</h2><pre class="line-numbers language-java"><code class="language-java">listView<span class="token punctuation">.</span><span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AdapterView<span class="token punctuation">.</span>OnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemClick</span><span class="token punctuation">(</span>AdapterView<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> adapterView<span class="token punctuation">,</span> View view<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Fruit fruit <span class="token operator">=</span> fruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//i指位置，l指id</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="LayoutInflater类"><a href="#LayoutInflater类" class="headerlink" title="LayoutInflater类"></a>LayoutInflater类</h1><p>转载：<a href="https://www.cnblogs.com/shitianzeng/articles/2323427.html">淡泊名利</a></p>
<p>作用类似于findViewById()。不同点是LayoutInflater是用来找res/layout/下的xml布局文件，并且实例化；而findViewById()是找xml布局文件下的具体widget控件(如Button、TextView等)。</p>
<p>具体作用： </p>
<p>1、对于一个没有被载入或者想要动态载入的界面，都需要使用LayoutInflater.inflate()来载入；</p>
<p>2、对于一个已经载入的界面，就可以使用Activiyt.findViewById()方法来获得其中的界面元素。</p>
<h1 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h1><h2 id="引用包"><a href="#引用包" class="headerlink" title="引用包"></a>引用包</h2><p>在app文件夹下的build.gradle文件中加入</p>
<pre><code>implementation &quot;com.android.support:appcompat-v7:28.0.0&quot;
implementation &quot;com.android.support:recyclerview-v7:$recyclerviewV7Version&quot;
</code></pre>
<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>FruitAdapter<span class="token punctuation">.</span>ViewHolder<span class="token operator">></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> mFruitList<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>
        ImageView fruitImage<span class="token punctuation">;</span>
        TextView fruitName<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">ViewHolder</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fruitImage <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fruitName <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">FruitAdapter</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> fruitList<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mFruitList <span class="token operator">=</span> fruitList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@NonNull</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> holder<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mFruitList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>首先定义了ViewHolder，继承自RecyclerView.ViewHolder。传入参数view，通常是RecyclerView子项的最外层布局。</p>
<p>onCreateViewHolder()：用于创建ViewHolder实例，把加载的布局传入并将viewholder返回</p>
<p>onBindViewHolder()：对RecyclerView子项进行赋值</p>
<p>getItemCount()：返回RecyclerView有多少长度</p>
<p>使用recyclerView</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    RecyclerView recyclerView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recycle_view<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1. 实例化对象</span>
    LinearLayoutManager layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2. 新建LinearLayoutManager类</span>
    recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3. 为recyclerView设置LayoutManager</span>
    FruitAdapter adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>
    recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4. 设置适配器</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>LinearLayoutManager：用于指定RecyclerView的布局方式</p>
<p>recyclerView.setAdapter()：完成适配器设置</p>
<h2 id="实现横向滚动和瀑布流布局"><a href="#实现横向滚动和瀑布流布局" class="headerlink" title="实现横向滚动和瀑布流布局"></a>实现横向滚动和瀑布流布局</h2><h3 id="横向布局"><a href="#横向布局" class="headerlink" title="横向布局"></a>横向布局</h3><p>修改布局文件：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在main中指定布局方式：</p>
<pre class="line-numbers language-java"><code class="language-java">layoutManager<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>LinearLayoutManager<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="瀑布流布局"><a href="#瀑布流布局" class="headerlink" title="瀑布流布局"></a>瀑布流布局</h3><p>在main中指定布局方式：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">taggeredGridLayoutManager</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>StaggeredGridLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3表示分成3列，StaggeredGridLayoutManager.VERTICAL表示布局正向排列</p>
<h2 id="RecyclerView的点击事件"><a href="#RecyclerView的点击事件" class="headerlink" title="RecyclerView的点击事件"></a>RecyclerView的点击事件</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> ViewHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>fruitView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> position <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"you click view"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> position <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"you click image"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（零）AndroidStdio项目中各个文件(夹)的作用</title>
    <url>/2021/09/07/AndroidDevelopment05/</url>
    <content><![CDATA[<p>笔记来自于《第一行代码》</p>
<img src="/2021/09/07/AndroidDevelopment05/1631014300281.png" style="zoom:150%;">

<p><img src="/2021/09/07/AndroidDevelopment05/1631014415289.png"></p>
<p><strong>1. src</strong></p>
<p>存放所有Java代码的地方。</p>
<p><strong>2. gen</strong></p>
<p>此文件夹中的内容自动生成，其中R.JAVA文件，在项目中添加的任何资源都会生成一个相应的资源id。</p>
<p><strong>3. assets</strong></p>
<p>主要存放一些随程序打包的文件。当程序中使用到WebView加载本地网页时，所有网页相关的文件也都存放到这个文件夹下</p>
<p><strong>4. bin</strong></p>
<p>包含一些在编译时自动产生的文件。其中会有一个当前项目编译好的安装包，将该文件拷到手机上就可以直接安装了。</p>
<p><strong>5. libs</strong></p>
<p>如果项目中用到了第三方Jar包，就需要吧这些包放到libs目录下</p>
<p><strong>6. res</strong></p>
<p>使用的所有图片、布局、字符串都是放在这个文件夹下，且该文件夹有很多细分的子文件夹。</p>
<p><strong>7. AndroidManiFest.xml</strong></p>
<p>整个安卓项目的配置文件，在程序中配置的四大组件都需要在这个文件夹注册。另外，还可以在这个文件夹中给应用程序添加权限声明，也可以重新指定创建项目时指定的程序最低兼容版本和目标版本。</p>
<p><strong>8. project.properties</strong></p>
<p>通过一行代码指定了编译程序时所使用的sdk</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（四）编写界面实践</title>
    <url>/2021/09/08/AndroidDevelopment06/</url>
    <content><![CDATA[<h2 id="制作Nine-Patch图片"><a href="#制作Nine-Patch图片" class="headerlink" title="制作Nine-Patch图片"></a>制作Nine-Patch图片</h2><p><strong>第一步</strong></p>
<p>右键图片文件，选择</p>
<p><img src="/2021/09/08/AndroidDevelopment06/1631177537152.png"></p>
<p><strong>第二步</strong></p>
<p><img src="/2021/09/08/AndroidDevelopment06/1631177615012.png"></p>
<p>上边框和左边框划分的区域是图片拉伸的区域</p>
<p>下边框和右边框换份的区域是内容填写的区域</p>
<p><strong>拉伸效果</strong></p>
<img src="/2021/09/08/AndroidDevelopment06/1631177880883.png" style="zoom:50%;">



<h2 id="编写主界面"><a href="#编写主界面" class="headerlink" title="编写主界面"></a>编写主界面</h2><h3 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>LinearLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>
    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
    android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"#d8e0e8"</span>
    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"0dp"</span>
        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>LinearLayout
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>EditText
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/input_text"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>
            android<span class="token operator">:</span>hint<span class="token operator">=</span><span class="token string">"Type something here"</span>
            android<span class="token operator">:</span>maxLines<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">/</span><span class="token operator">></span>

        <span class="token operator">&lt;</span>Button
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/send"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Send"</span><span class="token operator">/</span><span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>
    
<span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Msg类"><a href="#Msg类" class="headerlink" title="Msg类"></a>Msg类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Msg</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TYPE_RECEIVED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span>  <span class="token keyword">static</span>  <span class="token keyword">final</span> <span class="token keyword">int</span> TYPE_SENT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> type<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">Msg</span><span class="token punctuation">(</span>String content<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Msg<span class="token operator">></span> msgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> EditText inputText<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Button send<span class="token punctuation">;</span>
    <span class="token keyword">private</span> RecyclerView msgRecyclerView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> MsgAdapter adapter<span class="token punctuation">;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inputText <span class="token operator">=</span> <span class="token punctuation">(</span>EditText<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>input_text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        send <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>send<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>msg_recycler_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        LinearLayoutManager layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
        adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MsgAdapter</span><span class="token punctuation">(</span>msgList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        send<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String content <span class="token operator">=</span> inputText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    Msg msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_SENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    adapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将新消息插入</span>
                    msgRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将ListView定位到最后一行</span>
                    inputText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清空输入框</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        Msg msg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello gal."</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_RECEIVED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Msg msg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello. Who is that?"</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_SENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Msg msg3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"This is Tom."</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_RECEIVED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意新消息插入的步骤</p>
<pre class="line-numbers language-java"><code class="language-java">msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
adapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将新消息插入</span>
msgRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将ListView定位到最后一行</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（五）碎片</title>
    <url>/2021/09/09/AndroidDevelopment07/</url>
    <content><![CDATA[<h2 id="碎片的使用方式"><a href="#碎片的使用方式" class="headerlink" title="碎片的使用方式"></a>碎片的使用方式</h2><h3 id="碎片的简单用法："><a href="#碎片的简单用法：" class="headerlink" title="碎片的简单用法："></a>碎片的简单用法：</h3><p><strong>left_fragment布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>LeftFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeftFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>left_fragment<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过inflate动态载入left_fragment布局</p>
<p><strong>activity_main布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.fragment.LeftFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.fragment.RightFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用 android:name属性显式指明添加的碎片类名</p>
<h2 id="动态添加碎片"><a href="#动态添加碎片" class="headerlink" title="动态添加碎片"></a>动态添加碎片</h2><p>MainActivity改为</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button button <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">replaceFragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>
                <span class="token function">replaceFragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnotherRightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replaceFragment</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">)</span><span class="token punctuation">{</span>
        FragmentManager fragmentManager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        FragmentTransaction transaction <span class="token operator">=</span> fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>动态添加碎片：</strong></p>
<ol>
<li>创建添加的碎片实例</li>
<li>获取FramentManager，在活动中可以直接通过调用getSupportFramentManager()方法得到</li>
<li>开启一个事务，通过调用beginTransaction（）方法开启</li>
<li>向容器内添加或替换碎片，一般使用replace（）方法实现，需要传入容器的id和带添加得碎片实例</li>
<li>提交事务，调用commit（）方法完成</li>
</ol>
<h2 id="在碎片中模拟返回栈"><a href="#在碎片中模拟返回栈" class="headerlink" title="在碎片中模拟返回栈"></a>在碎片中模拟返回栈</h2><p>main中相关内容修改为：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replaceFragment</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">)</span><span class="token punctuation">{</span>
    FragmentManager fragmentManager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    FragmentTransaction transaction <span class="token operator">=</span> fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    transaction<span class="token punctuation">.</span><span class="token function">addToBackStack</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加到返回栈</span>
    transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>调用了FragmentTransaction的addToBackStack()方法，它可以接受一个名字用于描述返回栈状态，一般传入null即可。此时按下Back可以回到上一个界面。</p>
<h2 id="动态加载布局"><a href="#动态加载布局" class="headerlink" title="动态加载布局"></a>动态加载布局</h2><p>实现平板和手机之间布局的自动切换</p>
<p><strong>使用限定符</strong></p>
<p>在res目录下新建layout-large文件夹，新建布局activity-main.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:orientation=&quot;horizontal&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;

    &lt;fragment
        android:id=&quot;@+id/left_fragment&quot;
        android:name=&quot;com.example.fragment.LeftFragment&quot;

        android:layout_width=&quot;0dp&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_weight=&quot;1&quot;/&gt;

&lt;/LinearLayout&gt;
</code></pre>
<img src="/2021/09/09/AndroidDevelopment07/1631261085370.png" style="zoom:50%;">

<img src="/2021/09/09/AndroidDevelopment07/1631261118447.png" style="zoom:33%;">

<p><strong>常见的限定词</strong></p>
<p><img src="/2021/09/09/AndroidDevelopment07/1631261226703.png"></p>
<p><img src="/2021/09/09/AndroidDevelopment07/1631261237479.png"></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fragment</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（五）碎片的实践</title>
    <url>/2021/09/10/AndroidDevelopment08/</url>
    <content><![CDATA[<h2 id="新闻内容的布局"><a href="#新闻内容的布局" class="headerlink" title="新闻内容的布局"></a>新闻内容的布局</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/visibility_layout<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>NewsContentFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> View view<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span>String newsTittle<span class="token punctuation">,</span>String newsContent<span class="token punctuation">)</span><span class="token punctuation">{</span>
        View visibilityLayout <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>visibility_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        visibilityLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        TextView newsTittleText <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_tittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        TextView newsContentText <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsTittleText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsTittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsContentText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>提供了refresh（）方法将新闻内容和题目显示在界面上。</p>
<p><strong>news_content布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsContentFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接在布局中引用了NewsContentActivity，相当于把news_content_frag布局加入</p>
<p><strong>NewsContentActivity类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">actionStart</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span>String newsTittle<span class="token punctuation">,</span>String newsContent<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>NewsContentActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">,</span>newsTittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        String newsTitle <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取传入的新闻标题</span>
        String newsContent <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取传入的新闻内容</span>
        NewsContentFragment newsContentFragment <span class="token operator">=</span> <span class="token punctuation">(</span>NewsContentFragment<span class="token punctuation">)</span>
                <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFragmentById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsContentFragment<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>newsTitle<span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//刷新NewsContentFragment界面</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/10/AndroidDevelopment08/1631265768592.png"></p>
<p><strong>news_item布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>singleLine</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>ellipsize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingRight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ellipse：文本的缩略方式（end：在尾部缩略）</p>
<p><strong>NewsTitleFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsTitleFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isTwoPane<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_title_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityCreated</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityCreated</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_layout<span class="token punctuation">)</span><span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            isTwoPane <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            isTwoPane <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过能否找到news_content_layout来判断当前是双页还是单页</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle_layout<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsTitleFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>单页指挥加载一个碎片</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_title_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsTitleFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content_layout<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        &lt;fragment
            android:id="@+id/news_content_fragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>双页加载</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fragment</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（六）广播</title>
    <url>/2021/09/13/AndroidDevelopment09/</url>
    <content><![CDATA[<h2 id="广播机制简介"><a href="#广播机制简介" class="headerlink" title="广播机制简介"></a>广播机制简介</h2><h4 id="标准广播（Normal-broadcasts）"><a href="#标准广播（Normal-broadcasts）" class="headerlink" title="标准广播（Normal broadcasts）"></a>标准广播（Normal broadcasts）</h4><p>完全异步执行的广播，广播发出后所有的广播接收器几乎在统一时刻收到这条广播信息，<strong>无法被截断</strong>。</p>
<p><img src="/2021/09/13/AndroidDevelopment09/image-20210914171353061.png"></p>
<h4 id="有序广播（Ordered-broadcasts"><a href="#有序广播（Ordered-broadcasts" class="headerlink" title="有序广播（Ordered broadcasts)"></a>有序广播（Ordered broadcasts)</h4><p>同步执行的广播，广播发出后，同一时刻只会有一个广播接收器能收到这条广播消息，当广播接收器中的逻辑执行完毕后，广播才会继续传递。</p>
<p><img src="/2021/09/13/AndroidDevelopment09/1631611053996.png"></p>
<h2 id="接收系统广播"><a href="#接收系统广播" class="headerlink" title="接收系统广播"></a>接收系统广播</h2><p>Android内置很多系统级别的广播，我们可以在应用程序中监听这些广播。这就需要广播接收器，下面将介绍其用法：</p>
<p>广播接受器可以对自己感兴趣的广播进行注册，这样当有相应广播发出时，接收器就能够收到。</p>
<p>注册广播的方式一般有两种，在代码中注册和在AndroidManifest.xml中注册，前者被称为动态注册，后者被称为静态注册</p>
<h3 id="动态注册监听网络变化"><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> IntentFilter intentFiler<span class="token punctuation">;</span>

    <span class="token keyword">private</span> NetworkChangeReceiver networkchangeReceiver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFiler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFiler<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"android.net.conn.CONNECTIVITY_CHANGE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        networkchangeReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NetworkChangeReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">,</span>intentFiler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">NetworkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network changes"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>定义类NetworkChangeReceiver继承自BroadcastReceiver，重写onReceive（）方法得到信息</p>
</li>
<li><p>在onCreat（）方法中创建IntentFiler的实例。添加监听的广播</p>
</li>
<li><p>创建NetworkChangeReceiver的实例</p>
</li>
<li><p>调用registerReceiver（）方法注册，将NetworkChangeReceive和InterFilter的实例传进去。</p>
</li>
<li><p>此时，NetworkChangeReceive就可以收到指定值的广播。</p>
</li>
<li><p>重写onDestroy（）方法，加入</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>取消注册</p>
</li>
</ol>
<p><strong>优化代码</strong></p>
<p>重写NetworkChangeReceiver类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">NetworkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ConnectivityManager connectivityManager <span class="token operator">=</span> <span class="token punctuation">(</span>ConnectivityManager<span class="token punctuation">)</span>
                <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>CONNECTIVITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        NetworkInfo networkInfo <span class="token operator">=</span> connectivityManager<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>networkInfo <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> networkInfo<span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network is available"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network is not available"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>通过getSystemService（）方法得到了ConnectivityManager的实例，这是一个系统服务类，专门用于管理网络连接。</li>
<li>调用ConnectivityManager的getActiveNetworkInfo（）方法得到NetworkInfo实例</li>
<li>接着调用NetworkInfo的isAvailable（）方法，判断是否有网络</li>
</ol>
<p>在AndroidManifest,xml文件中加入权限：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="静态注册实现开机启动"><a href="#静态注册实现开机启动" class="headerlink" title="静态注册实现开机启动"></a>静态注册实现开机启动</h3><p><strong>创建广播接收器</strong></p>
<p><img src="/2021/09/13/AndroidDevelopment09/image-20210914235953016.png"></p>
<p>Exported：是否允许广播接收器接受程序以外信息</p>
<p>Enabled：是否启用这个广播接收器</p>
<p><strong>修改BootCompleteReceiver中的代码</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootCompleteReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// TODO: This method is called when the BroadcastReceiver is receiving</span>
        <span class="token comment" spellcheck="true">// an Intent broadcast.</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"Boot Complete"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加权限</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.RECEIVE_BOOT_COMPLETED<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改AndroidManifest.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.BootCompleteReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.intent.action.BOOT_COMPLETED<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="发送自定义广播"><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h2><ol>
<li><p>新建广播接收器</p>
</li>
<li><p>在AndroidManifest.xml中</p>
</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.broadcasttest.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自定义广播名</p>
<ol start="3">
<li>发出对应的广播”com.example.broadcasttest.MY_BROADCAST”时接收器可以收到该广播</li>
</ol>
<h4 id="对于无法接收静态广播的情况（Android-8-0后）："><a href="#对于无法接收静态广播的情况（Android-8-0后）：" class="headerlink" title="对于无法接收静态广播的情况（Android 8.0后）："></a>对于无法接收静态广播的情况（Android 8.0后）：</h4><p>加入</p>
<pre class="line-numbers language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"包名"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="发送有序广播"><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h2><ol>
<li>将sendBroadcast()方法改为sendOrderBroadcast()方法，接收intent和null</li>
<li>设置优先级</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span> <span class="token attr-name"><span class="token namespace">android:</span>priority</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.broadcasttest01.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>截断代码，在OnReceive()方法中添加abortBroadcast（）方法。</li>
</ol>
<h2 id="使用本地广播"><a href="#使用本地广播" class="headerlink" title="使用本地广播"></a>使用本地广播</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> IntentFilter intentFilter<span class="token punctuation">;</span>

    <span class="token keyword">private</span> LocalReceiver localReceiver<span class="token punctuation">;</span>

    <span class="token keyword">private</span> LocalBroadcastManager localBroadcastManager<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button button <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager <span class="token operator">=</span> LocalBroadcastManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                localBroadcastManager<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocalReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager<span class="token punctuation">.</span><span class="token function">registerReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager<span class="token punctuation">.</span><span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">LocalReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"received in local broadcast"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>主要使用一个LocalBroadcastManager来对广播进行管理</p>
<ol>
<li><p>新建类LocalReceiver继承自BroadcastReceiver()</p>
</li>
<li><p>通过LocalBroadcastManager.getInstance(this)方法得到实例</p>
</li>
<li><p>调用LocalBroadcastManager的registerReceiver()方法注册广播接收器</p>
</li>
<li><p>调用localBroadcastManager.sendBroadcast()方法发送广播</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Broadcast</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（六）广播的最佳实例</title>
    <url>/2021/09/14/AndroidDevelopment10/</url>
    <content><![CDATA[<h2 id="创建AcitivityCollector类"><a href="#创建AcitivityCollector类" class="headerlink" title="创建AcitivityCollector类"></a>创建AcitivityCollector类</h2><p>管理所有活动</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityCollector</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>Activity<span class="token operator">></span> activities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addActivity</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span><span class="token punctuation">{</span>
        activities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeActivity</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span><span class="token punctuation">{</span>
        activities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>Activity activity<span class="token operator">:</span>activities<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>activities<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="创建BaseActivity作为所有活动父类"><a href="#创建BaseActivity作为所有活动父类" class="headerlink" title="创建BaseActivity作为所有活动父类"></a>创建BaseActivity作为所有活动父类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> ForceOffLineReceiver receiver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        IntentFilter intentFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        receiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForceOffLineReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>receiver<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
            receiver <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ActivityCollector<span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ActivityCollector<span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">ForceOffLineReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            AlertDialog<span class="token punctuation">.</span>Builder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Warning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"You are forced to be offline"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>DialogInterface dialogInterface<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ActivityCollector<span class="token punctuation">.</span><span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ForceOfflineReceiver"><a href="#ForceOfflineReceiver" class="headerlink" title="ForceOfflineReceiver"></a>ForceOfflineReceiver</h3><ol>
<li>使用AlertDialog.Builder来构建一个对话框</li>
<li>调用setCancelable（）方法将对话框设置为不可取消</li>
<li>调用setPositiveButton（）方法来给对话框注册确定按钮</li>
</ol>
<h2 id="修改LoginActivity类"><a href="#修改LoginActivity类" class="headerlink" title="修改LoginActivity类"></a>修改LoginActivity类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> EditText accountEdit<span class="token punctuation">;</span>
    <span class="token keyword">private</span> EditText passwordEdit<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Button login<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_login<span class="token punctuation">)</span><span class="token punctuation">;</span>
        accountEdit <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>
        passwordEdit <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        login <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span>
        login<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String account <span class="token operator">=</span> accountEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                String password <span class="token operator">=</span> passwordEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//密码是123456.用户名为admin</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"account or password is invalid"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="修改MainActivity中的代码"><a href="#修改MainActivity中的代码" class="headerlink" title="修改MainActivity中的代码"></a>修改MainActivity中的代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button forceOffline <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>force_offline<span class="token punctuation">)</span><span class="token punctuation">;</span>
        forceOffline<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Broadcast</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（七）MateraiDesign实践</title>
    <url>/2021/09/16/AndroidDevelopment11/</url>
    <content><![CDATA[<h1 id="Materai-Design实践"><a href="#Materai-Design实践" class="headerlink" title="Materai Design实践"></a>Materai Design实践</h1><h2 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h2><p><strong>themes.xml中的设置</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialTest<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat.Light.NoActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Primary brand color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/purple_500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/purple_700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Secondary brand color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/teal_200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/teal_700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Status bar color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:statusBarColor<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>l<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>?attr/colorPrimaryVariant<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Customize your theme here. --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/16/AndroidDevelopment11/image-20210916222400495.png"></p>
<p>除此之外还可一通过textColorPrimary\windowBackground和navigationBarColor等属性控制其他位置的颜色</p>
<p><strong>用ToolBar代替ActionBar中的代码</strong></p>
<p>更改activity_main.xml中的代码</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>popupTheme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Light<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>用xmlns.app指定了一个新的命名空间</li>
<li>用app.:popupTheme属性将弹出的菜单指定成单色主题</li>
</ol>
<p>更改MainActivity中的代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toolbar toolbar<span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>toolbar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setSupportActionBar</span><span class="token punctuation">(</span>toolbar<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在menu文件夹下新建toolbar.xml文件</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/backup<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Backup<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>always<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/delete<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ifRoom<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/settings<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Settings<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>never<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>showAsAction：</p>
<ol>
<li>always永远显示在toolbar中</li>
<li>ifRoom表示屏幕空间足够时在Toolbar中显示，不够就显示在菜单中</li>
<li>never表示永远显示在菜单中</li>
</ol>
<p>在onOptionsItemSelected()方法中处理各个按钮的点击事件</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onOptionsItemSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> MenuItem item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>backup<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Backup"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Delete"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>settings<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Settings"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>home<span class="token operator">:</span>
            mDrawerLayout<span class="token punctuation">.</span><span class="token function">openDrawer</span><span class="token punctuation">(</span>GravityCompat<span class="token punctuation">.</span>START<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="DrawerLayout"><a href="#DrawerLayout" class="headerlink" title="DrawerLayout"></a>DrawerLayout</h2><ol>
<li><p>在布局文件中使用DrawerLayout</p>
<p>第一个子控件是主界面，第二个是滑动菜单</p>
<p>在第二个子控件中设置layout_gravity以指定滑动方向</p>
</li>
<li><p>在Toolbar最左边加入导航按钮，点击按钮显示滑动菜单</p>
<pre class="line-numbers language-java"><code class="language-java">mDrawerLayout <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>drawer_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
ActionBar actionBar <span class="token operator">=</span> <span class="token function">getSupportActionBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>actionBar <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    actionBar<span class="token punctuation">.</span><span class="token function">setDisplayHomeAsUpEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示按钮</span>
    actionBar<span class="token punctuation">.</span><span class="token function">setHomeAsUpIndicator</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图标</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>并在前文说到的onOptionsItemSelected()方法中加入</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">case</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>home<span class="token operator">:</span>
    mDrawerLayout<span class="token punctuation">.</span><span class="token function">openDrawer</span><span class="token punctuation">(</span>GravityCompat<span class="token punctuation">.</span>START<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="NavigationView"><a href="#NavigationView" class="headerlink" title="NavigationView"></a>NavigationView</h2><ol>
<li><p>在dependencies中加入</p>
<pre><code>implementation &#39;de.hdodenhof:circleimageview:3.1.0&#39;
</code></pre>
</li>
<li><p>创建一个nav_menu.xml文件来设置菜单项</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name"><span class="token namespace">android:</span>checkableBehavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>single<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_call<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Call<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_friends<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Friends<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_location<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Location<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_mail<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mail<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_task<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tasks<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>整个headerLayout放头像，用户名</p>
<p>创建nav_header.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>de.hdodenhof.circleimageview.CircleImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/icon_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/head<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/icon_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentBottom</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>33dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginBottom</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tonygreendev@email.com<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/mail<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tony Green<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>14sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中CircleImageView用于将图片圆形化，用法与ImageView一样</p>
<ol start="4">
<li><p>将NavigationView放到DrawerLayout里作为滑动菜单（第二个子控件）</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.navigation.NavigationView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_view<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>start<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>headerLayout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/nav_header<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>menu</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@menu/nav_menu<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ol>
<p>显示效果：</p>
<img src="/2021/09/16/AndroidDevelopment11/image-20210920220459300.png" alt="image-20210920220459300" style="zoom: 50%;">

<h2 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h2><ol>
<li>在布局中添加FloatingActionButton</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.floatingactionbutton.FloatingActionButton</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fab<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom|end<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>elevation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/down<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​    其中layout_gravity控制控件的位置</p>
<p>​    elevation可调整其高度，控制投影效果</p>
<ol start="2">
<li><p>设置点击事件</p>
<pre class="line-numbers language-java"><code class="language-java">FloatingActionButton fab <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fab<span class="token punctuation">)</span><span class="token punctuation">;</span>
fab<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"Data deleted"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token string">"Undo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"Data restored"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这点和button相似</p>
</li>
</ol>
<p>显示效果</p>
<img src="/2021/09/16/AndroidDevelopment11/image-20210920220539856.png" alt="image-20210920220539856" style="zoom:50%;">

<h2 id="Snackbar"><a href="#Snackbar" class="headerlink" title="Snackbar"></a>Snackbar</h2><p>Snacker跟Toast的用法相似</p>
<pre class="line-numbers language-java"><code class="language-java">Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"Data deleted"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token string">"Undo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"Data restored"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>调用Snacker的make方法创建Snacker对象，make（）方法的第一个参数传入一个view，当前布局的任意一个即可Snacker会自动查找最外层布局。第二个是显示内容，第三个是显示时长。</p>
</li>
<li><p>调用setAction()方法来设置一个动作，第一个参数为显示内容，第二个为事件</p>
</li>
</ol>
<p>显示效果：</p>
<p><img src="/2021/09/16/AndroidDevelopment11/image-20210920220603763.png" alt="image-20210920220603763"></p>
<h2 id="CoordinatorLayout"><a href="#CoordinatorLayout" class="headerlink" title="CoordinatorLayout"></a>CoordinatorLayout</h2><p>用法跟FrameLayout一样</p>
<p>使用后会将Snackerbar的动态效果优化</p>
<h2 id="CardView"><a href="#CardView" class="headerlink" title="CardView"></a>CardView</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.cardview.widget.CardView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>cardCornerRadius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.cardview.widget.CardView</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>由于CardView没有方便的定位方式，所以再嵌套一个LinearLayout</p>
<h2 id="使用Glide加载图片"><a href="#使用Glide加载图片" class="headerlink" title="使用Glide加载图片"></a>使用Glide加载图片</h2><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Glide.with()传入一个Context、Activity或Fragment参数</p>
<p>再调用load（）方法去加载图片，最后再调用into（）方法将图片设置到一个具体的ImageView中</p>
<p>使用GridLayoutManager布局方式</p>
<h2 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h2><p>将Toolbar嵌套在AppBarLayout中可以有效解决toolbar被覆盖的问题</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.appbar.AppBarLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.appcompat.widget.Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_scrollFlags</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll|enterAlways|snap<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>popupTheme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Light<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>com.google.android.material.appbar.AppBarLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>app:layout_scrollFlags用于调节Toolbar隐藏或显示属性</p>
<h2 id="SwipeRefreshLayout"><a href="#SwipeRefreshLayout" class="headerlink" title="SwipeRefreshLayout"></a>SwipeRefreshLayout</h2><p>通过SwipeRefreshLayout实现下拉刷新</p>
<ol>
<li><p>在RecyclerView外面嵌套一层SwipeRefreshLayout实现自动下拉刷新功能</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/swipe_refresh<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>layout_behavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/appbar_scrolling_view_behavior<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/recycler_view<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_behavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/appbar_scrolling_view_behavior<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>在代码处添加具体的刷新逻辑</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> SwipeRefreshLayout swipeRefresh<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在onCreation（）加入</p>
<pre class="line-numbers language-java"><code class="language-java">swipeRefresh <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>swipe_refresh<span class="token punctuation">)</span><span class="token punctuation">;</span>
swipeRefresh<span class="token punctuation">.</span><span class="token function">setColorSchemeResources</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>design_default_color_on_primary<span class="token punctuation">)</span><span class="token punctuation">;</span>
swipeRefresh<span class="token punctuation">.</span><span class="token function">setOnRefreshListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SwipeRefreshLayout<span class="token punctuation">.</span>OnRefreshListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">refreshFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中onRefresh中添加具体刷新的操作</p>
</li>
</ol>
<h2 id="CollapsingToolbatLayout"><a href="#CollapsingToolbatLayout" class="headerlink" title="CollapsingToolbatLayout"></a>CollapsingToolbatLayout</h2><p>这个空间只能作为AppBarLayout的直接自布局来使用，而AppBarLayout又必须是CoordinatorLayout的子布局</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.appbar.CollapsingToolbarLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/collapsing_toolbar<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>contentScrim</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>layout_scrollFlags</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll|exitUntilCollapsed<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image_view<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_collapseMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parallax<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.appcompat.widget.Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_collapseMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pin<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>com.google.android.material.appbar.CollapsingToolbarLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>app:layout_collapseMode用于指定当前空间在CollapsingToolvarLayout折叠过程中的折叠模式，Toolbar指定成pin表示折叠时位置不变，ImageView指定成parallax，表示会在折叠过程中产生一定的错位偏移。</p>
<p>想要让背景图和系统状态栏融合，需要借助<strong>Android: fitsSystemWindows</strong>这个属性来实现。而且该部件的父布局都要设置</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>MateraiDesign</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（八）数据存储</title>
    <url>/2021/09/27/AndroidDevelopment12/</url>
    <content><![CDATA[<h1 id="SP-SharePreferences"><a href="#SP-SharePreferences" class="headerlink" title="SP(SharePreferences)"></a>SP(SharePreferences)</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> SharedPreferences <span class="token function">getSharedPreferences</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Stub!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>name：SP的名字</p>
<p>mode：SP保存时用的模式：</p>
<p>常规（每次保存都会更新）：Context.MODE_PRIVATE</p>
<p>追加（每次保存都会追加到后面）：Context.MODE_APPEND</p>
<h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>通过apply()方法添加</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveToSP</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span><span class="token punctuation">{</span>
    SharedPreferences sp <span class="token operator">=</span> <span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">"SPDerryName"</span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sp<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"DerryKey"</span><span class="token punctuation">,</span><span class="token string">"九阳神功"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加后出现如下文件夹</p>
<p><img src="/2021/09/27/AndroidDevelopment12/image-20211010164549464.png"></p>
<p>数据存放在xml文件中：</p>
<p><img src="/2021/09/27/AndroidDevelopment12/image-20211010165329481.png"></p>
<h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSPData</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    SharedPreferences sp <span class="token operator">=</span> <span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string">"SPDerryName"</span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    String value <span class="token operator">=</span> sp<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"DerryKey"</span><span class="token punctuation">,</span> <span class="token string">"默认值"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//假设DerryKey获取值为空，则使用默认值返回</span>
    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token operator">+</span>value<span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="SQLite"><a href="#SQLite" class="headerlink" title="SQLite"></a>SQLite</h1><h2 id="基本变量"><a href="#基本变量" class="headerlink" title="基本变量"></a>基本变量</h2><p>数据库名称</p>
<p>数据库版本号</p>
<h2 id="新建类继承于SQLiteHelper"><a href="#新建类继承于SQLiteHelper" class="headerlink" title="新建类继承于SQLiteHelper"></a>新建类继承于SQLiteHelper</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySqliteOpenHelper</span> <span class="token keyword">extends</span> <span class="token class-name">SQLiteOpenHelper</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> SQLiteOpenHelper mInstance<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> SQLiteOpenHelper <span class="token function">getmInstance</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>mInstance <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            mInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySqliteOpenHelper</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"derryDB.db"</span><span class="token punctuation">,</span>null<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mInstance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token function">MySqliteOpenHelper</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> String name<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> SQLiteDatabase<span class="token punctuation">.</span>CursorFactory factory<span class="token punctuation">,</span> <span class="token keyword">int</span> version<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">,</span> factory<span class="token punctuation">,</span> version<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//创建表 表数据初始化 数据库第一次创建时调用 不会重复创建 即此函数只执行一次</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>SQLiteDatabase sqLiteDatabase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//创建表：person表 _id name</span>

        <span class="token comment" spellcheck="true">//主键：primary key是唯一的</span>
        <span class="token comment" spellcheck="true">//自动增长关键字：autoincrement</span>
        <span class="token comment" spellcheck="true">//_id标准写法 主键只能是Integer类型</span>

        String sql <span class="token operator">=</span> <span class="token string">"create table persons(_id integer primary key autoincrement,name text)"</span><span class="token punctuation">;</span>

        sqLiteDatabase<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span>SQLiteDatabase sqLiteDatabase<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="创库、创表"><a href="#创库、创表" class="headerlink" title="创库、创表"></a>创库、创表</h2><pre class="line-numbers language-java"><code class="language-java">SQLiteOpenHelper helper <span class="token operator">=</span> MySqliteOpenHelper<span class="token punctuation">.</span><span class="token function">getmInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//Datebase 文件夹创建</span>
SQLiteDatabase readableDatebase <span class="token operator">=</span> helper<span class="token punctuation">.</span><span class="token function">getReadableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查询</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">query</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    SQLiteOpenHelper helper <span class="token operator">=</span> MySqliteOpenHelper<span class="token punctuation">.</span><span class="token function">getmInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    SQLiteDatabase db <span class="token operator">=</span> helper<span class="token punctuation">.</span><span class="token function">getReadableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//返回游标</span>
        Cursor cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">rawQuery</span><span class="token punctuation">(</span><span class="token string">"select * from persons"</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//迭代游标 往下移来遍历数据</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> _id <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"_id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token annotation punctuation">@SuppressLint</span><span class="token punctuation">(</span><span class="token string">"Range"</span><span class="token punctuation">)</span> String name <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"derry"</span><span class="token punctuation">,</span> <span class="token string">"query:_id "</span> <span class="token operator">+</span> _id <span class="token operator">+</span><span class="token string">"  name:"</span><span class="token operator">+</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">//游标关闭：</span>
        cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//插入数据</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    SQLiteOpenHelper helper <span class="token operator">=</span> MySqliteOpenHelper<span class="token punctuation">.</span><span class="token function">getmInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    SQLiteDatabase db <span class="token operator">=</span> helper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//插入语句</span>
        String sql <span class="token operator">=</span><span class="token string">"insert into persons(name) values('Derry老师')"</span><span class="token punctuation">;</span>

        db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//修改</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    SQLiteOpenHelper helper <span class="token operator">=</span> MySqliteOpenHelper<span class="token punctuation">.</span><span class="token function">getmInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    SQLiteDatabase db <span class="token operator">=</span> helper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        String sql <span class="token operator">=</span> <span class="token string">"update persons set name =? where _id =?"</span><span class="token punctuation">;</span>
        db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">"李连杰"</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/27/AndroidDevelopment12/image-20211012214032632.png"></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    SQLiteOpenHelper helper <span class="token operator">=</span> MySqliteOpenHelper<span class="token punctuation">.</span><span class="token function">getmInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    SQLiteDatabase db <span class="token operator">=</span> helper<span class="token punctuation">.</span><span class="token function">getWritableDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        String sql <span class="token operator">=</span> <span class="token string">"delete from persons where _id=?"</span><span class="token punctuation">;</span>
        db<span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    db<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/27/AndroidDevelopment12/image-20211012214533016.png"></p>
<h1 id="Room"><a href="#Room" class="headerlink" title="Room"></a>Room</h1><p>Room是对SQLite数据库的抽象封装，从而实现流畅地访问数据库</p>
<h2 id="Room的三角色"><a href="#Room的三角色" class="headerlink" title="Room的三角色"></a>Room的三角色</h2><p><strong>@Entity</strong>：表</p>
<p><strong>@DAO</strong>：对表进行增删改查</p>
<p><strong>@Datebase（数据库名字，版本号）</strong>：</p>
<h2 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a>Entity</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//一张表 (主键唯一、自动增长</span>
<span class="token annotation punctuation">@Entity</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@PrimaryKey</span><span class="token punctuation">(</span>autoGenerate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//设置自动增长</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>

    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"Student{"</span> <span class="token operator">+</span>
                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>
                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>
                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>
                <span class="token string">'}'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Dao"><a href="#Dao" class="headerlink" title="@Dao"></a>@Dao</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Dao</span><span class="token comment" spellcheck="true">//datebase access object == 对表进行增删改查</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Insert</span>
    <span class="token keyword">void</span> <span class="token function">insertStudents</span><span class="token punctuation">(</span>Student <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Update</span>
    <span class="token keyword">void</span> <span class="token function">updateStudents</span><span class="token punctuation">(</span>Student <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Delete</span>
    <span class="token keyword">void</span> <span class="token function">deleteAllStudents</span><span class="token punctuation">(</span>Student <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"DELETE FROM Student"</span><span class="token punctuation">)</span>
    <span class="token keyword">void</span> <span class="token function">deleteAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">"SELECT * FROM Student ORDER BY ID DESC"</span><span class="token punctuation">)</span>
    List<span class="token operator">&lt;</span>Student<span class="token operator">></span> <span class="token function">getAllStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Datebase"><a href="#Datebase" class="headerlink" title="@Datebase"></a>@Datebase</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//数据库关联前面的表、数据库信息</span>
<span class="token annotation punctuation">@Database</span><span class="token punctuation">(</span>entities <span class="token operator">=</span> <span class="token punctuation">{</span>Student<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span> <span class="token punctuation">,</span>version <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">StudentDatebase</span> <span class="token keyword">extends</span> <span class="token class-name">RoomDatabase</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> StudentDao <span class="token function">getStudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment" spellcheck="true">//单例模式 返回DB</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> StudentDatebase INSTANCE<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">synchronized</span> StudentDatebase <span class="token function">getInstance</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>INSTANCE <span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            INSTANCE <span class="token operator">=</span> Room<span class="token punctuation">.</span><span class="token function">databaseBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    StudentDatebase<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token string">"student_datebase"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> INSTANCE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="工具类DBEngine"><a href="#工具类DBEngine" class="headerlink" title="工具类DBEngine"></a>工具类DBEngine</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBEngine</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> StudentDao studentDao<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">DBEngine</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        StudentDatebase studentDatebase <span class="token operator">=</span> StudentDatebase<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        studentDao <span class="token operator">=</span> studentDatebase<span class="token punctuation">.</span><span class="token function">getStudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//插入</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertStudent</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">InsertAsyncTack</span><span class="token punctuation">(</span>studentDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InsertAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Student<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> StudentDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">InsertAsyncTack</span><span class="token punctuation">(</span>StudentDao studentDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> studentDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">insertStudents</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//更新</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateStudents</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">UpdateAsynTack</span><span class="token punctuation">(</span>studentDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>


    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UpdateAsynTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Student<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> StudentDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">UpdateAsynTack</span><span class="token punctuation">(</span>StudentDao studentDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> studentDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">updateStudents</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//删除</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteStudents</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">DeleteAsynTack</span><span class="token punctuation">(</span>studentDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DeleteAsynTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Student<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> StudentDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">DeleteAsynTack</span><span class="token punctuation">(</span>StudentDao studentDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> studentDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Student<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> students<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//有条件删除</span>
            dao<span class="token punctuation">.</span><span class="token function">deleteStudents</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//全部删除</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">DeleteAllAsyncTack</span><span class="token punctuation">(</span>studentDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DeleteAllAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Void<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> StudentDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">DeleteAllAsyncTack</span><span class="token punctuation">(</span>StudentDao studentDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> studentDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Void<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> voids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">deleteAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//查询</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">QueryAsyncTack</span><span class="token punctuation">(</span>studentDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">QueryAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Void<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> StudentDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">QueryAsyncTack</span><span class="token punctuation">(</span>StudentDao studentDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> studentDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Void<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> voids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            List<span class="token operator">&lt;</span>Student<span class="token operator">></span> allStudents <span class="token operator">=</span> dao<span class="token punctuation">.</span><span class="token function">getAllStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span>Student student <span class="token operator">:</span> allStudents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"Derry"</span><span class="token punctuation">,</span> <span class="token string">"doInBackground: 全部查询"</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>用法：</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> DBEngine dbEngine<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertAction</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Student student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Student student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dbEngine<span class="token punctuation">.</span><span class="token function">insertStudent</span><span class="token punctuation">(</span>student<span class="token punctuation">,</span>student1<span class="token punctuation">,</span>student2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateAction</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"lisi"</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dbEngine<span class="token punctuation">.</span><span class="token function">updateStudents</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryAction</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dbEngine<span class="token punctuation">.</span><span class="token function">queryAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAction</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dbEngine<span class="token punctuation">.</span><span class="token function">deleteStudents</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAllAction</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dbEngine<span class="token punctuation">.</span><span class="token function">deleteAllStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
  </entry>
  <entry>
    <title>安卓开发（九）PopupWindow那些事</title>
    <url>/2021/10/01/AndroidDevelopment13/</url>
    <content><![CDATA[<p>转载自：<a href="https://blog.csdn.net/harvic880925/article/details/49272285?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163307449116780269858046%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=163307449116780269858046&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~hot_rank-1-49272285.pc_v2_rank_blog_default&utm_term=popupwindow&spm=1018.2226.3001.4450">PopUpWindow使用详解(一)——基本使用</a></p>
<h2 id="PopupWindow的构造函数"><a href="#PopupWindow的构造函数" class="headerlink" title="PopupWindow的构造函数"></a>PopupWindow的构造函数</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//方法一：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span> <span class="token punctuation">(</span>Context context<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法二：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法三：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法四：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">boolean</span> focusable<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中contentView是设置的布局</p>
<h2 id="PopupWindow的常用方法"><a href="#PopupWindow的常用方法" class="headerlink" title="PopupWindow的常用方法"></a>PopupWindow的常用方法</h2><h3 id="显示PopupWindow"><a href="#显示PopupWindow" class="headerlink" title="显示PopupWindow"></a>显示PopupWindow</h3><pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">showAtLocation</span><span class="token punctuation">(</span>rootview<span class="token punctuation">,</span> Gravity<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>将PopupWindow放在父容器中，显示在BOTTOM的位置</p>
<h3 id="显示窗体showAsDropDown"><a href="#显示窗体showAsDropDown" class="headerlink" title="显示窗体showAsDropDown"></a>显示窗体showAsDropDown</h3><p><img src="/2021/10/01/AndroidDevelopment13/image-20211001160832054.png" alt="image-20211001160832054"></p>
<pre class="line-numbers language-java"><code class="language-java">mMenuTv <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>mMenuTv<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//mPopWindow.showAsDropDown(View anchor, int xoff, int yoff)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>其中mMenuTv是菜单控件</p>
<h3 id="为PopupWindow添加动画"><a href="#为PopupWindow添加动画" class="headerlink" title="为PopupWindow添加动画"></a>为PopupWindow添加动画</h3><pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setAnimationStyle</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>contextMenuAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="为菜单添加阴影"><a href="#为菜单添加阴影" class="headerlink" title="为菜单添加阴影"></a>为菜单添加阴影</h2><ol>
<li><p>在布局外层再包一层RelativeLayout，并添加半透明背景android:background=”#66000000”</p>
<p>此时设置的android:layout_width和android:layout_height是无意义的，会重新设置</p>
</li>
<li><p>添加代码</p>
<pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="setTouchable-boolean-touchable"><a href="#setTouchable-boolean-touchable" class="headerlink" title="setTouchable(boolean touchable)"></a>setTouchable(boolean touchable)</h3><p>设置PopupWindow是否响应touch事件，默认是true，如果设置为false，所有touch事件无响应，包括点击事件</p>
<h3 id="setFocusable-boolean-focusable"><a href="#setFocusable-boolean-focusable" class="headerlink" title="setFocusable(boolean focusable)"></a>setFocusable(boolean focusable)</h3><p>该函数的意义表示，PopupWindow是否具有获取焦点的能力，默认为False。一般来讲是没有用的，因为普通的控件是不需要获取焦点的，而对于EditText则不同，如果不能获取焦点，那么EditText将是无法编辑的。</p>
<h3 id="setOutsideTouchable-boolean-touchable"><a href="#setOutsideTouchable-boolean-touchable" class="headerlink" title="setOutsideTouchable(boolean touchable)"></a>setOutsideTouchable(boolean touchable)</h3><p>这个函数的意义，就是指，PopupWindow以外的区域是否可点击，即如果点击PopupWindow以外的区域，PopupWindow是否会消失。</p>
<pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BitmapDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">setOutsideTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>加上mPopWindow.setBackgroundDrawable(new BitmapDrawable());才可以点击</p>
<h3 id="setBackgroundDrawable-Drawable-background"><a href="#setBackgroundDrawable-Drawable-background" class="headerlink" title="setBackgroundDrawable(Drawable background)"></a>setBackgroundDrawable(Drawable background)</h3><p>只有加上它之后，PopupWindow才会对手机的返回按钮有响应：即，点击手机返回按钮，可以关闭PopupWindow；如果不加setBackgroundDrawable（）将关闭的PopupWindow所在的Activity.</p>
<p>可以填充进去各种Drawable,比如new BitmapDrawable()，new ColorDrawable(),等；</p>
<h2 id="设置各个控件的点击响应"><a href="#设置各个控件的点击响应" class="headerlink" title="设置各个控件的点击响应"></a>设置各个控件的点击响应</h2><pre class="line-numbers language-java"><code class="language-java">TextView tv1 <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span>contentView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>pop_computer<span class="token punctuation">)</span><span class="token punctuation">;</span>
tv1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>PopupWindow</tag>
      </tags>
  </entry>
  <entry>
    <title>AndroidDevelopment14</title>
    <url>/2021/10/01/AndroidDevelopment14/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>成电微记（一）-软件过程模型的选择</title>
    <url>/2021/09/06/DiaryInUESTC01/</url>
    <content><![CDATA[<p>在选择合适的软件过程模型之前，我们先了解几种常用的模型</p>
<h2 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h2><p>转载自：<a href="https://www.cnblogs.com/jojop/p/11801241.html">周二鸭</a></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>瀑布模型（经典生命模型）提出了软件开发的系统化的、顺序的方法。其流程从用户需求规格说明开始，通过策划、建模、构建和部署过程，最终提供一个完整的软件并提供持续的技术支持。</p>
<p><strong>模型特点</strong></p>
<ul>
<li>必须等前一阶段的工作完成之后，才能开始后一段的工作；</li>
<li>每一阶段都必须完成规定的文档，没有交出合格的文档就是没有完成该阶段的任务。</li>
<li>前一阶段的输出文档就是后一阶段的输入文档，因此，只有前一阶段的输出文档正确，后一阶段的工作才能得到正确的结果。</li>
<li>每个阶段结束前都要对所完成的文档进行评审，以便及早发现问题，改正错误。事实上越是早期阶段犯下的错误，暴露出来的时间就越晚，排除故障改正错误所需付出的代价也越高。因此，及时审查，是保证软件质量，降低软件成本的重要措施。</li>
</ul>
<p><strong>模型优点</strong>：</p>
<ul>
<li>强调了开发的阶段性，各阶段具有顺序性和依赖性</li>
<li>强调早期调研和需求分析，推迟编码实现的观点</li>
<li>提供了一个模板，这个模板使得分析、设计、编码、测试和支持的方法可以在该模板下有一个共同的指导。</li>
</ul>
<p><strong>模型局限</strong>：</p>
<ul>
<li>瀑布模型是一种线性模型，要求项目严格按规程推进，必须等到所有开发工作全部完成以后才能获得可以交付的软件产品。不能对软件系统进行快速创建，对于一些急于交付的软件系统的开发很不方便。</li>
<li>瀑布模型适合于需求明确，且无大的需求变更的软件开发（编译系统、操作系统等）。而对于分析初期需求模糊的项目，瀑布模型也并不适合。</li>
</ul>
<p><strong>适用场景</strong>：</p>
<p>适用于需求确定，无大的需求变更，工作能够采用线性的方式完成的软件。</p>
<hr>
<p>而在这个项目中我们使用的是基于瀑布模型之上的<strong>增量模型</strong></p>
<h2 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>增量模型融合了瀑布模型的基本成分和原型实现的迭代特征，它对软件过程的考虑是：在整体上按照瀑布模型的流程实施项目开发，以方便对项目的管理；但在软件的实际开发中，则将软件系统按功能分解为许多增减构件，并以构件为单位逐个地创建与交付，直到全部增量构件创建完成，并都被集成到系统之中交付用户使用。</p>
<p><strong>各阶段任务：</strong></p>
<ol>
<li>对整个系统进行需求分析和概要设计，确定系统基于增量构建的开发，以需求中构建的组成和关系为依据，完成对软件系统的体系结构设计。</li>
<li>进行增量构建的开发。对构建进行需求精细化，然后设计、编码、测试和有效性验证</li>
<li>将构建集成到系统，并对已经改变的系统进行有效性验证，继续下一个增量构建的开发</li>
</ol>
<p><strong>模型特点：</strong></p>
<ol>
<li>将软件系统模块化，分批地提交软件产品，用户可以及时了解软件项目的进展</li>
<li>降低了软件开发的风险，一个开发周期内的错误不会影响整个系统</li>
<li>开发顺序灵活。开发人员可以对组件的实现顺序进行优先级排序，先完成需求稳定的核心组件。当组件的优先级发生变化时，还能及时地对实现顺序进行调整。</li>
</ol>
<p><strong>适用场景：</strong></p>
<p>1、软件产品可以分批次地进行交付。</p>
<p>2、待开发的软件系统能够被模块化。</p>
<p>3、软件开发人员对应用领域不熟悉，难以一次性地进行系统开发。</p>
<p>4、项目管理人员把握全局的水平较高</p>
<hr>
<p>参考：<a href="https://baike.baidu.com/item/%E5%A2%9E%E9%87%8F%E6%A8%A1%E5%9E%8B/686083?fr=aladdin">增量模型</a></p>
<p>其他软件过程模型介绍：<a href="https://www.cnblogs.com/jojop/p/11801241.html">周二鸭</a></p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（二）需求分析</title>
    <url>/2021/09/09/DiaryInUESTC02/</url>
    <content><![CDATA[<h2 id="记账"><a href="#记账" class="headerlink" title="记账"></a>记账</h2><h3 id="收款"><a href="#收款" class="headerlink" title="收款"></a>收款</h3><ol>
<li><p>收款分类</p>
<ul>
<li>奖学金</li>
<li>零花钱</li>
<li>兼职</li>
<li>···</li>
</ul>
</li>
<li><p>接收收款的金额</p>
<ul>
<li>语音输入</li>
<li>文字输入</li>
<li>UI输入</li>
</ul>
</li>
<li><p>记录收款时间</p>
<ul>
<li>更改时间</li>
<li>自动读取系统时间</li>
</ul>
</li>
</ol>
<h3 id="付款"><a href="#付款" class="headerlink" title="付款"></a>付款</h3><ol>
<li><p>付款分类</p>
<ul>
<li>外卖</li>
<li>学习</li>
<li>娱乐</li>
<li>衣物</li>
<li>日用品</li>
<li>···</li>
</ul>
</li>
<li><p>接收付款的金额</p>
<ul>
<li>语音输入</li>
<li>文字输入</li>
<li>UI输入</li>
</ul>
</li>
<li><p>记录付款时间</p>
<ul>
<li>更改时间</li>
<li>自动读取系统时间</li>
</ul>
</li>
</ol>
<h3 id="预算"><a href="#预算" class="headerlink" title="预算"></a>预算</h3><ol>
<li>编辑预算<ul>
<li>分类</li>
</ul>
</li>
<li>计算预算的完成程度</li>
</ol>
<h3 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h3><ol>
<li>收款、付款、预算的增删改查</li>
<li>生成消费记录周、月报<ul>
<li>雷达图、圆饼图、柱状图···</li>
<li>日均消费</li>
<li>各个分类的消费情况</li>
</ul>
</li>
</ol>
<h3 id="优先级："><a href="#优先级：" class="headerlink" title="优先级："></a>优先级：</h3><p>收款=付款&gt;汇总&gt;预算</p>
<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><h3 id="记录待办事项"><a href="#记录待办事项" class="headerlink" title="记录待办事项"></a>记录待办事项</h3><ol>
<li>打字输入</li>
<li>语音输入</li>
</ol>
<h3 id="对代办事项进行管理"><a href="#对代办事项进行管理" class="headerlink" title="对代办事项进行管理"></a>对代办事项进行管理</h3><ol>
<li>基本的增删改</li>
</ol>
<h3 id="整理事项完成情况"><a href="#整理事项完成情况" class="headerlink" title="整理事项完成情况"></a>整理事项完成情况</h3><ol>
<li>显示完成情况图（柱状图、雷达图···）</li>
</ol>
<h3 id="ddl提示"><a href="#ddl提示" class="headerlink" title="ddl提示"></a>ddl提示</h3><ol>
<li>通知栏显示未完成事项</li>
</ol>
<h3 id="桌面模块"><a href="#桌面模块" class="headerlink" title="桌面模块"></a>桌面模块</h3><ol>
<li>在桌面以模块的形式显示todo列表</li>
</ol>
<h3 id="优先级：-1"><a href="#优先级：-1" class="headerlink" title="优先级："></a>优先级：</h3><p>记录待办事项&gt;管理待办事项&gt;整理完成情况&gt;ddl提示</p>
<h2 id="日记模块"><a href="#日记模块" class="headerlink" title="日记模块"></a>日记模块</h2><h3 id="基本需求："><a href="#基本需求：" class="headerlink" title="基本需求："></a>基本需求：</h3><ul>
<li>用户创建新日记</li>
<li>用户编辑日记</li>
<li>储存日记数据</li>
</ul>
<h3 id="进阶需求："><a href="#进阶需求：" class="headerlink" title="进阶需求："></a>进阶需求：</h3><ul>
<li>多种输入方式，多媒体（语音输入）</li>
<li>导出图片，pdf功能</li>
<li>历史日记展示</li>
</ul>
<h4 id="可实现ideas"><a href="#可实现ideas" class="headerlink" title="可实现ideas:"></a>可实现ideas:</h4><ul>
<li>创建时以随机颜色由加号点击后扩散到整个屏幕</li>
<li>切换颜色时可用圆形调色板或随机切换也是扩散方式加载</li>
<li>使用美工边框主题</li>
<li>增加去年今天故事回顾</li>
<li>每个日记添加心情、当天天气、写日记的时间</li>
<li>云同步（可以忽略）</li>
<li>随机调取一年中的回忆，生成照片或视频)</li>
</ul>
<h2 id="我的信息"><a href="#我的信息" class="headerlink" title="我的信息"></a>我的信息</h2><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><ol>
<li><p>登录功能</p>
<ul>
<li>验证密码</li>
<li>验证账号格式（邮箱）</li>
</ul>
</li>
<li><p>注册账号</p>
<p>手机/邮箱验证</p>
</li>
<li><p>新账号密码设置</p>
<ul>
<li>验证密码安全性</li>
</ul>
</li>
<li><p>个性化设置</p>
<ul>
<li>设置用户名称</li>
</ul>
</li>
</ol>
<ul>
<li>设置用户头像<ul>
<li>编辑用户个性签名</li>
<li>个性化主题、文字样式</li>
</ul>
</li>
</ul>
<ol start="5">
<li>查看注册时间</li>
</ol>
<h3 id="设置功能"><a href="#设置功能" class="headerlink" title="设置功能"></a>设置功能</h3><ol>
<li><p>待办事项截止提醒。</p>
</li>
<li><p>设定软件音量等。</p>
</li>
<li><p>开发者互动沟通功能。</p>
</li>
<li><p>查看隐私权政策。</p>
</li>
</ol>
<h3 id="优先级：-2"><a href="#优先级：-2" class="headerlink" title="优先级："></a>优先级：</h3><p>设置功能&gt;个人信息</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（三）创建github仓库</title>
    <url>/2021/09/11/DiaryInUESTC03/</url>
    <content><![CDATA[<h2 id="第一步：配置身份"><a href="#第一步：配置身份" class="headerlink" title="第一步：配置身份"></a>第一步：配置身份</h2><pre><code>gti config --global user.name&quot;Tony&quot;
git config --global user.email&quot;tony@gmail.com&quot;
</code></pre>
<h2 id="第二步：建立代码仓库"><a href="#第二步：建立代码仓库" class="headerlink" title="第二步：建立代码仓库"></a>第二步：建立代码仓库</h2><pre><code>git init
</code></pre>
<h2 id="第三步：提交本地代码"><a href="#第三步：提交本地代码" class="headerlink" title="第三步：提交本地代码"></a>第三步：提交本地代码</h2><p>add 是用于把想要提交的代码先添加进来，而 commit 则是真正地去执行提交操作</p>
<p>添加文件</p>
<pre><code>git add AndroidManifest.xml
</code></pre>
<p>添加文件夹</p>
<pre><code>git add src
</code></pre>
<p>添加全部文件</p>
<pre><code>git add .
</code></pre>
<p>提交</p>
<pre><code>git commit -m &quot;First commit.&quot;
</code></pre>
<p><strong>Tips</strong>：.gitignore文件中的说明忽略那些文件内容</p>
<p>例</p>
<pre><code>bin/
gen/
</code></pre>
<p>表示bin、gen目录下的所有文件全部忽略</p>
<p>查看文件修改情况</p>
<pre><code>git status
</code></pre>
<p>查看修改情况</p>
<pre><code>git diff
git diff 文件相对路径
</code></pre>
<p>撤销文件修改</p>
<pre><code>git checkout 文件相对路径
</code></pre>
<p>撤销文件添加</p>
<pre><code>git reset HEAD 相对路径
</code></pre>
<p>查看提交记录</p>
<pre><code>git log
</code></pre>
<h2 id="第四步：将代码托管到GitHub上"><a href="#第四步：将代码托管到GitHub上" class="headerlink" title="第四步：将代码托管到GitHub上"></a>第四步：将代码托管到GitHub上</h2><p>参考：<a href="https://blog.csdn.net/qq_43768946/article/details/90411154">JT.X</a></p>
<h3 id="配置-SSH-Key"><a href="#配置-SSH-Key" class="headerlink" title="配置 SSH Key"></a>配置 SSH Key</h3><pre><code>cd ~/.ssh
ls
或者
ll
//看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key
</code></pre>
<p>配置SSH Key</p>
<pre><code>ssh-keygen -t rsa -C “这里换上你的邮箱”
</code></pre>
<p>然后一直回车，生成密钥在/Users/.SSH中</p>
<p>在GitHub平台上添加SSH Key</p>
<p>测试通不通</p>
<pre><code>ssh -T git@github.com
</code></pre>
<h3 id="托管"><a href="#托管" class="headerlink" title="托管"></a>托管</h3><p>设置origin master</p>
<pre><code>git remote add origin ssh地址
</code></pre>
<p>将提交内容同步到远程版本库</p>
<pre><code>git add .
git commit -m &quot;First commit.&quot;
git push origin master
</code></pre>
<h2 id="第五步：分支的用法"><a href="#第五步：分支的用法" class="headerlink" title="第五步：分支的用法"></a>第五步：分支的用法</h2><p>在现有代码 的基础上开辟一个分叉口，使得代码可以在主干线和分支线上同时进行开发，且相互之间不 会影响。</p>
<p>建立分支</p>
<pre><code>git branch version1.0
</code></pre>
<p>检查分支</p>
<pre><code>git branch -a
</code></pre>
<p>合并操作</p>
<pre><code>git checkout master
git merge version1.0
</code></pre>
<p>将分支删除</p>
<pre><code>git branch -D version1.0
</code></pre>
<h2 id="第六步：与远程版本库协作"><a href="#第六步：与远程版本库协作" class="headerlink" title="第六步：与远程版本库协作"></a>第六步：与远程版本库协作</h2><p>下载代码</p>
<pre><code>git clone 项目网址
</code></pre>
<p>把本地内容同步到远程版本库</p>
<pre><code>git push origin master
</code></pre>
<p>将远程版本库代码同步到本地</p>
<pre><code>git fetch origin master
</code></pre>
<p>同步的代码不会合并到任何分支上，而是会存放在到一个 origin/master 分支上，这时我们可以通过 diff 命 令来查看远程版本库上到底修改了哪些东西</p>
<pre><code>git diff origin/master
</code></pre>
<p>之后再调用 merge 命令将 origin/master 分支上的修改合并到主分支上即可</p>
<pre><code>git merge origin/master
</code></pre>
<p>而 pull 命令则是相当于将 fetch 和 merge 这两个命令放在一起执行了，它可以从远程版本库上获取最新的代码并且合并到本地，用法如下所示：</p>
<pre><code>git pull origin master
</code></pre>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（四）对模板进行修改</title>
    <url>/2021/09/22/DiaryInUESTC04/</url>
    <content><![CDATA[<p><strong>选择Bottom Navigation Activity</strong></p>
<p><img src="/2021/09/22/DiaryInUESTC04/image-20210922152329323.png" alt="image-20210922152329323"> </p>
<p>对其中的代码进行修改：</p>
<p><img src="/2021/09/22/DiaryInUESTC04/image-20210922153116370.png" alt="image-20210922153116370"></p>
<p>该模版已经将各个布局的内容分开</p>
<p>以后的工作将在这个框架上进行</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（五）TODO界面的实现</title>
    <url>/2021/10/02/DiaryInUESTC05/</url>
    <content><![CDATA[<h2 id="step1：创建Todo类"><a href="#step1：创建Todo类" class="headerlink" title="step1：创建Todo类"></a>step1：创建Todo类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> ddl<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> selected<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Todo</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDdl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ddl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDdl</span><span class="token punctuation">(</span><span class="token keyword">int</span> ddl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ddl <span class="token operator">=</span> ddl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> selected<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="step2：添加recyclarView"><a href="#step2：添加recyclarView" class="headerlink" title="step2：添加recyclarView"></a>step2：添加recyclarView</h2><p>创建recyclarView的过程这里不再赘述，效果如下</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104008745.png" alt="1"></p>
<h2 id="step3：实现todo的点击效果"><a href="#step3：实现todo的点击效果" class="headerlink" title="step3：实现todo的点击效果"></a>step3：实现todo的点击效果</h2><p>在adapter的onBindViewHolder（）中添加点击事件</p>
<pre class="line-numbers language-java"><code class="language-java">holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>CompoundButton compoundButton<span class="token punctuation">,</span> <span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        todo<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>STRIKE_THRU_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加中划线</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string">"#C0C0C0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//修改字体颜色</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//恢复无划线</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string">"#000000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//恢复字体颜色</span>
        <span class="token punctuation">}</span>
        mTodoList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> todo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果如下：</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104701684.png"></p>
<h2 id="step4：添加悬浮按钮以及添加todo事件"><a href="#step4：添加悬浮按钮以及添加todo事件" class="headerlink" title="step4：添加悬浮按钮以及添加todo事件"></a>step4：添加悬浮按钮以及添加todo事件</h2><p>如何添加悬浮按钮这里不再阐述，效果如下：</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104855671.png"></p>
<p>在添加对应的点击事件时，一开始我打算将布局放在fragment上，但是在弹出返回栈时会直接切换到Diary界面。</p>
<p>于是选择通过新建activity实现，但是新建activity后原来todo界面的背景会被activity的背景覆盖，不太美观。</p>
<p>最后，我们决定通过popupWindow实现，这样就一次性解决了返回退出的几个问题。相关代码：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">load_popupwindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        View popView <span class="token operator">=</span> <span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_add_todo<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">PopupWindow</span><span class="token punctuation">(</span>popView<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span>ResourcesCompat<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>round_outline<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setOutsideTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//点击其它退出</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//可编辑todo</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setAnimationStyle</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>popupWindow_anim_style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置动画</span>

        <span class="token comment" spellcheck="true">//设置点击事件</span>
        EditText editText <span class="token operator">=</span> popView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>todo_edit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        editText<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"todo content"</span><span class="token punctuation">,</span>charSequence<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span>Editable editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Button button <span class="token operator">=</span> popView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_todo_button<span class="token punctuation">)</span><span class="token punctuation">;</span>

        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>view1 <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"已保存"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//            EventBus.getDefault().post(editText.getText().toString());</span>
            todoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Todo</span><span class="token punctuation">(</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将todo添加到第一个</span>
            <span class="token function">refreshTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            popupTodoAdd<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        popupTodoAdd<span class="token punctuation">.</span><span class="token function">showAtLocation</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Gravity<span class="token punctuation">.</span>CENTER<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果：</p>
<img src="/2021/10/02/DiaryInUESTC05/image-20211002105638844.png" style="zoom:50%;">



<h2 id="step5：将TODO添加到数据库"><a href="#step5：将TODO添加到数据库" class="headerlink" title="step5：将TODO添加到数据库"></a>step5：将TODO添加到数据库</h2><p>除了database和Dao类之外，在这里我还定义了一个TodoEngine类用于简化todo增删改查的操作，代码如下：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TodoEngine</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> TodoDao todoDao<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">TodoEngine</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        TodoDatabase todoDatabase <span class="token operator">=</span> TodoDatabase<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        todoDao <span class="token operator">=</span> todoDatabase<span class="token punctuation">.</span><span class="token function">getTodoDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//插入</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertTodo</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">InsertAsyncTack</span><span class="token punctuation">(</span>todoDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InsertAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> TodoDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">InsertAsyncTack</span><span class="token punctuation">(</span>TodoDao todoDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> todoDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">insertTodo</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//更新</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateTodos</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">UpdateAsyncTack</span><span class="token punctuation">(</span>todoDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UpdateAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> TodoDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">UpdateAsyncTack</span><span class="token punctuation">(</span>TodoDao todoDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> todoDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">updateTodos</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//删除</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteTodos</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">DeleteAsyncTack</span><span class="token punctuation">(</span>todoDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DeleteAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> TodoDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">DeleteAsyncTack</span><span class="token punctuation">(</span>TodoDao todoDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> todoDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Todo<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> todos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">deleteTodos</span><span class="token punctuation">(</span>todos<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token comment" spellcheck="true">//全部删除</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">DeleteAllAsyncTack</span><span class="token punctuation">(</span>todoDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DeleteAllAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Void<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> Void<span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> TodoDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">DeleteAllAsyncTack</span><span class="token punctuation">(</span>TodoDao todoDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> todoDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> Void <span class="token function">doInBackground</span><span class="token punctuation">(</span>Void<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> voids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao<span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//查询</span>
    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Todo<span class="token operator">></span> <span class="token function">queryAllTodos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        List<span class="token operator">&lt;</span>Todo<span class="token operator">></span> todoList <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            todoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryAsyncTack</span><span class="token punctuation">(</span>todoDao<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span>  todoList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">QueryAsyncTack</span> <span class="token keyword">extends</span> <span class="token class-name">AsyncTask</span><span class="token operator">&lt;</span>Void<span class="token punctuation">,</span> Void<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Todo<span class="token operator">>></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> TodoDao dao<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">QueryAsyncTack</span><span class="token punctuation">(</span>TodoDao todoDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dao <span class="token operator">=</span> todoDao<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> List<span class="token operator">&lt;</span>Todo<span class="token operator">></span> <span class="token function">doInBackground</span><span class="token punctuation">(</span>Void<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> voids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            List<span class="token operator">&lt;</span>Todo<span class="token operator">></span> todoList <span class="token operator">=</span> dao<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Todo todo <span class="token operator">:</span> todoList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token string">"TODO"</span><span class="token punctuation">,</span> todo<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> todoList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="step6：通过itemTouchHelper实现拖拽效果"><a href="#step6：通过itemTouchHelper实现拖拽效果" class="headerlink" title="step6：通过itemTouchHelper实现拖拽效果"></a>step6：通过itemTouchHelper实现拖拽效果</h2><p>定义todoItemTouchHelper继承自itemTouchHelper并且重写某些方法</p>
<p>在adapter中重写onItemMove和onItemDismiss实现todo项在recyclerView和数据库中的更新。</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（六）Bill界面的实现</title>
    <url>/2021/11/10/DiaryInUESTC06/</url>
    <content><![CDATA[<p>在<em>TODO界面的实现</em>中，我们对定义实体类和recyclerView已经有了一定的了解，Bill页面的基本原理也是跟TODO一样的，不过我在这里丰富了一些细节。</p>
<h2 id="recyclerView的嵌套"><a href="#recyclerView的嵌套" class="headerlink" title="recyclerView的嵌套"></a>recyclerView的嵌套</h2><p> 为了实现下图的效果，需要将一个recyclerView嵌套在另一个recyclerView中。</p>
<img src="/2021/11/10/DiaryInUESTC06/image-20211123235932489.png" style="zoom:67%;">

<p>原理是在外层adapter的onBindViewHolder中配置内层rv的adapter</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> BillDayAdapter<span class="token punctuation">.</span>ViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token comment" spellcheck="true">//加载另一个adapter</span>
    BillAdapter billAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BillAdapter</span><span class="token punctuation">(</span>mBillDayList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBillList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> LinearLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    layoutManager<span class="token punctuation">.</span><span class="token function">setStackFromEnd</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>billList<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>billList<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>billAdapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>billList<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="addBill窗口的实现"><a href="#addBill窗口的实现" class="headerlink" title="addBill窗口的实现"></a>addBill窗口的实现</h2><p>为了让用户输入更加方便，我在github上找了开源的圆形seekbar作为账单的输入。</p>
<p><a href="https://github.com/jenly1314/ArcSeekBar">seekBar网址</a></p>
<p>通过布局的setVisible()方法，可以动态切换在支出收入种类变更时的窗口下方的种类变化</p>
<p><img src="/2021/11/10/DiaryInUESTC06/image-20211124002407406.png"></p>
<p><img src="/2021/11/10/DiaryInUESTC06/image-20211124002426028.png"></p>
<h3 id="RadioGroup无法嵌套布局的问题解决"><a href="#RadioGroup无法嵌套布局的问题解决" class="headerlink" title="RadioGroup无法嵌套布局的问题解决"></a>RadioGroup无法嵌套布局的问题解决</h3><p>在查阅了stackOverFlow之后，发现这竟然是谷歌自己的问题，在RadioGroup中使用LinearLayout等布局时，布局中的radioButton不能被识别在RadioGroup中。</p>
<p>针对这个问题，我提出的方案是重写一个类MRadioGroup用于管理所有的radioButton，代码如下：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MRadioGroup</span> <span class="token punctuation">{</span>

    List<span class="token operator">&lt;</span>RadioButton<span class="token operator">></span> radios <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MRadioGroup</span><span class="token punctuation">(</span>RadioButton<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> radios<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>RadioButton rb <span class="token operator">:</span> radios<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rb <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                rb<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>onClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>radios<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>rb<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    View<span class="token punctuation">.</span>OnClickListener onClick <span class="token operator">=</span> v <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
        <span class="token function">clearCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        RadioButton rb <span class="token operator">=</span> <span class="token punctuation">(</span>RadioButton<span class="token punctuation">)</span> v<span class="token punctuation">;</span>
        rb<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>RadioButton rb <span class="token operator">:</span> radios<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            rb<span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCheck</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>id <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            radios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> radios<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>radios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果：</p>
<p><img src="/2021/11/10/DiaryInUESTC06/image-20211124002644054.png"></p>
<h2 id="点击账单切换到账单详情"><a href="#点击账单切换到账单详情" class="headerlink" title="点击账单切换到账单详情"></a>点击账单切换到账单详情</h2><p>直接在账单adapter中的onBindHolder()方法中添加点击事件即可：</p>
<pre class="line-numbers language-java"><code class="language-java">holder<span class="token punctuation">.</span>billCv<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> BillEditActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span>BillEditActivity<span class="token punctuation">.</span>Bill_ID<span class="token punctuation">,</span> bill<span class="token punctuation">.</span><span class="token function">getBillId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mContext<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果：</p>
<img src="/2021/11/10/DiaryInUESTC06/image-20211124003002420.png" style="zoom:67%;">



<h2 id="账单月报生成"><a href="#账单月报生成" class="headerlink" title="账单月报生成"></a>账单月报生成</h2><p>这里用了一个安卓图表的开源库<a href="https://github.com/PhilJay/MPAndroidChart">MPAndroidChart</a></p>
<p>简单配置后的实现效果：</p>
<img src="/2021/11/10/DiaryInUESTC06/image-20211124003321001.png" style="zoom:67%;">

<p>到这里，账单部分的核心功能就介绍完毕了！</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记（一）</title>
    <url>/2021/10/04/HTMLLearning01/</url>
    <content><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>Hyper Text Markup Language (超文本标记语言)</p>
<h2 id="HTML的基本结构"><a href="#HTML的基本结构" class="headerlink" title="HTML的基本结构"></a>HTML的基本结构</h2><p>使用规范：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>头部：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>meta标签：</p>
<p>描述性标签，一般用来做SEO（搜索引擎优化）</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>网页标题：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>主体部分：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注释：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--注释内容--></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="网页的基本标签"><a href="#网页的基本标签" class="headerlink" title="网页的基本标签"></a>网页的基本标签</h2><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>二级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>三级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>显示效果</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004144300601.png"></p>
<h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p>快捷键：p+TAB</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    第一行
    第一行
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>第二行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>第三行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>显示效果：</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004144544162.png"></p>
<h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><pre class="line-numbers language-html"><code class="language-html">第二行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="水平线标签"><a href="#水平线标签" class="headerlink" title="水平线标签"></a>水平线标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="粗体、斜体标签"><a href="#粗体、斜体标签" class="headerlink" title="粗体、斜体标签"></a>粗体、斜体标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>显示效果：</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004172448100.png"></p>
<h3 id="特殊符号标签"><a href="#特殊符号标签" class="headerlink" title="特殊符号标签"></a>特殊符号标签</h3><p>空格：</p>
<pre class="line-numbers language-html"><code class="language-html">空<span class="token entity" title="&nbsp;">&amp;nbsp;</span>格
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-html"><code class="language-html">大于 <span class="token entity" title="&gt;">&amp;gt;</span>
小于 <span class="token entity" title="&lt;">&amp;lt;</span>
版权号 <span class="token entity" title="&copy;">&amp;copy;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>y<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击我跳转到页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>href：表示跳转到那个页面</p>
<p>target：表示窗口在哪里打开</p>
<table>
<thead>
<tr>
<th>_blank</th>
<th>在新窗口中打开被链接文档。</th>
</tr>
</thead>
<tbody><tr>
<td>_self</td>
<td>默认。在相同的框架中打开被链接文档。</td>
</tr>
<tr>
<td>_parent</td>
<td>在父框架集中打开被链接文档。</td>
</tr>
<tr>
<td>_top</td>
<td>在整个窗口中打开被链接文档。</td>
</tr>
<tr>
<td><em>framename</em></td>
<td>在指定的框架中打开被链接文档。</td>
</tr>
</tbody></table>
<p><strong>锚定标签</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p><strong>有序列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006115700284.png"></p>
<p><strong>无序列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006115731828.png"></p>
<p><strong>自定义列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>subject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>C++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006120000026.png"></p>
<h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006135634359.png"></p>
<h3 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre><code>&lt;audio src=&quot;&quot;&gt;&lt;/audio&gt;
&lt;/body&gt;
</code></pre>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记（二）</title>
    <url>/2021/10/06/HTMLLearning02/</url>
    <content><![CDATA[<h2 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h2><p><img src="/2021/10/06/HTMLLearning02/image-20211006141016170.png" alt="image-20211006141016170"></p>
<h2 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>通过内联框架实现：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>name:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006144814808.png"></p>
<p><strong>表单的元素属性</strong></p>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006144904105.png"></p>
<h2 id="文本框和单选框："><a href="#文本框和单选框：" class="headerlink" title="文本框和单选框："></a>文本框和单选框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>男
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006152351801.png"></p>
<h2 id="多选框："><a href="#多选框：" class="headerlink" title="多选框："></a>多选框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    爱好：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006152722175.png"></p>
<h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>点击：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>long<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../resource/image/head.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153339386.png"></p>
<h2 id="下拉框"><a href="#下拉框" class="headerlink" title="下拉框"></a>下拉框</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153558069.png"></p>
<h2 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>反馈：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153908961.png"></p>
<h2 id="文件域"><a href="#文件域" class="headerlink" title="文件域"></a>文件域</h2><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006154258564.png"></p>
<h2 id="邮箱验证"><a href="#邮箱验证" class="headerlink" title="邮箱验证"></a>邮箱验证</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    邮箱：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    URL:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    数字：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
    <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006154847692.png"></p>
<h2 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>滑块：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>voice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006155034464.png"></p>
<h2 id="搜索框："><a href="#搜索框：" class="headerlink" title="搜索框："></a>搜索框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    搜索：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006155241101.png"></p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记（三）</title>
    <url>/2021/10/06/HTMLLearning03/</url>
    <content><![CDATA[<h1 id="表单的应用"><a href="#表单的应用" class="headerlink" title="表单的应用"></a>表单的应用</h1><h2 id="只读模式"><a href="#只读模式" class="headerlink" title="只读模式"></a>只读模式</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="隐藏域"><a href="#隐藏域" class="headerlink" title="隐藏域"></a>隐藏域</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006160703423.png"></p>
<h2 id="增强鼠标可用性"><a href="#增强鼠标可用性" class="headerlink" title="增强鼠标可用性"></a>增强鼠标可用性</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>你点我试试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006160925407.png"></p>
<h1 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h1><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>name:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006161748997.png"></p>
<p>required: 非空判断</p>
<p>pattern：正则表达式判断</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL01</title>
    <url>/2021/12/12/MySQL01/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>托福学习笔记</title>
    <url>/2021/08/29/TOEFL/</url>
    <content><![CDATA[<h1 id="试卷结构"><a href="#试卷结构" class="headerlink" title="试卷结构"></a>试卷结构</h1><p><img src="/2021/08/29/TOEFL/1.png"></p>
<h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><h2 id="阅读训练方法"><a href="#阅读训练方法" class="headerlink" title="阅读训练方法"></a>阅读训练方法</h2><p><img src="/2021/08/29/TOEFL/2.png"></p>
<h2 id="阅读技巧"><a href="#阅读技巧" class="headerlink" title="阅读技巧"></a>阅读技巧</h2><p>抓住句子主干</p>
<p><strong>句子主干三要素：</strong></p>
<ol>
<li>主角是谁</li>
<li>和谁发生关系</li>
<li>关系导致结果</li>
</ol>
<p><strong>段落结构：</strong></p>
<ol>
<li><p>段落主旨：</p>
<p>主旨信号：转折、对比、总结、强调、因果、定义、有问有答、顺序</p>
</li>
<li></li>
</ol>
<h2 id="难句归类"><a href="#难句归类" class="headerlink" title="难句归类"></a>难句归类</h2><p><img src="/2021/08/29/TOEFL/1631192712318.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192780192.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192765470.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192857942.png"></p>
<h2 id="单词积累"><a href="#单词积累" class="headerlink" title="单词积累"></a>单词积累</h2><p><img src="/2021/08/29/TOEFL/3.png"></p>
<p><img src="/2021/08/29/TOEFL/4.png"></p>
<h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><p>看图片进入状态</p>
<p>背单词不等同于阅读</p>
<h2 id="Lecture"><a href="#Lecture" class="headerlink" title="Lecture"></a>Lecture</h2><p>想象自己要听课而不是在考试</p>
<p>观察说明图例</p>
<p><img src="/2021/08/29/TOEFL/5.png"></p>
<p><img src="/2021/08/29/TOEFL/6.png"></p>
<h2 id="Conversation"><a href="#Conversation" class="headerlink" title="Conversation"></a>Conversation</h2><br>

<p><img src="/2021/08/29/TOEFL/7.png"></p>
<p><img src="/2021/08/29/TOEFL/8.png"></p>
<h2 id="训练计划："><a href="#训练计划：" class="headerlink" title="训练计划："></a>训练计划：</h2><p><img src="/2021/08/29/TOEFL/9.png"></p>
<p><img src="/2021/08/29/TOEFL/10.png"></p>
<p><img src="/2021/08/29/TOEFL/11.png"></p>
<p><img src="/2021/08/29/TOEFL/12.png"></p>
<h2 id="听力笔记要点"><a href="#听力笔记要点" class="headerlink" title="听力笔记要点"></a>听力笔记要点</h2><p><img src="/2021/08/29/TOEFL/13.png"></p>
<p><strong><a href="https://www.scientificamerican.com/podcast/">练习听力网址：https://www.scientificamerican.com/podcast</a></strong></p>
<h1 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h1><h2 id="口语考试安排"><a href="#口语考试安排" class="headerlink" title="口语考试安排"></a>口语考试安排</h2><p><img src="/2021/08/29/TOEFL/14.png"></p>
<h2 id="评分标准"><a href="#评分标准" class="headerlink" title="评分标准"></a>评分标准</h2><p><img src="/2021/08/29/TOEFL/15.png"></p>
<p><img src="/2021/08/29/TOEFL/16.png"></p>
<p><img src="/2021/08/29/TOEFL/17.png"></p>
<h2 id="各部分内容及解题步骤"><a href="#各部分内容及解题步骤" class="headerlink" title="各部分内容及解题步骤"></a>各部分内容及解题步骤</h2><h3 id="Task1"><a href="#Task1" class="headerlink" title="Task1"></a>Task1</h3><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><p><img src="/2021/08/29/TOEFL/20.png"></p>
<p><img src="/2021/08/29/TOEFL/22.png"></p>
<p><img src="/2021/08/29/TOEFL/23.png"></p>
<p><img src="/2021/08/29/TOEFL/24.png"></p>
<p><img src="/2021/08/29/TOEFL/25.png"></p>
<h3 id="Task2"><a href="#Task2" class="headerlink" title="Task2"></a>Task2</h3><h4 id="解题步骤-1"><a href="#解题步骤-1" class="headerlink" title="解题步骤"></a>解题步骤</h4><p><img src="/2021/08/29/TOEFL/26.png"></p>
<table>
<thead>
<tr>
<th>Step1</th>
<th>阅读45s</th>
<th>阅读笔记</th>
</tr>
</thead>
<tbody><tr>
<td>step2</td>
<td>听力对话</td>
<td>听力笔记：针对阅读中的主题，对话主导方是支持还是反对，以及支持或反对的理由。</td>
</tr>
<tr>
<td>step3</td>
<td>审题</td>
<td>Task2的提问大都相似。回答时必须抓住对话主导方的立场和相应理由。答题缺少逻辑或者理由缺少细节的会被扣分。</td>
</tr>
<tr>
<td>Step4</td>
<td>30s准备；60s答题</td>
<td>30s准备工作：标出关键词，确认答题结构，整理笔记</td>
</tr>
</tbody></table>
<h4 id="常用句式"><a href="#常用句式" class="headerlink" title="常用句式"></a>常用句式</h4><p><img src="/2021/08/29/TOEFL/32.png"></p>
<h4 id="时间分配"><a href="#时间分配" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/27.png"></p>
<h3 id="Task3"><a href="#Task3" class="headerlink" title="Task3"></a>Task3</h3><h4 id="解题步骤-2"><a href="#解题步骤-2" class="headerlink" title="解题步骤"></a>解题步骤</h4><table>
<thead>
<tr>
<th>Step1</th>
<th>阅读45s</th>
<th>阅读笔记：概括了解学术的原理、现象、概念</th>
</tr>
</thead>
<tbody><tr>
<td>Step2</td>
<td>听力讲座</td>
<td></td>
</tr>
<tr>
<td>Step3</td>
<td>审题</td>
<td>Task3的提问大都相似，要求我们负数讲座中对学术概念的展开讲解。我们在转述时要尽量全面地输出讲座中的例证细节。</td>
</tr>
<tr>
<td>Step4</td>
<td>30s准备；60s答题</td>
<td>30s准备工作：标出关键词，确认答题结构。笔记中几下的关键术语，努力记下发音，不要因为笔记而耽误听。</td>
</tr>
</tbody></table>
<h4 id="常用句式-1"><a href="#常用句式-1" class="headerlink" title="常用句式"></a>常用句式</h4><p><img src="/2021/08/29/TOEFL/33.png"></p>
<h4 id="时间分配-1"><a href="#时间分配-1" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/28.png"></p>
<h3 id="Task4"><a href="#Task4" class="headerlink" title="Task4"></a>Task4</h3><h4 id="解题步骤："><a href="#解题步骤：" class="headerlink" title="解题步骤："></a>解题步骤：</h4><table>
<thead>
<tr>
<th>Step1</th>
<th>听力对话</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Step2</td>
<td>审题</td>
<td>Task4的提问大都相似。要求归纳听力讲座的概念和展开细节。</td>
</tr>
</tbody></table>
<p><img src="/2021/08/29/TOEFL/29.png"></p>
<h4 id="时间分配-2"><a href="#时间分配-2" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/30.png"></p>
<h2 id="口语训练方法"><a href="#口语训练方法" class="headerlink" title="口语训练方法"></a>口语训练方法</h2><p><img src="/2021/08/29/TOEFL/18.png"></p>
<h3 id="发音练习教程："><a href="#发音练习教程：" class="headerlink" title="发音练习教程："></a>发音练习教程：</h3><p><img src="/2021/08/29/TOEFL/19.png"></p>
<img src="/2021/08/29/TOEFL/31.png" style="zoom: 67%;">

<p><a href="https://space.bilibili.com/631186842?from=search&seid=11633573194715022155">瑞秋教程</a></p>
<p><a href="https://www.bilibili.com/video/BV1Kb41117ud?from=search&seid=14125080769006400819">安迪教程：基础发音-&gt;句子发音</a></p>
<h3 id="训练规划"><a href="#训练规划" class="headerlink" title="训练规划"></a>训练规划</h3><img src="/2021/08/29/TOEFL/34.png" alt="34">

<h3 id="1v5策略："><a href="#1v5策略：" class="headerlink" title="1v5策略："></a>1v5策略：</h3><p>通过核心语料一次解决多个问题，一般在20-30套核心语料</p>
<h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p><img src="/2021/08/29/TOEFL/1630844989017.png"></p>
<h2 id="写作布局"><a href="#写作布局" class="headerlink" title="写作布局"></a>写作布局</h2><p><img src="/2021/08/29/TOEFL/1630852103390.png"></p>
<h2 id="机评算法"><a href="#机评算法" class="headerlink" title="机评算法"></a>机评算法</h2><h3 id="第一项-Organization-30-20-约9分"><a href="#第一项-Organization-30-20-约9分" class="headerlink" title="第一项 Organization,30%-20%,约9分"></a>第一项 Organization,30%-20%,约9分</h3><ol>
<li>枣核型结构【1个导入段+2或3个主题段+1个片尾总结段】</li>
<li>是否写3个主体段：因人而异</li>
</ol>
<h3 id="第二项-Development，28-30-，约9分"><a href="#第二项-Development，28-30-，约9分" class="headerlink" title="第二项 Development，28%-30%，约9分"></a>第二项 Development，28%-30%，约9分</h3><ol>
<li>篇首段两要素【背景导入+明确立场】</li>
<li>主体段三个要素【主旨句+论证细节+总结句】</li>
</ol>
<p><strong>建议：偏首背景导入不要单独分成一段，偏首段直接表明立场；</strong></p>
<p><strong>机评通过数据对比和学号定位确定分数段，请按模型写。</strong></p>
<h3 id="第三项-Mechanics，10-，约3分"><a href="#第三项-Mechanics，10-，约3分" class="headerlink" title="第三项 Mechanics，10%，约3分"></a>第三项 Mechanics，10%，约3分</h3><h4 id="最高三大失分项："><a href="#最高三大失分项：" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>拼写错误</li>
<li>缺少逗号</li>
<li>首字母大写</li>
</ol>
<h3 id="第四项-Usage，7-8-，约2-5分"><a href="#第四项-Usage，7-8-，约2-5分" class="headerlink" title="第四项 Usage，7%-8%，约2.5分"></a>第四项 Usage，7%-8%，约2.5分</h3><h4 id="最高三大失分项：-1"><a href="#最高三大失分项：-1" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>冠词错误</li>
<li>介词错误</li>
<li>动名混淆</li>
</ol>
<h3 id="第五项Grammer，7-8-，约2-5分"><a href="#第五项Grammer，7-8-，约2-5分" class="headerlink" title="第五项Grammer，7%-8%，约2.5分"></a>第五项Grammer，7%-8%，约2.5分</h3><h4 id="最高三大失分项：-2"><a href="#最高三大失分项：-2" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>主谓一致</li>
<li>动词时态错误</li>
<li> 无法辨认</li>
</ol>
<h3 id="第六项-Style，3-，约1分"><a href="#第六项-Style，3-，约1分" class="headerlink" title="第六项 Style，3%，约1分"></a>第六项 Style，3%，约1分</h3><h4 id="最高三大失分项：-3"><a href="#最高三大失分项：-3" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>重复使用一个词</li>
<li>过多被动语态</li>
<li>长句或短句太多</li>
</ol>
<p><strong>建议：避免使用一个词反复超过3次；</strong></p>
<p><strong>避免大于55个词和小于7个词的句子。</strong></p>
<h3 id="提分策略"><a href="#提分策略" class="headerlink" title="提分策略"></a>提分策略</h3><ol>
<li><p><strong>调整了词长词频：</strong>单词越长越生僻，得到点数越高</p>
<p><a href="www.thesaurus.com/browse/synonym">同义词网站：www.thesaurus.com/browse/synonym</a></p>
</li>
<li><p><strong>增加用词搭配权重7%：</strong>两个次的正确搭配显示</p>
<p><a href="https://prowritingaid.com/en/Collocation/Dictionary/?Word=">常用搭配在线词典：https://prowritingaid.com/en/Collocation/Dictionary/?Word=</a></p>
</li>
</ol>
<hr>
<p><a href="https://www.bilibili.com/video/BV1LW411v7Z6">B站原视频：【清北托福备考慕课】考托人手必备！(2020考试改革后新版)</a></p>
]]></content>
      <categories>
        <category>托福</category>
      </categories>
      <tags>
        <tag>托福</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>关于OpenSSL SSL_connect: Connection was reset in connection to github.com:443的解决方法</title>
    <url>/2021/12/11/gitQuestion01/</url>
    <content><![CDATA[<p>重新设置代理端口 </p>
<pre><code>git config --global http.proxy 127.0.0.1:4780
git config --global https.proxy 127.0.0.1:4780
</code></pre>
<p>已经设定的情况要先unset</p>
<pre><code>git config --global --unset http.proxy
git config --global --unset https.proxy
</code></pre>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>地址传送指令</title>
    <url>/2021/11/21/weiji01/</url>
    <content><![CDATA[<p>取近地址指针：LEA</p>
<p>取远地址指针：LES，LDS</p>
<h2 id="取偏移地址指令LEA"><a href="#取偏移地址指令LEA" class="headerlink" title="取偏移地址指令LEA"></a>取偏移地址指令LEA</h2><p>将变量的16位偏移地址写入到目标寄存器。</p>
<p>当程序中用符号表示内存偏移地址时，使用该指令。</p>
<h3 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h3><p>LEA REG,MEN</p>
<h3 id="指令要求："><a href="#指令要求：" class="headerlink" title="指令要求："></a>指令要求：</h3><p>源操作数必须是一个存储器操作数，目标操作数通常是间址寄存器</p>
<h3 id="LEA与MOV指令执行结果对比"><a href="#LEA与MOV指令执行结果对比" class="headerlink" title="LEA与MOV指令执行结果对比"></a>LEA与MOV指令执行结果对比</h3><img src="/2021/11/21/weiji01/image-20211121234014293.png" style="zoom: 33%;">

<p><strong>MOV AL , i</strong></p>
<p><strong>结果：AL=4</strong></p>
<p>MOV指令读取指定内存单元的内容    </p>
<p>源操作数为直接寻址方式</p>
<p><strong>LEA BX , i</strong></p>
<p><strong>结果：BX = i</strong></p>
<p>LEA指令读取指定内存单元的偏移地址（获取i值本身）</p>
<img src="/2021/11/21/weiji01/image-20211121234838209.png" alt="image-20211121234838209" style="zoom:33%;">

<p>LEA SI,DATA1</p>
<p>执行结果SI = DATA1</p>
<p>MOV BX,1100H</p>
<p>MOV AX,[BX]    -&gt;AX = 7788H    </p>
<p>LEA BX,[BX]    -&gt;BX = 1100H</p>
<h2 id="LDS、LES指令"><a href="#LDS、LES指令" class="headerlink" title="LDS、LES指令"></a>LDS、LES指令</h2><p>LDS和LES均用于将一个32位的远地址指针写入到目标寄存器</p>
<h3 id="LDS的一般格式："><a href="#LDS的一般格式：" class="headerlink" title="LDS的一般格式："></a>LDS的一般格式：</h3><p>LDS     通用寄存器, 存储器操作数</p>
<h3 id="LES的一般格式："><a href="#LES的一般格式：" class="headerlink" title="LES的一般格式："></a>LES的一般格式：</h3><p>LES     通用寄存器, 存储器操作数</p>
<p>除了将愿操作数的偏移地址送到目标寄存器外，还将源操作数的段地址送到ES</p>
<h2 id="标志传送指令"><a href="#标志传送指令" class="headerlink" title="标志传送指令"></a>标志传送指令</h2><p>隐含操作数AH：LAHF, SAHF</p>
<p>隐含操作数FLAGS：PUSHF, POPF</p>
<h3 id="LAHF-SAHF"><a href="#LAHF-SAHF" class="headerlink" title="LAHF,SAHF"></a>LAHF,SAHF</h3><p><strong>指令格式：</strong></p>
<p>LAHF</p>
<p><strong>将FLAGS的低8位装入AH</strong></p>
<p><img src="/2021/11/21/weiji01/image-20211122002248100.png"></p>
<p><strong>指令格式：</strong></p>
<p>SAHF</p>
<p><strong>将AH装入FLAGS的低8位（与LAHF相反）</strong></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS功能调用</title>
    <url>/2021/11/22/weiji02/</url>
    <content><![CDATA[<p>调用DOS功能时需要使用<strong>软中断指令INT 21H</strong>，并 在执行该指令之前，需要将调用的功能号送入寄存器AH中，有关的参量送入指定的寄存器。</p>
<h2 id="送入口参量到指定寄存器（可缺省）"><a href="#送入口参量到指定寄存器（可缺省）" class="headerlink" title="送入口参量到指定寄存器（可缺省）"></a>送入口参量到指定寄存器（可缺省）</h2><h3 id="带显示的键盘输入（1号功能）"><a href="#带显示的键盘输入（1号功能）" class="headerlink" title="带显示的键盘输入（1号功能）"></a>带显示的键盘输入（1号功能）</h3><p>该功能子程序将等待键盘输入，直到按下一个键。将字符的ASCII码送入AL寄存器，并在屏幕上显示该字符。</p>
<p>如果是ctrl-c，则停止程序，该功能调用无入口参量</p>
<p><strong>举例：</strong></p>
<img src="/2021/11/22/weiji02/image-20211122084920168.png" style="zoom: 67%;">



<h3 id="不带显示的键盘输入（8号功能）"><a href="#不带显示的键盘输入（8号功能）" class="headerlink" title="不带显示的键盘输入（8号功能）"></a>不带显示的键盘输入（8号功能）</h3><p>该功能调用与1号功能的作用相似，区别是8号功能将不显示输入的字符。该功能调用无入口参量。</p>
<p><strong>举例：</strong></p>
<img src="/2021/11/22/weiji02/image-20211122084958468.png" style="zoom:67%;">



<h3 id="不带显示的键盘字符输入（7号功能）"><a href="#不带显示的键盘字符输入（7号功能）" class="headerlink" title="不带显示的键盘字符输入（7号功能）"></a>不带显示的键盘字符输入（7号功能）</h3><p>该功能与8号功能相似，但对ctrl-c组合键和TAB制表符无反应。该功能调用无入口参量。</p>
<p><strong>举例</strong></p>
<img src="/2021/11/22/weiji02/image-20211122085158144.png" style="zoom:67%;">



]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>数据传送指令 MOV</title>
    <url>/2021/11/22/weiji03/</url>
    <content><![CDATA[<p>通用数据传送指令：一般数据传送指令，堆栈传送指令，交换指令，查表转换指令，字位扩展指令</p>
<p>输入输出指令</p>
<p>地址传送指令</p>
<p>标志传送指令</p>
<h3 id="一般数据传送指令MOV"><a href="#一般数据传送指令MOV" class="headerlink" title="一般数据传送指令MOV"></a>一般数据传送指令MOV</h3><p><strong>格式：</strong></p>
<p>MOV dest ,src</p>
<p><strong>操作：</strong></p>
<p>src - &gt; dest</p>
<p><strong>例：</strong></p>
<p>MOV AL,BL</p>
<p><strong>注意点：</strong></p>
<ol>
<li>两操作数字长必须相等</li>
<li>两操作数不允许同时为存储器操作数</li>
<li>两操作数不能同时为段寄存器</li>
<li>在源操作数是立即数时，目标操作数不能是段寄存器</li>
<li>IP和CS不作为目标操作数，FLAGS一般也不作为操作数在指令中出现</li>
</ol>
<p><strong>例：</strong></p>
<img src="/2021/11/22/weiji03/image-20211122104901933.png" style="zoom:67%;">

]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>堆栈操作指令</title>
    <url>/2021/11/22/weiji04/</url>
    <content><![CDATA[<p><strong>堆栈操作原则：</strong></p>
<p>先进后出</p>
<p>以字为单位</p>
<p><strong>堆栈操作指令：</strong></p>
<p>压栈指令：PUSH OPRD（16位寄存器或存储器两单元）</p>
<p>出栈指令：POP OPRD</p>
<h3 id="压栈操作"><a href="#压栈操作" class="headerlink" title="压栈操作"></a>压栈操作</h3><p><strong>指令执行过程：</strong></p>
<p>SP-2-&gt;SP</p>
<p>操作数高字节-&gt;SP+1</p>
<p>操作数低字节-&gt;SP</p>
<p><strong>例：</strong></p>
<img src="/2021/11/22/weiji04/image-20211122110508842.png" style="zoom: 67%;">



<h3 id="出栈操作"><a href="#出栈操作" class="headerlink" title="出栈操作"></a>出栈操作</h3><p><strong>指令执行过程：</strong></p>
<p>SP-&gt;操作数低地址</p>
<p>SP+1-&gt;操作数高地址</p>
<p>SP+2-&gt;SP</p>
<img src="/2021/11/22/weiji04/image-20211122111634482.png" style="zoom:67%;">



<h3 id="堆栈操作指令说明"><a href="#堆栈操作指令说明" class="headerlink" title="堆栈操作指令说明"></a>堆栈操作指令说明</h3><p>指令的操作数必须是16位</p>
<p>操作数可以是寄存器或存储器两单元，但不能是立即数</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>交换指令、查表指令与扩展指令</title>
    <url>/2021/11/22/weiji05/</url>
    <content><![CDATA[<h3 id="交换指令"><a href="#交换指令" class="headerlink" title="交换指令"></a>交换指令</h3><p><strong>格式：</strong></p>
<p>XCHG REG , MEN/REG</p>
<p><strong>注：</strong></p>
<p>两操作数必须有一个是寄存器操作数</p>
<p>不允许使用段寄存器</p>
<h3 id="查表指令"><a href="#查表指令" class="headerlink" title="查表指令"></a>查表指令</h3><p><strong>格式：</strong></p>
<p>XLAT</p>
<p><strong>说明：</strong></p>
<p>用BX的内容代表表格首地址，AL内容为表内位移量，BX+AL得到要查找元素的偏移地址。</p>
<p><strong>操作：</strong></p>
<p>将BX+AL所指单元的内容送AL</p>
<h3 id="字位扩展指令"><a href="#字位扩展指令" class="headerlink" title="字位扩展指令"></a>字位扩展指令</h3><p>将符号数的符号位扩展到高位；</p>
<p>指令为零操作数指令，采用隐含寻址，隐含的操作数为AX及AX,DX</p>
<p><strong>无符号数的扩展规则为在高位补0</strong></p>
<p><strong>格式：</strong></p>
<p>CBW</p>
<p><strong>操作：</strong></p>
<p>将AL内容扩展到AX</p>
<p><strong>规则：</strong></p>
<p>若最高位=1，则执行后AH = FFH</p>
<p>若最高位=0，则执行后AH = 00H</p>
<h3 id="字到双字的扩展指令："><a href="#字到双字的扩展指令：" class="headerlink" title="字到双字的扩展指令："></a>字到双字的扩展指令：</h3><p><strong>格式：</strong></p>
<p>CWD</p>
<p><strong>操作：</strong></p>
<p>将AX内容扩展到DX AX</p>
<p><strong>规则：</strong></p>
<p>若最高位=1，则执行后DX =FFFFH</p>
<p>若最高位=0， 则执行后DX=0000H</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>输入输出指令</title>
    <url>/2021/11/22/weiji06/</url>
    <content><![CDATA[<h3 id="关于I-O端口"><a href="#关于I-O端口" class="headerlink" title="关于I/O端口"></a>关于I/O端口</h3><p>I/O接口中用于存储数据，可以直接被CPU访问的寄存器</p>
<p>计算机输入输出系统可以包括若干接口控制电路（芯片），每个接口中都包括了1个或多个端口。</p>
<h3 id="输入输出指令"><a href="#输入输出指令" class="headerlink" title="输入输出指令"></a>输入输出指令</h3><p>专门面向I/O端口操作的指令</p>
<p>端口地址在指令中表示方式——寻址方式</p>
<p><strong>指令功能：</strong></p>
<p>从端口地址读入数据到累加器/将累加器的值输出到端口中</p>
<p><strong>指令格式：</strong></p>
<p>输入指令：IN ACC, PORT</p>
<p>输出指令：OUT PORT, acc</p>
<p><strong>指令寻址方式</strong></p>
<p>根据端口地址码的长度，指令具有两种不同的端口地址表现形式</p>
<p><strong>直接寻址：</strong></p>
<p>端口地址为8位，指令中直接给出8位端口地址；</p>
<p>寻址256个端口。</p>
<p><strong>间接寻址：</strong></p>
<p>端口地址为16位时，指令中的端口地址必须由DX指定</p>
<p>可寻址64K个端口。</p>
<p><strong>例子：</strong></p>
<img src="/2021/11/22/weiji06/image-20211122200457312.png" style="zoom:67%;">
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>加法运算指令</title>
    <url>/2021/11/22/weiji07/</url>
    <content><![CDATA[<h3 id="标志状态位"><a href="#标志状态位" class="headerlink" title="标志状态位"></a><strong>标志状态位</strong></h3><table>
<thead>
<tr>
<th><strong>CF</strong></th>
<th><strong>进位标志位：最高位产生进位为1，否则为0</strong></th>
<th><strong>SF</strong></th>
<th><strong>符号标志位：与运算结果的最高位</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>AF</strong></td>
<td><strong>辅助进位标志位：<br>(1)、在字操作时，发生低字节向高字节进位或错位时置1；<br>(2)、在字节操作时，发生低4位向高4位进位或错位时置1；</strong></td>
<td><strong>ZF</strong></td>
<td><strong>零标志：运算结果为0则置1，否则为0</strong></td>
</tr>
<tr>
<td><strong>PF</strong></td>
<td><strong>奇偶标志位：”1“的个数为偶数为1，否则为0（二进制后八位）</strong></td>
<td><strong>OF</strong></td>
<td><strong>溢出标志位：有溢出则为1，否则为0</strong></td>
</tr>
</tbody></table>
<h2 id="加法指令"><a href="#加法指令" class="headerlink" title="加法指令"></a>加法指令</h2><p> 普通加法指令ADD</p>
<p>带进位位的加法指令ADC</p>
<p>加1指令INC</p>
<p><strong>加法指令对操作数的要求与MOV完全一致</strong></p>
<h3 id="ADD指令"><a href="#ADD指令" class="headerlink" title="ADD指令"></a>ADD指令</h3><p><strong>格式：</strong></p>
<p>ADD OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>OPRD1+OPRD2-&gt;OPRD1</p>
<p><strong>ADD指令的执行对全部6个状态标志位都产生影响</strong></p>
<p>例：</p>
<img src="/2021/11/22/weiji07/image-20211122232043763.png" style="zoom:33%;">

 <img src="/2021/11/22/weiji07/image-20211122232224771.png" style="zoom: 50%;">



<h3 id="ADC指令"><a href="#ADC指令" class="headerlink" title="ADC指令"></a>ADC指令</h3><p>指令格式、对操作数的要求、对标志位的影响与ADD指令完全一样</p>
<p><strong>格式：</strong></p>
<p>ADC OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>OPRD1+OPRD2+CF-&gt;OPRD1</p>
<p><strong>ADC指令多用于多字节数相加，使用前要先将CF清零</strong></p>
<h3 id="INC指令"><a href="#INC指令" class="headerlink" title="INC指令"></a>INC指令</h3><p><strong>格式：</strong></p>
<p>INC OPRD</p>
<p>操作数不能是段寄存器，不能是立即数</p>
<p><strong>操作：</strong></p>
<p>OPRD+1-&gt;OPRD</p>
<p>INC指令的执行不影响CF，但会影响其余5个状态标志位</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>减法指令</title>
    <url>/2021/11/23/weiji08/</url>
    <content><![CDATA[<p>普通减法指令SUB</p>
<p>考虑借位的减法指令SBB</p>
<p>减1指令DEC</p>
<p>比较指令CMP</p>
<p>求补指令NEG</p>
<p><strong>减法指令对操作数的要求与对应的加法指令相同</strong></p>
<h3 id="SUB指令"><a href="#SUB指令" class="headerlink" title="SUB指令"></a>SUB指令</h3><p><strong>格式：</strong></p>
<p>SUB OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>OPRD1-OPRD2–&gt;OPRD1</p>
<p>对标志位的影响与ADD指令相同</p>
<h3 id="SBB指令"><a href="#SBB指令" class="headerlink" title="SBB指令"></a>SBB指令</h3><p>格式、对操作数的影响、对标志位的影响与SUB指令完全一样</p>
<p><strong>操作：</strong></p>
<p>OPRD1-OPRD2-CF-&gt;OPRD1</p>
<p><strong>SBB指令多用于两个多字节数的相减运算</strong></p>
<h3 id="DEC指令"><a href="#DEC指令" class="headerlink" title="DEC指令"></a>DEC指令</h3><p><strong>格式：</strong></p>
<p>DEC OPRD</p>
<p><strong>操作：</strong></p>
<p>OPRD-1 -&gt;OPRD</p>
<p><strong>指令对操作数的要求及对标志位的影响与INC相同</strong></p>
<p>指令常用于在程序中修改计数值</p>
<h3 id="NEG指令"><a href="#NEG指令" class="headerlink" title="NEG指令"></a>NEG指令</h3><p><strong>格式：</strong></p>
<p>NEG OPRD    （OPRD为8/16位寄存器或存储器操作数）</p>
<p><strong>操作：</strong></p>
<p>0-OPRD-&gt;OPRD</p>
<p><strong>对一个负数取补码就相当于用零减去此数</strong></p>
<p><strong>说明：</strong></p>
<p>执行NEG指令后，一般情况下都会使CF=1，除非给定的操作数为零才会使CF为0。</p>
<p>当指定的操作数的值是80H(-128)或为8000H（-32768），则执行NEG指令后，结果不变，但OF置1，其余情况OF置0.</p>
<p><strong>CMP指令</strong></p>
<p><strong>格式：</strong></p>
<p>CMP OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>OPRD1-OPRD2</p>
<p><strong>指令执行结果不影响目标操作数，仅影响标志位</strong></p>
<p><strong>用途：</strong></p>
<p>用于比较两个数的大小，可作为条件转义指令的条件</p>
<p>指令对操作数的要求及对标志位的影响与SUB指令相同</p>
<p><strong>例：</strong></p>
<p><img src="/2021/11/23/weiji08/image-20211123150610043.png"></p>
<p><img src="/2021/11/23/weiji08/image-20211123150717763.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>乘除运算指令</title>
    <url>/2021/11/23/weiji09/</url>
    <content><![CDATA[<p>有分别针对无符号和有符号数运算指令</p>
<p>乘除运算指令均采用隐含寻址方式</p>
<h2 id="乘法指令"><a href="#乘法指令" class="headerlink" title="乘法指令"></a>乘法指令</h2><p>无符号的乘法指令MUL</p>
<p>带符号的乘法指令IMUL</p>
<p><strong>注意点：</strong></p>
<p>乘法指令采用隐含寻址，隐含了存放被乘数的累加器AL或AX，以及存放结果的AX或AX,DX;</p>
<h3 id="MUL"><a href="#MUL" class="headerlink" title="MUL"></a>MUL</h3><p><strong>格式：</strong></p>
<p>MUL OPRD</p>
<p>OPRD不能是立即数</p>
<p>OPRD为字节数——&gt;AL*OPRD——&gt;AX</p>
<p>OPRD为16位数——&gt;AX*OPRD——&gt;DXAX（高符号位在DX）</p>
<img src="/2021/11/23/weiji09/image-20211123152553656.png" style="zoom: 67%;">



<h3 id="IMUL"><a href="#IMUL" class="headerlink" title="IMUL"></a>IMUL</h3><p><strong>格式：</strong></p>
<p>IMUL OPRD</p>
<p><strong>指令格式及对操作数的要求与MUL指令相同</strong></p>
<p><strong>指令执行原理：</strong></p>
<ol>
<li>将两个操作数取补码</li>
<li>做乘法运算</li>
</ol>
<h2 id="除法指令"><a href="#除法指令" class="headerlink" title="除法指令"></a>除法指令</h2><h3 id="无符号数除法指令"><a href="#无符号数除法指令" class="headerlink" title="无符号数除法指令"></a>无符号数除法指令</h3><p><strong>格式：</strong></p>
<p>DIDV OPRD</p>
<h3 id="有符号数除法指令"><a href="#有符号数除法指令" class="headerlink" title="有符号数除法指令"></a>有符号数除法指令</h3><p><strong>格式：</strong></p>
<p>IDIV OPRD</p>
<h3 id="除法指令的操作"><a href="#除法指令的操作" class="headerlink" title="除法指令的操作"></a>除法指令的操作</h3><img src="/2021/11/23/weiji09/image-20211123153641634.png" style="zoom: 80%;">



<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><strong>算数指令执行影响状态标志位</strong></p>
<p>INC和DEC指令的执行不会影响CF</p>
<p><strong>乘法指令执行结果为相乘数的双倍字长；除法指令要求被除数是除数的双倍字长。</strong></p>
<p><img src="/2021/11/23/weiji09/image-20211123154248154.png" alt="image-20211123154248154"></p>
<p><strong>全部双操作数指令对操作数的要求与MOV指令完全相同；</strong></p>
<p><strong>所有单操作数指令都要求操作数：</strong></p>
<ol>
<li>不能是立即数</li>
<li>如果是存储器操作数，需要声明操作数的字长（用PTR运算符）</li>
</ol>
<p><strong>乘法运算中，乘积是乘数的双倍字长</strong></p>
<p><strong>除法指令要求被除数是除数的双倍字长</strong></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>逻辑运算指令</title>
    <url>/2021/11/23/weiji10/</url>
    <content><![CDATA[<p><strong>对操作数的要求：</strong></p>
<p>大多与MOV指令相同</p>
<p>”非“运算指令要求操作数不能是立即数</p>
<p><strong>对标志位影响：</strong></p>
<p>除”非“运算指令，其余指令的执行都会影响除AF外的5个状态位标志</p>
<p>无论运算结果如何，都会使OF=CF=0</p>
<p>”非“运算指令的执行不影响标志位</p>
<h3 id="”与“指令："><a href="#”与“指令：" class="headerlink" title="”与“指令："></a>”与“指令：</h3><p><strong>格式：</strong></p>
<p>AND OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>两操作数相“与”，结果送目的地址</p>
<p><strong>应用：</strong></p>
<p>实现两操作数按位相”与“的运算：</p>
<p>AND BL,[SI]</p>
<p>使目的操作数的某些位不变，某些位清零：</p>
<p>AND AL, 0FH</p>
<p>在操作数不变的情况下使CF和OF清零：</p>
<p>AND AX,AX</p>
<h3 id="”或“指令"><a href="#”或“指令" class="headerlink" title="”或“指令"></a>”或“指令</h3><p><strong>格式：</strong></p>
<p>OR  OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>两操作数相”或“，结果送目标地址</p>
<p><strong>应用：</strong></p>
<p>实现两操作数相”或“的运算</p>
<p>OR AX,[DI]</p>
<p>使某些位不变，某些位置”1“</p>
<p>OR CL,0FH</p>
<p>在不改变操作数的情况下使OF = CF = 0</p>
<p>OR AX,AX</p>
<h3 id="”非“运算指令"><a href="#”非“运算指令" class="headerlink" title="”非“运算指令"></a>”非“运算指令</h3><p><strong>格式：</strong></p>
<p>NOT OPRD</p>
<p><strong>操作;</strong></p>
<p>操作数按位取反再送原地址</p>
<p><strong>注：</strong></p>
<p>指令的执行对标志位无影响</p>
<p><strong>例：</strong></p>
<p>NOT BYTE PTR[BX]</p>
<h3 id="“异或”运算指令"><a href="#“异或”运算指令" class="headerlink" title="“异或”运算指令"></a>“异或”运算指令</h3><p><strong>格式：</strong></p>
<p>XOR OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>两操作数相“异或”，结果送目标地址</p>
<p><strong>例：</strong></p>
<p>XOR BL,80H</p>
<p>XOR AX,AX（对AX清零）</p>
<h3 id="”测试“指令"><a href="#”测试“指令" class="headerlink" title="”测试“指令"></a>”测试“指令</h3><p><strong>格式：</strong></p>
<p>TEST OPRD1,OPRD2</p>
<p><strong>操作：</strong></p>
<p>执行”与“运算，但运算的结果不送回目的地址</p>
<p><strong>应用：</strong></p>
<p>常用于测试某些位的状态</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>串操作指令说明</title>
    <url>/2021/11/27/weiji12/</url>
    <content><![CDATA[<h3 id="串操作指令说明："><a href="#串操作指令说明：" class="headerlink" title="串操作指令说明："></a><strong>串操作指令说明：</strong></h3><p>针对数据块或字符串的操作</p>
<p>可实现存储器到存储器的数据传送</p>
<p>待操作的数据串称为源串，目标地址称为目的串</p>
<p>串操作指令的操作对象是多个字节数，因此指令的执行需要确定：</p>
<ol>
<li>串所在位置</li>
<li>串的首地址</li>
<li>串长度</li>
<li>串的操作方向</li>
</ol>
<h3 id="串操作的要求"><a href="#串操作的要求" class="headerlink" title="串操作的要求"></a>串操作的要求</h3><p><strong>串所在区域及首地址：</strong></p>
<p>源串一般存放在数据段，偏移地址由SI指定，允许段重设。</p>
<p>目标串必须在附加段，偏移地址由DI指定。</p>
<p><strong>串长度：</strong></p>
<p>串长度值由CX指定</p>
<p><strong>串的操作方向：</strong></p>
<p>由DF标志位决定。指令根据DF状态自动修改地址指针</p>
<p>DF=0-&gt;增地址方向</p>
<p>DF=1-&gt;减地址方向</p>
<p><img src="/2021/11/27/weiji12/image-20211127145134067.png"></p>
<h3 id="重复前缀"><a href="#重复前缀" class="headerlink" title="重复前缀"></a>重复前缀</h3><h4 id="无条件前缀"><a href="#无条件前缀" class="headerlink" title="无条件前缀"></a>无条件前缀</h4><p>REP</p>
<p>当CX不为0时，REP后的指令将继续执行</p>
<p>常用语传送类指令前-&gt;未传完则继续传送</p>
<h4 id="条件重复"><a href="#条件重复" class="headerlink" title="条件重复"></a>条件重复</h4><p>相等（为零）重复：REPE  (REPZ)</p>
<p>CX不为0并且ZF=1,则前缀后的指令将继续重复执行<img src="/2021/11/27/weiji12/image-20211127145935633.png"></p>
<h3 id="串操作指令流程"><a href="#串操作指令流程" class="headerlink" title="串操作指令流程"></a>串操作指令流程</h3><p><img src="/2021/11/27/weiji12/image-20211127150603868.png"></p>
<p><img src="/2021/11/27/weiji12/image-20211127151552001.png"></p>
<h2 id="串操作指令"><a href="#串操作指令" class="headerlink" title="串操作指令"></a>串操作指令</h2><h3 id="串传送MOVS"><a href="#串传送MOVS" class="headerlink" title="串传送MOVS"></a>串传送MOVS</h3><h3 id="串比较CMPS"><a href="#串比较CMPS" class="headerlink" title="串比较CMPS"></a>串比较CMPS</h3><h3 id="串扫描SCAS"><a href="#串扫描SCAS" class="headerlink" title="串扫描SCAS"></a>串扫描SCAS</h3><h3 id="串装入LODS"><a href="#串装入LODS" class="headerlink" title="串装入LODS"></a>串装入LODS</h3><h3 id="串送存STOS"><a href="#串送存STOS" class="headerlink" title="串送存STOS"></a>串送存STOS</h3>]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>移位操作指令</title>
    <url>/2021/11/24/weiji11/</url>
    <content><![CDATA[<p>控制二进制向左或向右移动的指令</p>
<p>非循环移位指令</p>
<p>循环移位指令</p>
<p><strong>指令说明：</strong></p>
<p>指令格式在形式上为双操作数，本质上为单操作数</p>
<p>指令的目标操作数为被移动对象，源操作数为移动次数</p>
<p><strong>当目标为存储器操作数时，需要说明其字长</strong></p>
<p>移动1位时由指令直接给出，移动两位及以上时，两位次数必须由CL指定，<strong>指令源操作数只能是1或CL</strong></p>
<h3 id="非循环移位指令"><a href="#非循环移位指令" class="headerlink" title="非循环移位指令"></a>非循环移位指令</h3><p>逻辑左移</p>
<p>算术左移</p>
<p>逻辑右移</p>
<p>算术右移</p>
<h4 id="算术左移："><a href="#算术左移：" class="headerlink" title="算术左移："></a>算术左移：</h4><p>针对有符号数</p>
<p>SAL OPRD, 1</p>
<p>SAL OPRD, CL</p>
<h4 id="逻辑左移："><a href="#逻辑左移：" class="headerlink" title="逻辑左移："></a>逻辑左移：</h4><p>针对无符号数</p>
<p>SHL OPRD, 1</p>
<p>SHL OPRD, CL</p>
<p><img src="/2021/11/24/weiji11/image-20211124153255155.png"></p>
<p><strong>每一次左移时最高位移至CF，右边补0</strong></p>
<h4 id="算术右移"><a href="#算术右移" class="headerlink" title="算术右移"></a>算术右移</h4><p>针对有符号数</p>
<p>SAR OPRD, 1</p>
<p>SAR OPRD, CL</p>
<p><strong>每一次右移时最低位移至CF,左边补0后将第一位变成符号位</strong></p>
<p><img src="/2021/11/24/weiji11/image-20211124153601761.png"></p>
<h4 id="逻辑右移"><a href="#逻辑右移" class="headerlink" title="逻辑右移"></a>逻辑右移</h4><p>针对无符号数</p>
<p>SHR OPRD, 1</p>
<p>SHR OPRD, CL</p>
<p><strong>每一次右移时最低位移至CF,左边补0</strong></p>
<p><img src="/2021/11/24/weiji11/image-20211124153316342.png"></p>
<h3 id="循环移位指令"><a href="#循环移位指令" class="headerlink" title="循环移位指令"></a>循环移位指令</h3><h4 id="不带进位位的循环移位"><a href="#不带进位位的循环移位" class="headerlink" title="不带进位位的循环移位"></a>不带进位位的循环移位</h4><p><img src="/2021/11/24/weiji11/image-20211124153847562.png"></p>
<p>左移：ROL</p>
<p>最高位移入CF, 同时最高位移到最低位</p>
<p>右移：ROR</p>
<p>对低位移入CF，同时最低位移到最高位</p>
<h4 id="带进位位的循环移位"><a href="#带进位位的循环移位" class="headerlink" title="带进位位的循环移位"></a>带进位位的循环移位</h4><p><img src="/2021/11/24/weiji11/image-20211124153900627.png"></p>
<p>左移：RCL</p>
<p>先把CF移入最低位，再将最高位移入CF</p>
<p>右移：RCR</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>具体串操作指令</title>
    <url>/2021/11/27/weiji13/</url>
    <content><![CDATA[<h3 id="串传送MOVS"><a href="#串传送MOVS" class="headerlink" title="串传送MOVS"></a>串传送MOVS</h3><p><strong>功能：</strong></p>
<p>将源数据串传送到目的地址</p>
<p><strong>格式;</strong></p>
<p>MOVS OPRD1,OPRD2 此格式仅用于源操作数需要段重设的情况下</p>
<p>MOVS [DI],  [SI]  </p>
<p>MOVSB 按字节传送</p>
<p>MOVSW 按字传送</p>
<p><strong>串传送指令常与无条件重复前缀连用</strong></p>
<p><strong>例子：</strong></p>
<p><img src="/2021/11/27/weiji13/image-20211127152309373.png"></p>
<p>MOVSB完成红框内前四条指令，也就是传送与修改指针</p>
<p>REP完成红框内后两条指令，判断条件</p>
<h3 id="串比较CMPS"><a href="#串比较CMPS" class="headerlink" title="串比较CMPS"></a>串比较CMPS</h3><p><strong>功能：</strong></p>
<p>用于实现两个数据串的比较</p>
<p><strong>操作：</strong></p>
<p>目标串-源串，结果不写回目的地址</p>
<p>常与条件重复前缀连用</p>
<p><strong>格式：</strong></p>
<p>CMPS OPRD1,OPRD2</p>
<p>CMPSB</p>
<p>CMPSW</p>
<p><strong>前缀的操作对标志位不影响</strong></p>
<p>例子：</p>
<img src="/2021/11/27/weiji13/image-20211127153212985.png" style="zoom:67%;">



<h3 id="串扫描SCAS"><a href="#串扫描SCAS" class="headerlink" title="串扫描SCAS"></a>串扫描SCAS</h3><p>常用于在指定存储区域中寻找某个关键字</p>
<p><strong>格式：</strong></p>
<p>SCAS OPRD</p>
<p>SCASB</p>
<p>SCASW</p>
<p><strong>执行与CMPS指令相似，区别是这里的源操作数地址是AX或AL</strong></p>
<p>例子：</p>
<p><img src="/2021/11/27/weiji13/image-20211127154929455.png"></p>
<p><img src="/2021/11/27/weiji13/image-20211127154947698.png"></p>
<h3 id="串装入LODS"><a href="#串装入LODS" class="headerlink" title="串装入LODS"></a>串装入LODS</h3><p>用于将内存某个区域的数据串依次装入累加器，以便显示或输出到接口</p>
<p>LODS指令一般不加重复前缀</p>
<p><strong>格式;</strong></p>
<p>LODS OPRD</p>
<p>LODSB</p>
<p>LODSW</p>
<p><strong>操作：</strong></p>
<p>对字节:AL &lt;-[DS:SI]</p>
<p>对字:Ax &lt;-[DS:SI]</p>
<p>修改SI</p>
<h3 id="串送存STOS"><a href="#串送存STOS" class="headerlink" title="串送存STOS"></a>串送存STOS</h3><p>常用于将内存某个区域置同样的值：</p>
<ol>
<li>将待送存的数据放入AL或AX</li>
<li>确定操作方向和区域大小</li>
<li>使用串存储指令+无条件重复前缀，实现数据传送。 </li>
</ol>
<p> <strong>格式：</strong></p>
<p>STOS OPRD</p>
<p>STOSB</p>
<p>STOSW</p>
<p><strong>操作：</strong></p>
<p>对字节：AL-&gt;[ES:DI]</p>
<p>对字：AX-&gt;[ES:DI]</p>
<h3 id="串操作指令应用注意事项"><a href="#串操作指令应用注意事项" class="headerlink" title="串操作指令应用注意事项"></a>串操作指令应用注意事项</h3><ol>
<li><p>需要定义附加段：目标操作数必须在附加段上</p>
</li>
<li><p>需要设置数据的操作方向：确认DF的状态</p>
</li>
<li><p>源串和目标串指针分别为SI和DI</p>
</li>
<li><p>串长度必须由CX给出</p>
</li>
<li><p>注意重复前缀的使用方法</p>
<p>传送类指令前加无条件重复前缀</p>
<p>串比较类指令前加条件重复前缀，但前缀不影响ZF状态</p>
</li>
</ol>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>程序控制类指令</title>
    <url>/2021/11/27/weiji14/</url>
    <content><![CDATA[<p><strong>程序控制类指令的本质是：控制程序的执行方向</strong></p>
<p><strong>决定程序执行方向的因素：CS,IP</strong>；同时修改CS和IP，会使程序走向另一个代码段执行</p>
<p>程序控制类指令以“隐含”的方式修改CS和IP，以实现控制程序走向的目的</p>
<p>通过修改IP或CS和IP，实现程序的三种基本控制结构：顺序，选择（分支），循环</p>
<p>学习程序控制类指令需要重点关注：如何实现对CS和IP的修改</p>
<h3 id="转移指令"><a href="#转移指令" class="headerlink" title="转移指令"></a>转移指令</h3><p>通过修改指令的偏移地址或段地址及偏移地址实现程序的转移</p>
<p>无条件转移指令：无条件转移到目标地址</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>转移指令</title>
    <url>/2021/11/27/weiji15/</url>
    <content><![CDATA[<h3 id="转移指令"><a href="#转移指令" class="headerlink" title="转移指令"></a>转移指令</h3><p>通过修改指令的偏移地址或段地址及偏移地址实现程序的转移</p>
<p>无条件转移指令：无条件转移到目标地址</p>
<p>条件转移指令：当具备一定条件（通常指状态标志位）时转移到目标地址</p>
<h4 id="无条件转移指令"><a href="#无条件转移指令" class="headerlink" title="无条件转移指令"></a>无条件转移指令</h4><p><strong>格式：</strong></p>
<p>JMP OPRD  可以实现在当前代码段内或段间转移</p>
<h5 id="无条件段内转移"><a href="#无条件段内转移" class="headerlink" title="无条件段内转移"></a>无条件段内转移</h5><p>JMP Label</p>
<p><img src="/2021/11/27/weiji15/image-20211127215736044.png"></p>
<p><img src="/2021/11/27/weiji15/image-20211127215746654.png"></p>
<p>例子</p>
<p><img src="/2021/11/27/weiji15/image-20211127215644741.png"></p>
<p><img src="/2021/11/27/weiji15/image-20211127215604067.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>循环控制指令</title>
    <url>/2021/11/27/weiji16/</url>
    <content><![CDATA[<p>循环范围：</p>
<p>以当前IP为中心的-128~+127范围内循环</p>
<p>循环次数由CX寄存器指定</p>
<h2 id="无条件循环指令"><a href="#无条件循环指令" class="headerlink" title="无条件循环指令"></a>无条件循环指令</h2><p><strong>格式：</strong></p>
<p>LOOP LABEL</p>
<p><strong>循环条件：</strong></p>
<p>CX!=0</p>
<p><strong>操作;</strong></p>
<p>完全相当于:</p>
<p>DEX CX</p>
<p>JNZ 符号地址</p>
<h3 id="条件循环指令"><a href="#条件循环指令" class="headerlink" title="条件循环指令"></a>条件循环指令</h3><p><strong>功能：</strong></p>
<p>先使CX-1，再根据CX中的值及ZF中的值来决定是否继续循环</p>
<p><strong>格式：</strong></p>
<img src="/2021/11/27/weiji16/image-20211127220618521.png" style="zoom:67%;">

<p>例子：</p>
<p><img src="/2021/11/27/weiji16/image-20211127220652302.png"></p>
<p><img src="/2021/11/27/weiji16/image-20211127220931345.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>过程调用指令</title>
    <url>/2021/11/27/weiji17/</url>
    <content><![CDATA[<p>用于调用一个子过程</p>
<p>与转移指令的比较：</p>
<p>子过程执行结束后要返回原调用处（必须保护返回地址）</p>
<p><img src="/2021/11/27/weiji17/image-20211127222330104.png"></p>
<h2 id="调用指令的执行过程"><a href="#调用指令的执行过程" class="headerlink" title="调用指令的执行过程"></a>调用指令的执行过程</h2><ol>
<li><p>保护断点</p>
<p>将调用指令的系一条指令的地址（断点）压入堆栈</p>
</li>
<li><p>获取子过程的入口地址</p>
<p>子过程第1条指令的地址</p>
</li>
<li><p>执行子过程</p>
</li>
<li><p>回复断点，返回原程序</p>
</li>
</ol>
<h2 id="过程调用"><a href="#过程调用" class="headerlink" title="过程调用"></a>过程调用</h2><h3 id="段内调用："><a href="#段内调用：" class="headerlink" title="段内调用："></a>段内调用：</h3><p>不用保护段基地址</p>
<p><strong>段内直接调用：</strong></p>
<p>CALL TIMRE</p>
<p><strong>段内间接调用：</strong></p>
<p>CALL WORD PTR[SI]</p>
<h3 id="段间调用"><a href="#段间调用" class="headerlink" title="段间调用"></a>段间调用</h3><p>保护段基地址和偏移地址</p>
<p>先将断点的CS压栈，再压入IP</p>
<p><strong>格式：</strong></p>
<p>CALL FAR TIMRE    直接</p>
<p>CALL DWORD PTR[SI]    间接</p>
<h2 id="返回指令"><a href="#返回指令" class="headerlink" title="返回指令"></a>返回指令</h2><p><strong>功能：</strong></p>
<p>从堆栈中弹出断点地址，返回原程序</p>
<p><strong>格式：</strong></p>
<p>RET</p>
<p><strong>子程序最后一条指令必须是RET</strong></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>中断控制指令</title>
    <url>/2021/11/27/weiji18/</url>
    <content><![CDATA[<p>1引起CPU产生一次中断的指令</p>
<p><strong>中断与过程调用</strong></p>
<p>相似点：</p>
<p>从一个正在执行的过程转向另一个过程（处理程序），并在执行完后返回原程序继续执行</p>
<p>区别：</p>
<ol>
<li>中断是随机事件或异常事件引起，调用是事先已在程序中安排的</li>
<li>调用指令在指令中直接给出子程序入口地址，中断指令只给出中断向量码，入口地址则在向量码指向的内存单元</li>
<li>调用可以是近过程调用或远过程调用，中断处理程序均为远过程</li>
<li>响应中断请求不仅要保护断点地址，还要保护FLAGS内容</li>
</ol>
<h2 id><a href="#" class="headerlink" title></a></h2><h2 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h2><ol>
<li><p>将FLAGS压入堆栈</p>
</li>
<li><p>将INT指令的下一条指令的CS,IP压栈</p>
</li>
<li><p>由n*4得到存放中断向量的地址</p>
</li>
<li><p>将中断向量送CS和IP寄存器</p>
</li>
<li><p>转入中断服务程序</p>
</li>
</ol>
<p><img src="/2021/11/27/weiji18/image-20211127235027657.png"></p>
<h2 id="中断指令"><a href="#中断指令" class="headerlink" title="中断指令"></a>中断指令</h2><p><strong>格式：</strong></p>
<p>INT n  （n=0~255,中断类型码）</p>
<p><strong>说明：</strong></p>
<p>n*4</p>
<p>存放中断服务子程序入口地址的单元的偏移地址</p>
<p><img src="/2021/11/27/weiji18/image-20211127234516409.png"></p>
<p>例子：</p>
<p><img src="/2021/11/27/weiji18/image-20211127235912869.png"></p>
<h2 id="中断返回指令"><a href="#中断返回指令" class="headerlink" title="中断返回指令"></a>中断返回指令</h2><p><strong>格式:</strong></p>
<p>IRET</p>
<p><strong>中断服务程序的最后一条指令，负责：</strong></p>
<ol>
<li>回复断点</li>
<li>回复标志寄存器内容</li>
</ol>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>指令系统小结</title>
    <url>/2021/11/28/weiji20/</url>
    <content><![CDATA[<p> <strong>基本概念</strong></p>
<p>指令中的操作数</p>
<p><strong>8种寻址方式</strong></p>
<p><strong>指令系统</strong></p>
<p>数据传送类，算术运算类，逻辑运算和移位，串操作，程序控制，处理器控制</p>
<h3 id="理解："><a href="#理解：" class="headerlink" title="理解："></a>理解：</h3><ol>
<li>指令的格式</li>
<li>不同类型指令对操作数的要求</li>
<li>不同类型指令的执行对标志位产生的影响</li>
<li>指令执行的原理：串操作指令，程序控制指令</li>
</ol>
<h3 id="关注点："><a href="#关注点：" class="headerlink" title="关注点："></a>关注点：</h3><ol>
<li><p>指令格式：单操作数，移位指令，串操作指令</p>
</li>
<li><p>操作数字长的一致性</p>
</li>
<li><p>一般情况下，条件转移指令应跟在对相应标志位影响的指令后</p>
</li>
<li><p>输入输出指令</p>
</li>
<li><p>程序控制类指令对堆栈区的影响</p>
</li>
<li><p>处理器控制指令的使用</p>
</li>
</ol>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>处理控制指令</title>
    <url>/2021/11/28/weiji19/</url>
    <content><![CDATA[<p>这类指令用来对CPU进行控制，如修改标志寄存器，使CPU暂停，使CPU与外部设备同步</p>
<p><img src="/2021/11/28/weiji19/image-20211128104818080.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编语言程序</title>
    <url>/2021/11/28/weiji21/</url>
    <content><![CDATA[<h3 id="汇编语言源程序与汇编程序"><a href="#汇编语言源程序与汇编程序" class="headerlink" title="汇编语言源程序与汇编程序"></a>汇编语言源程序与汇编程序</h3><p>汇编语言源程序————&gt;用助记符编写</p>
<p>汇编程序————&gt;源程序的编译程序</p>
<p><img src="/2021/11/28/weiji21/image-20211128111201964.png" alt="、"></p>
<h3 id="汇编语言程序设计与执行过程"><a href="#汇编语言程序设计与执行过程" class="headerlink" title="汇编语言程序设计与执行过程"></a>汇编语言程序设计与执行过程</h3><ol>
<li>输入汇编语言源程序（EDIT）—-&gt;源文件.ASM</li>
<li>汇编（MASM）—-&gt;目标文件（机器语言）.OBJ</li>
<li>链接（LINK）—-&gt;可执行文件.EXE</li>
<li>调试（TD）—-&gt;最终程序</li>
</ol>
<h3 id="汇编语言语句的语句类型和格式"><a href="#汇编语言语句的语句类型和格式" class="headerlink" title="汇编语言语句的语句类型和格式"></a>汇编语言语句的语句类型和格式</h3><h4 id="语句类型："><a href="#语句类型：" class="headerlink" title="语句类型："></a><strong>语句类型：</strong></h4><ol>
<li><p>指令性语句：CPU执行的语句，能够生成目标代码</p>
</li>
<li><p>指示性语句：CPU不执行，而由汇编程序执行的语句，不生成目标代码</p>
</li>
</ol>
<h4 id="格式："><a href="#格式：" class="headerlink" title="格式："></a>格式：</h4><p>指令性语句;</p>
<p><img src="/2021/11/28/weiji21/image-20211128111828074.png"></p>
<p>指示性语句：</p>
<p><img src="/2021/11/28/weiji21/image-20211128111921867.png"></p>
<h3 id="汇编语言语句中的操作数"><a href="#汇编语言语句中的操作数" class="headerlink" title="汇编语言语句中的操作数"></a>汇编语言语句中的操作数</h3><h4 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h4><h4 id="存储器单元"><a href="#存储器单元" class="headerlink" title="存储器单元"></a>存储器单元</h4><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><p>数字常量</p>
<p>字符串常量——–&gt;用单引号引起的字符或字符串</p>
<p>例：</p>
<p>MOV AL,’A’   ——&gt;AL=41H</p>
<p>例：</p>
<p>定义字符串：’ABCD’——-&gt;翻译成41H,42H,43H,44H</p>
<h4 id="变量或标号"><a href="#变量或标号" class="headerlink" title="变量或标号"></a>变量或标号</h4><p>内存单元的符号地址，为存储器操作数</p>
<p><strong>变量的属性：</strong></p>
<p>段值：变量所在段的段地址</p>
<p>偏移值：变量所指单元的偏移地址</p>
<p>类型：字节型，字型，双字型</p>
<h4 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h4><p>算术运算</p>
<p>逻辑运算</p>
<p>关系运算</p>
<p>其他运算</p>
<p><strong>取值运算符：</strong></p>
<p>获取变量的属性值：</p>
<p>OFFSET—&gt;取得其后变量或标号的偏移地址</p>
<p>SEG——–&gt;取得其后变量或标号的段地址</p>
<img src="/2021/11/28/weiji21/image-20211128161740723.png" style="zoom:67%;">



<p><strong>属性运算符：</strong></p>
<p>用于指定其后存储器操作数的类型</p>
<p>运算符：PTR</p>
<p><strong>例：</strong></p>
<p><img src="/2021/11/28/weiji21/image-20211128161917117.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>基本伪指令</title>
    <url>/2021/11/28/weiji22/</url>
    <content><![CDATA[<p>伪指令：由汇编程序执行的”指令系统“</p>
<p>作用：（帮助计算机理解助记符指令编写的汇编语言源程序）</p>
<ol>
<li>定义变量</li>
<li>分配存储区</li>
<li>定义逻辑段</li>
<li>指示程序开始和结束</li>
<li>定义过程等</li>
</ol>
<p>常用伪指令：</p>
<p><img src="/2021/11/28/weiji22/image-20211128171918208.png"></p>
<h3 id="数据定义伪指令"><a href="#数据定义伪指令" class="headerlink" title="数据定义伪指令"></a>数据定义伪指令</h3><p>用于定义数据区中变量的类型及其所占内存空间的大小</p>
<p><strong>格式：</strong> </p>
<img src="/2021/11/28/weiji22/image-20211128172146723.png" style="zoom:67%;">

<p><strong>变量的类型及其操作数的个数决定了该变量所在内存空间的大小</strong></p>
<h4 id="数据定义伪指令助记符："><a href="#数据定义伪指令助记符：" class="headerlink" title="数据定义伪指令助记符："></a>数据定义伪指令助记符：</h4> <img src="/2021/11/28/weiji22/image-20211128172313418.png" style="zoom:80%;">



<p>例子：</p>
<p><img src="/2021/11/28/weiji22/image-20211128172429229.png"></p>
<p><img src="/2021/11/28/weiji22/image-20211128192748217.png"></p>
<h4 id="数据定义伪指令的几点说明"><a href="#数据定义伪指令的几点说明" class="headerlink" title="数据定义伪指令的几点说明"></a>数据定义伪指令的几点说明</h4><ol>
<li><p>数据定义伪指令决定所定义变量的类型</p>
</li>
<li><p>定义字符串必须用DB伪指令</p>
<p>例：DATA1 DB ‘ABCD’,66H</p>
</li>
</ol>
<img src="/2021/11/28/weiji22/image-20211128193135435.png" style="zoom: 50%;">



<h3 id="重复操作符"><a href="#重复操作符" class="headerlink" title="重复操作符"></a>重复操作符</h3><p>当同样的操作数重复多次时，可以使用重复操作符</p>
<p><strong>作用：</strong></p>
<p>为一个数据区的各单元设置相同的初值</p>
<p><strong>格式：</strong></p>
<p><img src="/2021/11/28/weiji22/image-20211128193510343.png"></p>
<p>n为重复次数，圆括号内为重复内容</p>
<p><strong>例子：</strong></p>
<p>M1 DB 10 DUP (0)</p>
<p>表示以M1为首地址的10个字节单元，每个单元为0</p>
<p><strong>常用于声明一个数据区</strong></p>
<h4 id="”？“的作用"><a href="#”？“的作用" class="headerlink" title="”？“的作用"></a>”？“的作用</h4><p>表示随机值，用于预留存储空间</p>
<p>例1</p>
<p><img src="/2021/11/28/weiji22/image-20211128194207044.png"></p>
<p>例2</p>
<img src="/2021/11/28/weiji22/image-20211128194411252.png" style="zoom:67%;">

<img src="/2021/11/28/weiji22/image-20211128194439583.png" style="zoom:67%;">



<h3 id="符号定义伪指令"><a href="#符号定义伪指令" class="headerlink" title="符号定义伪指令"></a>符号定义伪指令</h3><p>将表达式的值赋给一个名字。当源程序中需要多次引用某一表达式时，可以利用EQU伪指令，用一个符号代替表达式，以便程序维护</p>
<p><strong>格式：</strong></p>
<p>符号名 EQU 表达式</p>
<p><strong>操作：</strong></p>
<p>用符号名取代后边的表达式，不可重新定义</p>
<p><strong>例：</strong></p>
<p>CONSTANT EQU 100</p>
<p><strong>EQU说明的表达式不占用内存空间，而声明变量则会有声明空间</strong></p>
<h3 id="段定义指令"><a href="#段定义指令" class="headerlink" title="段定义指令"></a>段定义指令</h3><p><strong>在汇编语言源程序中定义逻辑短</strong></p>
<ol>
<li>说明逻辑段的其实和结束</li>
<li>说明不同程序模块中同类逻辑短之间的联系形态</li>
</ol>
<p><strong>格式:</strong></p>
<p><img src="/2021/11/28/weiji22/image-20211128195743866.png"></p>
<p>类别：链接时不同程序模块中的同类逻辑段将被装入连续存储区</p>
<p><strong>例子：</strong></p>
<p><img src="/2021/11/28/weiji22/image-20211128200308192.png"></p>
<h3 id="设定段寄存器伪指令"><a href="#设定段寄存器伪指令" class="headerlink" title="设定段寄存器伪指令"></a>设定段寄存器伪指令</h3><p>说明所定义逻辑段的性质</p>
<img src="/2021/11/28/weiji22/image-20211128200408215.png" style="zoom: 67%;">



<h3 id="结束伪指令"><a href="#结束伪指令" class="headerlink" title="结束伪指令"></a>结束伪指令</h3><p>表示源程序结束</p>
<p><strong>格式：</strong></p>
<p>END [标号]</p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>其他伪指令</title>
    <url>/2021/11/28/weiji23/</url>
    <content><![CDATA[<h3 id="过程定义伪指令"><a href="#过程定义伪指令" class="headerlink" title="过程定义伪指令"></a>过程定义伪指令</h3><p>用于定义一个过程体</p>
<p><strong>格式：</strong></p>
<p><img src="/2021/11/28/weiji23/image-20211128202154209.png" alt="image-20211128202154209"></p>
<p>过程体最后一条指令必须是RET</p>
<p><strong>例子：</strong></p>
<img src="/2021/11/28/weiji23/image-20211128202449229.png" style="zoom:67%;">



<h3 id="宏命令伪指令"><a href="#宏命令伪指令" class="headerlink" title="宏命令伪指令"></a>宏命令伪指令</h3><p><strong>宏：</strong>源程序中由汇编程序识别的具有独立功能的一段程序代码</p>
<p>当源程序中需要多次使用同一个程序段时，可以将该程序段定义为一个宏</p>
<img src="/2021/11/28/weiji23/image-20211128203146398.png" style="zoom:67%;">

<p>例子：</p>
<p><img src="/2021/11/28/weiji23/image-20211128203244890.png"></p>
<h3 id="调整偏移量伪指令"><a href="#调整偏移量伪指令" class="headerlink" title="调整偏移量伪指令"></a>调整偏移量伪指令</h3><p>规定程序或变量在逻辑短中的起始地址</p>
<p><strong>默认情况下，程序或变量在逻辑短中的起始偏移地址为0</strong></p>
<p><strong>利用ORG指令可以改变程序或变量的其实偏移地址</strong></p>
<p><strong>格式：</strong></p>
<p><img src="/2021/11/28/weiji23/image-20211128203800502.png"></p>
<p><strong>例子</strong></p>
<p><img src="/2021/11/28/weiji23/image-20211128203842027.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>系统功能调用</title>
    <url>/2021/11/28/weiji24/</url>
    <content><![CDATA[<p><strong>BIOS：驻留在ROM中的基本输入/输出系统</strong></p>
<p>加电自检，装入引导，主要I/O设备处理程序及接口控制</p>
<p><strong>DOS：磁盘操作系统</strong></p>
<p><strong>DOS功能/BIOS功能调用是调用系统内核子程序</strong></p>
<p><strong>DOS功能和BIOS功能均通过中断方式调用</strong></p>
<h3 id="DOS软中断"><a href="#DOS软中断" class="headerlink" title="DOS软中断"></a>DOS软中断</h3><p>DOS中断包括：设备管理，目录管理，文件管理，其他用中断类型码区分</p>
<p>DOS中断说明：</p>
<ol>
<li>包含多个子功能的功能包</li>
<li>各子功能用功能号区分</li>
<li>用软中断指令调用，终端类型码固定为21H</li>
</ol>
<h3 id="DOS功能调用的基本步骤"><a href="#DOS功能调用的基本步骤" class="headerlink" title="DOS功能调用的基本步骤"></a>DOS功能调用的基本步骤</h3><ol>
<li>将调用参数装入指定的寄存器</li>
<li>将功能号装入AH</li>
<li>按中断类型号调用DOS中断</li>
<li>检查返回参数是否正确</li>
</ol>
<p><strong>调用格式：</strong></p>
<p><img src="/2021/11/28/weiji24/image-20211128205612211.png"></p>
<h3 id="DOS基本功能"><a href="#DOS基本功能" class="headerlink" title="DOS基本功能"></a>DOS基本功能</h3><h4 id="单字符输入"><a href="#单字符输入" class="headerlink" title="单字符输入"></a>单字符输入</h4><p>调用方法：</p>
<p>MOV AH 01</p>
<p>INT 21H</p>
<p>输入的字符在AL中</p>
<p><strong>例子：</strong></p>
<p><img src="/2021/11/28/weiji24/image-20211128205816424.png"></p>
<h4 id="字符串输入"><a href="#字符串输入" class="headerlink" title="字符串输入"></a>字符串输入</h4><p>接收由键盘输入一串字符</p>
<p>输入的字符串存储在内存知道区域中————&gt;字符输入缓冲区</p>
<p>用户自定义缓冲区格式</p>
<p><img src="/2021/11/28/weiji24/image-20211128210201757.png"></p>
<p>缓冲区最大255</p>
<p><strong>字符串输入功能号：10</strong></p>
<p><strong>缓冲区须定义在数据段</strong></p>
<p><strong>方法：</strong></p>
<p>AH&lt;—-功能号</p>
<p>DS:DX&lt;—–字符串在内存中的存放位置</p>
<p>INT 21H</p>
<p><strong>例子：</strong></p>
<p><img src="/2021/11/28/weiji24/image-20211128210641818.png"></p>
<p><img src="/2021/11/28/weiji24/image-20211128210833473.png"></p>
<p>定义20个最多输19个</p>
<h4 id="单字符显示输出"><a href="#单字符显示输出" class="headerlink" title="单字符显示输出"></a>单字符显示输出</h4><p>AH&lt;—-功能号2</p>
<p>DL&lt;—-待输出字符</p>
<p>INT 21H</p>
<p><img src="/2021/11/28/weiji24/image-20211128211350514.png"></p>
<h4 id="字符串显示输出"><a href="#字符串显示输出" class="headerlink" title="字符串显示输出"></a>字符串显示输出</h4><p>AH&lt;—-功能号09H</p>
<p>DS: DX&lt;—-带输出字符串的偏移地址</p>
<p>INT 21H</p>
<p><strong>注意点：</strong></p>
<ol>
<li>被显示的字符串必须以‘$’结束</li>
<li>所显示的内容不应该出现非可见的ASCII码</li>
<li>若考虑输出格式需要，在定义字符串后，加上回车符和换行符</li>
</ol>
<p><strong>例子：</strong></p>
<img src="/2021/11/28/weiji24/image-20211128211816518.png" style="zoom:67%;">

<p>0DH表示回车符，光标在冒号后面；0AH表示换行符，光标在下一行</p>
<h4 id="返回操作系统（DOS）功能"><a href="#返回操作系统（DOS）功能" class="headerlink" title="返回操作系统（DOS）功能"></a>返回操作系统（DOS）功能</h4><p>功能号：4CH</p>
<p><strong>调用格式：</strong></p>
<p>MOV AH,4CH</p>
<p>INT 21H </p>
<p><strong>功能：</strong></p>
<ol>
<li>程序执行完该两条语句后能正常返回OS</li>
<li>常位于程序结尾处</li>
</ol>
<h3 id="DOS功能调用小结"><a href="#DOS功能调用小结" class="headerlink" title="DOS功能调用小结"></a>DOS功能调用小结</h3><ol>
<li>通过中断指令调用。1个中断类型码对应1个功能程序包</li>
<li>每个程序包中的子功能通过功能号区分，调用时功能号须送AH</li>
<li>注意不同子功能的入口、出口参数要求；</li>
</ol>
<p><strong>DOS和BIOS中断均可能影响AX</strong></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>汇编程序设计实例</title>
    <url>/2021/11/28/weiji25/</url>
    <content><![CDATA[<p><img src="/2021/11/28/weiji25/image-20211128220111597.png"></p>
<p><img src="/2021/11/28/weiji25/image-20211128220129635.png"></p>
<p><img src="/2021/11/28/weiji25/image-20211128220140066.png"></p>
<p><img src="/2021/11/28/weiji25/image-20211128220149150.png"></p>
<p><img src="/2021/11/28/weiji25/image-20211128220200619.png"></p>
<p><img src="/2021/11/28/weiji25/image-20211128220215332.png"></p>
]]></content>
      <categories>
        <category>微机原理与接口技术</category>
      </categories>
      <tags>
        <tag>微机原理与接口技术</tag>
      </tags>
  </entry>
  <entry>
    <title>使用bison和flex完成语法分析器</title>
    <url>/2021/11/24/%E4%BD%BF%E7%94%A8bison%E5%92%8Cflex%E5%AE%8C%E6%88%90%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8/</url>
    <content><![CDATA[<h3 id="bison的结构"><a href="#bison的结构" class="headerlink" title="bison的结构"></a>bison的结构</h3><pre><code>%&#123;
 //自定义部分，会直接输出到.c文件中
%&#125;
 
/* declare tokens*/
//声明token
%token NUMBER

%%
//语法规则部分
expr:    NUMBER            &#123; $$ = $1; &#125;
    | expr &#39;+&#39; expr        &#123; $$ = $1 + $3; &#125;
%%
 
//c语言部分
</code></pre>
<p>语法规则中，｛$$ = $1 + $3｝为语义行为，上文中$1表示前面的expr， $3表示后面的expr</p>
]]></content>
  </entry>
  <entry>
    <title>四川大学望江校区考点攻略</title>
    <url>/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/</url>
    <content><![CDATA[<h2 id="四川大学望江校区考点攻略"><a href="#四川大学望江校区考点攻略" class="headerlink" title="四川大学望江校区考点攻略"></a>四川大学望江校区考点攻略</h2><h3 id="到达川大"><a href="#到达川大" class="headerlink" title="到达川大"></a>到达川大</h3><p>坐地铁到磨子桥站，从D口出来之后，沿着路直走</p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/%E6%89%98%E7%A6%8FIMG_20211210_160536.jpg" alt="磨子桥 D口"></p>
<p>一直走到第一个路口，可以看到马路对面的小米体验店</p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/Inked%E6%89%98%E7%A6%8FIMG_20211210_160901_LI.jpg" alt="小米旗舰店"></p>
<p>此时四川大学北门（规定入口）在你的斜对面</p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/qq_pic_merged_1639210272939.jpg" alt="路口"></p>
<p>到达<code>川大北门</code></p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/%E6%89%98%E7%A6%8FIMG_20211210_161517.jpg" alt="川大北门"></p>
<p>考试时要走左侧<code>考试通道</code></p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/%E6%89%98%E7%A6%8FIMG_20211210_161455.jpg" alt="考试通道"></p>
<h3 id="进入考场"><a href="#进入考场" class="headerlink" title="进入考场"></a>进入考场</h3><p><strong>ps：记得带<code>确认信</code>和<code>身份证</code>，并且有<code>48h核酸证明</code></strong></p>
<ol>
<li><p>在考试通道签名后有专门的电瓶车去<code>出国培训部大楼</code>。</p>
</li>
<li><p>在一楼大堂签名测温后拿<code>储物柜钥匙</code>、<code>检验清单</code>（一张记录人脸识别、安检那些的小纸条），到二楼。</p>
</li>
<li><p>储物柜处一定要看<code>储物规范</code>，主要可以带如下物品：</p>
<ul>
<li>身份证</li>
<li>储物柜钥匙</li>
<li>检验清单</li>
<li>饮料和食品（不能拿进考场，但可以拿到候考室）</li>
</ul>
<p><strong>可以带饮料和食品到3楼候考室！！！</strong></p>
<p><strong>可以带饮料和食品到3楼候考室！！！</strong></p>
<p><strong>可以带饮料和食品到3楼候考室！！！</strong></p>
</li>
</ol>
<h3 id="开始考试"><a href="#开始考试" class="headerlink" title="开始考试"></a>开始考试</h3><p>考试设备：</p>
<ul>
<li>普通头戴式耳机</li>
<li>铅笔（铅笔种类见下图）</li>
<li>机械键盘（按压力度小）</li>
<li>3张黄色草稿纸，比A4略小，不能要求添加但可以更换</li>
</ul>
<img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/image-20211211164547272.png" alt="淘宝随便找的" style="zoom: 50%;">





<ol>
<li><p>每个人的考试开始时间不一样。你的电脑界面有一个<code>confirm按钮</code>，按下后，输入<code>耳机号码</code>（一般在耳机框上），然后等待监考人员到你的电脑<code>输入密码</code>后正式开始考试。</p>
</li>
<li><p>考试过程中可以听到其他人的声音，特别是别人比你先做完的情况。做好心理准备！</p>
</li>
<li><p>做完阅读和听力后，举手示意，中间有<code>10min强制休息</code>时间（在候考室），可以吃自己的食物和饮料。</p>
</li>
<li><p>口语时，可以听到别人的声音，但影响不大（主观）</p>
</li>
<li><p>写作时，键盘声很大，而且很快。</p>
</li>
<li><p>考完后，即时出阅读和听力成绩，可选择<code>report score</code>和<code>cancel score</code>，选择完毕后考试结束。</p>
</li>
<li><p>排队坐电瓶车去门口。</p>
<p><strong>问清楚车去哪个门！！！</strong></p>
<p><strong>问清楚车去哪个门！！！</strong></p>
<p><strong>问清楚车去哪个门！！！</strong>别问我怎么知道的</p>
</li>
</ol>
<h3 id="住宿（仅供参考）"><a href="#住宿（仅供参考）" class="headerlink" title="住宿（仅供参考）"></a>住宿（仅供参考）</h3><p><strong>没有恰饭！！！</strong></p>
<p><strong>答案酒店，就在过来时的路口旁边，与地铁站同侧。</strong></p>
<p><strong>我住的时候大概是200一晚</strong></p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/qq_pic_merged_1639213291883.jpg" alt="答案酒店"></p>
<p><strong>住宿环境</strong></p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/%E6%89%98%E7%A6%8FIMG_20211210_162649.jpg"></p>
<p><img src="/2021/12/11/%E6%89%98%E7%A6%8F%E6%94%BB%E7%95%A5/%E6%89%98%E7%A6%8FIMG_20211210_162542.jpg"></p>
<p><strong>优点：</strong></p>
<p>早饭可以直接到楼下肯德基和麦当劳（但是午饭很多人）。</p>
<p>离川大北门、地铁站近。</p>
<p>13点退房，不耽误考试。（加试一项大概12点半考完）</p>
<p><strong>缺点：</strong></p>
<p>窗户隔音一般，建议让前台开背面的房间。</p>
<p>空调控制器总是响。</p>
<p><strong>祝考试顺利！</strong></p>
]]></content>
  </entry>
</search>
