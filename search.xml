<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安卓开发（三）UI组件—布局</title>
    <url>/2021/09/03/AndroidDevelopment01/</url>
    <content><![CDATA[<h1 id="布局管理器"><a href="#布局管理器" class="headerlink" title="布局管理器"></a>布局管理器</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol>
<li><p>线性布局</p>
</li>
<li><p>相对布局</p>
</li>
</ol>
<h2 id="线性布局（LinearLayout）"><a href="#线性布局（LinearLayout）" class="headerlink" title="线性布局（LinearLayout）"></a>线性布局（LinearLayout）</h2><h3 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h3><p><img src="/2021/09/03/AndroidDevelopment01/1630639147085.png"></p>
<p>layout_height、width：控制长、宽</p>
<p>layout_padding：控制边距</p>
<p>layout_orientation：排列方式（纵向、横向）</p>
<p>layout_margin：组件外边距</p>
<p>background：背景颜色</p>
<p>gravity：调整位置</p>
<p>layout_weight：权重</p>
<h2 id="相对布局（RelativeLayout）"><a href="#相对布局（RelativeLayout）" class="headerlink" title="相对布局（RelativeLayout）"></a>相对布局（RelativeLayout）</h2><h3 id="常用属性-1"><a href="#常用属性-1" class="headerlink" title="常用属性"></a>常用属性</h3><p><img src="/2021/09/03/AndroidDevelopment01/1630672158326.png"></p>
<p>layout_toRightOf：放在……右边</p>
<p>layout_align: 边缘对齐</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（二）UI组件—组件</title>
    <url>/2021/09/03/AndroidDevelopment02/</url>
    <content><![CDATA[<h1 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tv_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>maxLength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello World<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>drawableRight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/wechat<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>drawablePadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>24sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>singleLine</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>ellipsize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>marquee<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>focusableInTouchMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>drawableRight</td>
<td>右边显示图片</td>
</tr>
<tr>
<td>drawablePadding</td>
<td>图片间隔</td>
</tr>
<tr>
<td>textColor</td>
<td>文字颜色</td>
</tr>
<tr>
<td>textSize</td>
<td>文字大小</td>
</tr>
<tr>
<td>singleLine</td>
<td>在一行显示</td>
</tr>
<tr>
<td>ellipsize</td>
<td>跑马灯</td>
</tr>
<tr>
<td>focusableInTouchMode</td>
<td>可触摸</td>
</tr>
</tbody></table>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestViewActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> TextView mTv1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> TextView mTv2<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_test_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv1 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>STRIKE_THRU_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中划线</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>UNDERLINE_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//下划线</span>
        mTv1<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAntiAlias</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//去除锯齿</span>
        mTv2 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mTv2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Intent类"><a href="#Intent类" class="headerlink" title="Intent类"></a>Intent类</h1><p>通常用于活动中的跳转</p>
<pre class="line-numbers language-java"><code class="language-java">Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> SecondActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//startActivity方法</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h1><h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><ul>
<li>文字大小、颜色</li>
<li>自定义背景形状‘</li>
<li>点击事件</li>
</ul>
<h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@id/btn_3<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/bg_btn4<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showToast<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="两种设置点击事件的方法"><a href="#两种设置点击事件的方法" class="headerlink" title="两种设置点击事件的方法"></a>两种设置点击事件的方法</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>在对应的类中直接设置事件</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtn3 <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//方法一</span>
        mBtn3<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>ButtonActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"btn3被点击了"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//桌面弹出提示信息</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>直接在xml文件中中填写方法名</p>
<pre class="line-numbers language-xml"><code class="language-xml"> android:onClick="showToast"
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>并在对应的Java类中构造该方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showToast</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"我被点击了"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//桌面弹出提示信息</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Button设置background不生效问题"><a href="#Button设置background不生效问题" class="headerlink" title="Button设置background不生效问题"></a>Button设置background不生效问题</h2><p>在res/values/themes.xml中将下列代码</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.Button<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialComponents.DayNight.DarkActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>改为</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.Button<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialComponents.DayNight.DarkActionBar.Bridge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="实现点击变色功能"><a href="#实现点击变色功能" class="headerlink" title="实现点击变色功能"></a>实现点击变色功能</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FF5346<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>corners</span> <span class="token attr-name"><span class="token namespace">android:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>radius</td>
<td>圆角</td>
</tr>
<tr>
<td>state_pressed</td>
<td>Button状态</td>
</tr>
<tr>
<td>solid</td>
<td>填充</td>
</tr>
</tbody></table>
<h1 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h1><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/et_2<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFAD33<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/et_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>inputType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textPassword<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>drawableLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/we<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>选项</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>inputType</td>
<td>输入类型（textpassword：以*代替）</td>
</tr>
<tr>
<td>hint</td>
<td>输入提示</td>
</tr>
</tbody></table>
<h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><pre class="line-numbers language-java"><code class="language-java">mEtUserName<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"edittext"</span><span class="token punctuation">,</span> charSequence<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span>Editable editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Log.d ( tag, msg ):</strong></p>
<p>​    tag: 打印信息的标签</p>
<p>​    msg: 要打印的信息</p>
<h1 id="通过类管理多个控件"><a href="#通过类管理多个控件" class="headerlink" title="通过类管理多个控件"></a>通过类管理多个控件</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">OnClick</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Intent intent <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_radiobutton<span class="token operator">:</span>
                intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>RadioButtonActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="RadioButton"><a href="#RadioButton" class="headerlink" title="RadioButton"></a>RadioButton</h1><h2 id="常用属性-1"><a href="#常用属性-1" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioGroup</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rg_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioButton</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rb_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RadioButton</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/rb_2<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>woman<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RadioGroup</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>checked</th>
<th>初始化按钮是否选中</th>
</tr>
</thead>
</table>
<p>监听是否选中的方法</p>
<pre class="line-numbers language-xml"><code class="language-xml">android:state_checked="true"
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="事件监听-1"><a href="#事件监听-1" class="headerlink" title="事件监听"></a>事件监听</h2><p><strong>以RadioGroup为单位</strong></p>
<pre class="line-numbers language-java"><code class="language-java">mRg1 <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>rg_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
mRg1<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RadioGroup<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>RadioGroup radioGroup<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        RadioButton radioButton <span class="token operator">=</span> radioGroup<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>RadioButtonActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> radioButton<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h1><h2 id="常用属性-2"><a href="#常用属性-2" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/cb_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/tv_title<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>button</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/bg_checkbox<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
&lt;CheckBox
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>android:button</th>
<th>更改复选框图案样式</th>
</tr>
</thead>
</table>
<h2 id="事件监听-2"><a href="#事件监听-2" class="headerlink" title="事件监听"></a>事件监听</h2><pre class="line-numbers language-java"><code class="language-java">cb1<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>CompoundButton compoundButton<span class="token punctuation">,</span> <span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>CheckBoxAcitivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>b<span class="token operator">?</span><span class="token string">"选中"</span><span class="token operator">:</span><span class="token string">"未选中"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="通过gradle使用第三方库"><a href="#通过gradle使用第三方库" class="headerlink" title="通过gradle使用第三方库"></a>通过gradle使用第三方库</h1><h2 id="以glide库为例"><a href="#以glide库为例" class="headerlink" title="以glide库为例"></a>以glide库为例</h2><h3 id="第一步：修改build-gradle文件"><a href="#第一步：修改build-gradle文件" class="headerlink" title="第一步：修改build.gradle文件"></a>第一步：修改build.gradle文件</h3><p>在app文件夹下的build.gradle中，将</p>
<pre><code>dependencies &#123;

    implementation &#39;androidx.appcompat:appcompat:1.2.0&#39;
    implementation &#39;com.google.android.material:material:1.3.0&#39;
    implementation &#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;
    testImplementation &#39;junit:junit:4.12&#39;
    androidTestImplementation &#39;androidx.test.ext:junit:1.1.2&#39;
    androidTestImplementation &#39;androidx.test.espresso:espresso-core:3.3.0&#39;
&#125;
</code></pre>
<p>改为</p>
<pre><code>dependencies &#123;

    implementation &#39;androidx.appcompat:appcompat:1.2.0&#39;
    implementation &#39;com.google.android.material:material:1.3.0&#39;
    implementation &#39;androidx.constraintlayout:constraintlayout:2.0.4&#39;
    testImplementation &#39;junit:junit:4.12&#39;
    androidTestImplementation &#39;androidx.test.ext:junit:1.1.2&#39;
    androidTestImplementation &#39;androidx.test.espresso:espresso-core:3.3.0&#39;
    implementation &#39;com.github.bumptech.glide:glide:4.12.0&#39;
    annotationProcessor &#39;com.github.bumptech.glide:compiler:4.12.0&#39;
&#125;
</code></pre>
<h3 id="第二步：修改setting-gradle文件"><a href="#第二步：修改setting-gradle文件" class="headerlink" title="第二步：修改setting.gradle文件"></a>第二步：修改setting.gradle文件</h3><p>在setting.gradle文件中做相应更改（glide库不需要改）</p>
<pre><code>repositories &#123;
    google()
    mavenCentral()
    jcenter() // Warning: this repository is going to shut down soon
&#125;
</code></pre>
<h3 id="第三步：联网（可选）"><a href="#第三步：联网（可选）" class="headerlink" title="第三步：联网（可选）"></a>第三步：联网（可选）</h3><p>打开AndroidManiFest.xml文件，在</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.edittext<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>    
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>加入</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.INTERNET<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>表示联网权限</p>
<h1 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h1><h2 id="常用属性-3"><a href="#常用属性-3" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/iv_1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#64FFBF<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/we<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>scaleType=</th>
<th>缩放形式</th>
</tr>
</thead>
<tbody><tr>
<td>fitXY</td>
<td>撑满控件，宽高比发生改变</td>
</tr>
<tr>
<td>fitCenter</td>
<td>保持宽高比缩放，直至完全显示</td>
</tr>
<tr>
<td>centerCrop</td>
<td>保持宽高比缩放，直至完全覆盖空间，裁剪显示</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>android:src</th>
<th>加入本地图片</th>
</tr>
</thead>
</table>
<h2 id="使用glide加入网络图片"><a href="#使用glide加入网络图片" class="headerlink" title="使用glide加入网络图片"></a>使用glide加入网络图片</h2><p>使用方法：</p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"网址"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>ImagineViewAcitivity控件<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>例：</p>
<pre class="line-numbers language-java"><code class="language-java">mIv4<span class="token operator">=</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>iv_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"https://ss3.baidu.com/-fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/48540923dd54564e3cf222ffb1de9c82d0584f65.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>mIv4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（一）通过XML和Java控制UI界面</title>
    <url>/2021/09/02/AndroidDevelopment03/</url>
    <content><![CDATA[<h1 id="使用XML布局文件控制UI界面"><a href="#使用XML布局文件控制UI界面" class="headerlink" title="使用XML布局文件控制UI界面"></a>使用XML布局文件控制UI界面</h1><ol>
<li>在Android应用的res/layout目录下编写XML文件</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>按钮1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0066FF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFFFFF<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>在Activity中使用以下Java代码显示XML文件中布局的内容</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml">setContentView(R.layout.activity_main);
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>该代码在创建时会自动生成</strong></p>
<h1 id="在Java代码中控制UI界面"><a href="#在Java代码中控制UI界面" class="headerlink" title="在Java代码中控制UI界面"></a>在Java代码中控制UI界面</h1><pre class="line-numbers language-java"><code class="language-java">FrameLayout frameLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FrameLayout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
frameLayout<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>chen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setContentView</span><span class="token punctuation">(</span>frameLayout<span class="token punctuation">)</span><span class="token punctuation">;</span>
TextView tv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tv<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"begin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
tv<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_SP<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="使用XML和Java代码混合控制UI界面"><a href="#使用XML和Java代码混合控制UI界面" class="headerlink" title="使用XML和Java代码混合控制UI界面"></a>使用XML和Java代码混合控制UI界面</h1><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> Button mBtnTextView<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtnTextView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_textview<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mBtnTextView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//跳转到TextView演示界面</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>TestViewActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>

    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/btn_textview<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>TextView<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（四）UI组件—视图</title>
    <url>/2021/09/07/AndroidDevelopment04/</url>
    <content><![CDATA[<h1 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h1><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/list_view<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">"Apple"</span><span class="token punctuation">,</span><span class="token string">"Banana"</span><span class="token punctuation">,</span><span class="token string">"Orange"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ArrayAdapter<span class="token operator">&lt;</span>String<span class="token operator">></span> adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span>
                MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_list_item_1<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ListView listView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>list_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>数组中的数据无法直接传递到ListView，需要借助适配器完成。</p>
<p>Android提供了很多适配器的实践类（如：ArrayAdapter）</p>
<pre class="line-numbers language-java"><code class="language-java">ArrayAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>当前上下文<span class="token punctuation">,</span> ListView子项布局id<span class="token punctuation">,</span> 适配的数据<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h2><p><img src="/2021/09/07/AndroidDevelopment04/1631017249023.png"></p>
<h2 id="自定义适配器"><a href="#自定义适配器" class="headerlink" title="自定义适配器"></a>自定义适配器</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">ArrayAdapter</span><span class="token operator">&lt;</span>Fruit<span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> resourceId<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">FruitAdapter</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">int</span> textViewResourceId<span class="token punctuation">,</span>
                        List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> objects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> textViewResourceId<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>
        resourceId <span class="token operator">=</span> textViewResourceId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> View convertview<span class="token punctuation">,</span> ViewGroup parent<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//position指在容器中的位置</span>
        Fruit fruit <span class="token operator">=</span> <span class="token function">getItem</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取当前Fruit实例</span>
        View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ImageView fruitImage <span class="token operator">=</span>view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例化Imageview</span>
        TextView fruitName <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//实例化TextView</span>
        fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将图片传入</span>
        fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将文字传入</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在getview（）方法中每次都将布局重新加载了一遍，将加载好的布局缓存到convertView参数可节约时间</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>convertview <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>resourceId<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    view <span class="token operator">=</span> convertview<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ListView的点击事件"><a href="#ListView的点击事件" class="headerlink" title="ListView的点击事件"></a>ListView的点击事件</h2><pre class="line-numbers language-java"><code class="language-java">listView<span class="token punctuation">.</span><span class="token function">setOnItemClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AdapterView<span class="token punctuation">.</span>OnItemClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemClick</span><span class="token punctuation">(</span>AdapterView<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> adapterView<span class="token punctuation">,</span> View view<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Fruit fruit <span class="token operator">=</span> fruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//i指位置，l指id</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="LayoutInflater类"><a href="#LayoutInflater类" class="headerlink" title="LayoutInflater类"></a>LayoutInflater类</h1><p>转载：<a href="https://www.cnblogs.com/shitianzeng/articles/2323427.html">淡泊名利</a></p>
<p>作用类似于findViewById()。不同点是LayoutInflater是用来找res/layout/下的xml布局文件，并且实例化；而findViewById()是找xml布局文件下的具体widget控件(如Button、TextView等)。</p>
<p>具体作用： </p>
<p>1、对于一个没有被载入或者想要动态载入的界面，都需要使用LayoutInflater.inflate()来载入；</p>
<p>2、对于一个已经载入的界面，就可以使用Activiyt.findViewById()方法来获得其中的界面元素。</p>
<h1 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h1><h2 id="引用包"><a href="#引用包" class="headerlink" title="引用包"></a>引用包</h2><p>在app文件夹下的build.gradle文件中加入</p>
<pre><code>implementation &quot;com.android.support:appcompat-v7:28.0.0&quot;
implementation &quot;com.android.support:recyclerview-v7:$recyclerviewV7Version&quot;
</code></pre>
<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FruitAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>FruitAdapter<span class="token punctuation">.</span>ViewHolder<span class="token operator">></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> mFruitList<span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>
        ImageView fruitImage<span class="token punctuation">;</span>
        TextView fruitName<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">ViewHolder</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fruitImage <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_image<span class="token punctuation">)</span><span class="token punctuation">;</span>
            fruitName <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fruit_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">FruitAdapter</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Fruit<span class="token operator">></span> fruitList<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mFruitList <span class="token operator">=</span> fruitList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@NonNull</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ViewHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> holder<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>fruitName<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mFruitList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>首先定义了ViewHolder，继承自RecyclerView.ViewHolder。传入参数view，通常是RecyclerView子项的最外层布局。</p>
<p>onCreateViewHolder()：用于创建ViewHolder实例，把加载的布局传入并将viewholder返回</p>
<p>onBindViewHolder()：对RecyclerView子项进行赋值</p>
<p>getItemCount()：返回RecyclerView有多少长度</p>
<p>使用recyclerView</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">initFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    RecyclerView recyclerView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recycle_view<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1. 实例化对象</span>
    LinearLayoutManager layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2. 新建LinearLayoutManager类</span>
    recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3. 为recyclerView设置LayoutManager</span>
    FruitAdapter adapter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FruitAdapter</span><span class="token punctuation">(</span>fruitList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>
    recyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4. 设置适配器</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>LinearLayoutManager：用于指定RecyclerView的布局方式</p>
<p>recyclerView.setAdapter()：完成适配器设置</p>
<h2 id="实现横向滚动和瀑布流布局"><a href="#实现横向滚动和瀑布流布局" class="headerlink" title="实现横向滚动和瀑布流布局"></a>实现横向滚动和瀑布流布局</h2><h3 id="横向布局"><a href="#横向布局" class="headerlink" title="横向布局"></a>横向布局</h3><p>修改布局文件：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在main中指定布局方式：</p>
<pre class="line-numbers language-java"><code class="language-java">layoutManager<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>LinearLayoutManager<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="瀑布流布局"><a href="#瀑布流布局" class="headerlink" title="瀑布流布局"></a>瀑布流布局</h3><p>在main中指定布局方式：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">taggeredGridLayoutManager</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>StaggeredGridLayoutManager<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3表示分成3列，StaggeredGridLayoutManager.VERTICAL表示布局正向排列</p>
<h2 id="RecyclerView的点击事件"><a href="#RecyclerView的点击事件" class="headerlink" title="RecyclerView的点击事件"></a>RecyclerView的点击事件</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> FruitAdapter<span class="token punctuation">.</span>ViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    View view <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fruit_item<span class="token punctuation">,</span>parent<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> ViewHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>fruitView<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> position <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"you click view"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> position <span class="token operator">=</span> holder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Fruit fruit <span class="token operator">=</span> mFruitList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"you click image"</span><span class="token operator">+</span>fruit<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（零）AndroidStdio项目中各个文件(夹)的作用</title>
    <url>/2021/09/07/AndroidDevelopment05/</url>
    <content><![CDATA[<p>笔记来自于《第一行代码》</p>
<img src="/2021/09/07/AndroidDevelopment05/1631014300281.png" style="zoom:150%;">

<p><img src="/2021/09/07/AndroidDevelopment05/1631014415289.png"></p>
<p><strong>1. src</strong></p>
<p>存放所有Java代码的地方。</p>
<p><strong>2. gen</strong></p>
<p>此文件夹中的内容自动生成，其中R.JAVA文件，在项目中添加的任何资源都会生成一个相应的资源id。</p>
<p><strong>3. assets</strong></p>
<p>主要存放一些随程序打包的文件。当程序中使用到WebView加载本地网页时，所有网页相关的文件也都存放到这个文件夹下</p>
<p><strong>4. bin</strong></p>
<p>包含一些在编译时自动产生的文件。其中会有一个当前项目编译好的安装包，将该文件拷到手机上就可以直接安装了。</p>
<p><strong>5. libs</strong></p>
<p>如果项目中用到了第三方Jar包，就需要吧这些包放到libs目录下</p>
<p><strong>6. res</strong></p>
<p>使用的所有图片、布局、字符串都是放在这个文件夹下，且该文件夹有很多细分的子文件夹。</p>
<p><strong>7. AndroidManiFest.xml</strong></p>
<p>整个安卓项目的配置文件，在程序中配置的四大组件都需要在这个文件夹注册。另外，还可以在这个文件夹中给应用程序添加权限声明，也可以重新指定创建项目时指定的程序最低兼容版本和目标版本。</p>
<p><strong>8. project.properties</strong></p>
<p>通过一行代码指定了编译程序时所使用的sdk</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（四）编写界面实践</title>
    <url>/2021/09/08/AndroidDevelopment06/</url>
    <content><![CDATA[<h2 id="制作Nine-Patch图片"><a href="#制作Nine-Patch图片" class="headerlink" title="制作Nine-Patch图片"></a>制作Nine-Patch图片</h2><p><strong>第一步</strong></p>
<p>右键图片文件，选择</p>
<p><img src="/2021/09/08/AndroidDevelopment06/1631177537152.png"></p>
<p><strong>第二步</strong></p>
<p><img src="/2021/09/08/AndroidDevelopment06/1631177615012.png"></p>
<p>上边框和左边框划分的区域是图片拉伸的区域</p>
<p>下边框和右边框换份的区域是内容填写的区域</p>
<p><strong>拉伸效果</strong></p>
<img src="/2021/09/08/AndroidDevelopment06/1631177880883.png" style="zoom:50%;">



<h2 id="编写主界面"><a href="#编写主界面" class="headerlink" title="编写主界面"></a>编写主界面</h2><h3 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>LinearLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>
    android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
    android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
    android<span class="token operator">:</span>background<span class="token operator">=</span><span class="token string">"#d8e0e8"</span>
    android<span class="token operator">:</span>orientation<span class="token operator">=</span><span class="token string">"vertical"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>androidx<span class="token punctuation">.</span>recyclerview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>RecyclerView
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"0dp"</span>
        android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>LinearLayout
        android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
        android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>EditText
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/input_text"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"0dp"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>layout_weight<span class="token operator">=</span><span class="token string">"1"</span>
            android<span class="token operator">:</span>hint<span class="token operator">=</span><span class="token string">"Type something here"</span>
            android<span class="token operator">:</span>maxLines<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">/</span><span class="token operator">></span>

        <span class="token operator">&lt;</span>Button
            android<span class="token operator">:</span>id<span class="token operator">=</span><span class="token string">"@+id/send"</span>
            android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"wrap_content"</span>
            android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"Send"</span><span class="token operator">/</span><span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>
    
<span class="token operator">&lt;</span><span class="token operator">/</span>LinearLayout<span class="token operator">></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Msg类"><a href="#Msg类" class="headerlink" title="Msg类"></a>Msg类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Msg</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TYPE_RECEIVED <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span>  <span class="token keyword">static</span>  <span class="token keyword">final</span> <span class="token keyword">int</span> TYPE_SENT <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> type<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">Msg</span><span class="token punctuation">(</span>String content<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>Msg<span class="token operator">></span> msgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> EditText inputText<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Button send<span class="token punctuation">;</span>
    <span class="token keyword">private</span> RecyclerView msgRecyclerView<span class="token punctuation">;</span>
    <span class="token keyword">private</span> MsgAdapter adapter<span class="token punctuation">;</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inputText <span class="token operator">=</span> <span class="token punctuation">(</span>EditText<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>input_text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        send <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>send<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>msg_recycler_view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        LinearLayoutManager layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinearLayoutManager</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
        adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MsgAdapter</span><span class="token punctuation">(</span>msgList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgRecyclerView<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        send<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String content <span class="token operator">=</span> inputText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    Msg msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_SENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    adapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将新消息插入</span>
                    msgRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将ListView定位到最后一行</span>
                    inputText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清空输入框</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initMsgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        Msg msg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello gal."</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_RECEIVED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Msg msg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"Hello. Who is that?"</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_SENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Msg msg3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Msg</span><span class="token punctuation">(</span><span class="token string">"This is Tom."</span><span class="token punctuation">,</span>Msg<span class="token punctuation">.</span>TYPE_RECEIVED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意新消息插入的步骤</p>
<pre class="line-numbers language-java"><code class="language-java">msgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
adapter<span class="token punctuation">.</span><span class="token function">notifyItemInserted</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将新消息插入</span>
msgRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span>msgList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将ListView定位到最后一行</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（五）碎片</title>
    <url>/2021/09/09/AndroidDevelopment07/</url>
    <content><![CDATA[<h2 id="碎片的使用方式"><a href="#碎片的使用方式" class="headerlink" title="碎片的使用方式"></a>碎片的使用方式</h2><h3 id="碎片的简单用法："><a href="#碎片的简单用法：" class="headerlink" title="碎片的简单用法："></a>碎片的简单用法：</h3><p><strong>left_fragment布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>LeftFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeftFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>left_fragment<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过inflate动态载入left_fragment布局</p>
<p><strong>activity_main布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/left_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.fragment.LeftFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.fragment.RightFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用 android:name属性显式指明添加的碎片类名</p>
<h2 id="动态添加碎片"><a href="#动态添加碎片" class="headerlink" title="动态添加碎片"></a>动态添加碎片</h2><p>MainActivity改为</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button button <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">replaceFragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token operator">:</span>
                <span class="token function">replaceFragment</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnotherRightFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replaceFragment</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">)</span><span class="token punctuation">{</span>
        FragmentManager fragmentManager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        FragmentTransaction transaction <span class="token operator">=</span> fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>动态添加碎片：</strong></p>
<ol>
<li>创建添加的碎片实例</li>
<li>获取FramentManager，在活动中可以直接通过调用getSupportFramentManager()方法得到</li>
<li>开启一个事务，通过调用beginTransaction（）方法开启</li>
<li>向容器内添加或替换碎片，一般使用replace（）方法实现，需要传入容器的id和带添加得碎片实例</li>
<li>提交事务，调用commit（）方法完成</li>
</ol>
<h2 id="在碎片中模拟返回栈"><a href="#在碎片中模拟返回栈" class="headerlink" title="在碎片中模拟返回栈"></a>在碎片中模拟返回栈</h2><p>main中相关内容修改为：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">replaceFragment</span><span class="token punctuation">(</span>Fragment fragment<span class="token punctuation">)</span><span class="token punctuation">{</span>
    FragmentManager fragmentManager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    FragmentTransaction transaction <span class="token operator">=</span> fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>right_layout<span class="token punctuation">,</span>fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    transaction<span class="token punctuation">.</span><span class="token function">addToBackStack</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加到返回栈</span>
    transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>调用了FragmentTransaction的addToBackStack()方法，它可以接受一个名字用于描述返回栈状态，一般传入null即可。此时按下Back可以回到上一个界面。</p>
<h2 id="动态加载布局"><a href="#动态加载布局" class="headerlink" title="动态加载布局"></a>动态加载布局</h2><p>实现平板和手机之间布局的自动切换</p>
<p><strong>使用限定符</strong></p>
<p>在res目录下新建layout-large文件夹，新建布局activity-main.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:orientation=&quot;horizontal&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;

    &lt;fragment
        android:id=&quot;@+id/left_fragment&quot;
        android:name=&quot;com.example.fragment.LeftFragment&quot;

        android:layout_width=&quot;0dp&quot;
        android:layout_height=&quot;match_parent&quot;
        android:layout_weight=&quot;1&quot;/&gt;

&lt;/LinearLayout&gt;
</code></pre>
<img src="/2021/09/09/AndroidDevelopment07/1631261085370.png" style="zoom:50%;">

<img src="/2021/09/09/AndroidDevelopment07/1631261118447.png" style="zoom:33%;">

<p><strong>常见的限定词</strong></p>
<p><img src="/2021/09/09/AndroidDevelopment07/1631261226703.png"></p>
<p><img src="/2021/09/09/AndroidDevelopment07/1631261237479.png"></p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fragment</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（五）碎片的实践</title>
    <url>/2021/09/10/AndroidDevelopment08/</url>
    <content><![CDATA[<h2 id="新闻内容的布局"><a href="#新闻内容的布局" class="headerlink" title="新闻内容的布局"></a>新闻内容的布局</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/visibility_layout<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>NewsContentFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> View view<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span>String newsTittle<span class="token punctuation">,</span>String newsContent<span class="token punctuation">)</span><span class="token punctuation">{</span>
        View visibilityLayout <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>visibility_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        visibilityLayout<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        TextView newsTittleText <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_tittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        TextView newsContentText <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsTittleText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsTittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsContentText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>提供了refresh（）方法将新闻内容和题目显示在界面上。</p>
<p><strong>news_content布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsContentFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接在布局中引用了NewsContentActivity，相当于把news_content_frag布局加入</p>
<p><strong>NewsContentActivity类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsContentActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">actionStart</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span>String newsTittle<span class="token punctuation">,</span>String newsContent<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>NewsContentActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">,</span>newsTittle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        String newsTitle <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取传入的新闻标题</span>
        String newsContent <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"news_content"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取传入的新闻内容</span>
        NewsContentFragment newsContentFragment <span class="token operator">=</span> <span class="token punctuation">(</span>NewsContentFragment<span class="token punctuation">)</span>
                <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFragmentById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newsContentFragment<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>newsTitle<span class="token punctuation">,</span>newsContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//刷新NewsContentFragment界面</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/10/AndroidDevelopment08/1631265768592.png"></p>
<p><strong>news_item布局</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>singleLine</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>ellipsize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>18sp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingLeft</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingRight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>paddingTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ellipse：文本的缩略方式（end：在尾部缩略）</p>
<p><strong>NewsTitleFragment类</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsTitleFragment</span> <span class="token keyword">extends</span> <span class="token class-name">Fragment</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isTwoPane<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View view <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>news_title_frag<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> view<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onActivityCreated</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onActivityCreated</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>news_content_layout<span class="token punctuation">)</span><span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            isTwoPane <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            isTwoPane <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过能否找到news_content_layout来判断当前是双页还是单页</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle_layout<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_tittle_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsTitleFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>单页指挥加载一个碎片</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>horizontal<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fragment</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_title_fragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.newspaper.NewsTitleFragment<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/news_content_layout<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        &lt;fragment
            android:id="@+id/news_content_fragment"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>双页加载</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fragment</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（六）广播</title>
    <url>/2021/09/13/AndroidDevelopment09/</url>
    <content><![CDATA[<h2 id="广播机制简介"><a href="#广播机制简介" class="headerlink" title="广播机制简介"></a>广播机制简介</h2><h4 id="标准广播（Normal-broadcasts）"><a href="#标准广播（Normal-broadcasts）" class="headerlink" title="标准广播（Normal broadcasts）"></a>标准广播（Normal broadcasts）</h4><p>完全异步执行的广播，广播发出后所有的广播接收器几乎在统一时刻收到这条广播信息，<strong>无法被截断</strong>。</p>
<p><img src="/2021/09/13/AndroidDevelopment09/image-20210914171353061.png"></p>
<h4 id="有序广播（Ordered-broadcasts"><a href="#有序广播（Ordered-broadcasts" class="headerlink" title="有序广播（Ordered broadcasts)"></a>有序广播（Ordered broadcasts)</h4><p>同步执行的广播，广播发出后，同一时刻只会有一个广播接收器能收到这条广播消息，当广播接收器中的逻辑执行完毕后，广播才会继续传递。</p>
<p><img src="/2021/09/13/AndroidDevelopment09/1631611053996.png"></p>
<h2 id="接收系统广播"><a href="#接收系统广播" class="headerlink" title="接收系统广播"></a>接收系统广播</h2><p>Android内置很多系统级别的广播，我们可以在应用程序中监听这些广播。这就需要广播接收器，下面将介绍其用法：</p>
<p>广播接受器可以对自己感兴趣的广播进行注册，这样当有相应广播发出时，接收器就能够收到。</p>
<p>注册广播的方式一般有两种，在代码中注册和在AndroidManifest.xml中注册，前者被称为动态注册，后者被称为静态注册</p>
<h3 id="动态注册监听网络变化"><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> IntentFilter intentFiler<span class="token punctuation">;</span>

    <span class="token keyword">private</span> NetworkChangeReceiver networkchangeReceiver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFiler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFiler<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"android.net.conn.CONNECTIVITY_CHANGE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        networkchangeReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NetworkChangeReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">,</span>intentFiler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">NetworkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network changes"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>定义类NetworkChangeReceiver继承自BroadcastReceiver，重写onReceive（）方法得到信息</p>
</li>
<li><p>在onCreat（）方法中创建IntentFiler的实例。添加监听的广播</p>
</li>
<li><p>创建NetworkChangeReceiver的实例</p>
</li>
<li><p>调用registerReceiver（）方法注册，将NetworkChangeReceive和InterFilter的实例传进去。</p>
</li>
<li><p>此时，NetworkChangeReceive就可以收到指定值的广播。</p>
</li>
<li><p>重写onDestroy（）方法，加入</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>networkchangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>取消注册</p>
</li>
</ol>
<p><strong>优化代码</strong></p>
<p>重写NetworkChangeReceiver类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">NetworkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ConnectivityManager connectivityManager <span class="token operator">=</span> <span class="token punctuation">(</span>ConnectivityManager<span class="token punctuation">)</span>
                <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>CONNECTIVITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        NetworkInfo networkInfo <span class="token operator">=</span> connectivityManager<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>networkInfo <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> networkInfo<span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network is available"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"network is not available"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>通过getSystemService（）方法得到了ConnectivityManager的实例，这是一个系统服务类，专门用于管理网络连接。</li>
<li>调用ConnectivityManager的getActiveNetworkInfo（）方法得到NetworkInfo实例</li>
<li>接着调用NetworkInfo的isAvailable（）方法，判断是否有网络</li>
</ol>
<p>在AndroidManifest,xml文件中加入权限：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.ACCESS_NETWORK_STATE<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="静态注册实现开机启动"><a href="#静态注册实现开机启动" class="headerlink" title="静态注册实现开机启动"></a>静态注册实现开机启动</h3><p><strong>创建广播接收器</strong></p>
<p><img src="/2021/09/13/AndroidDevelopment09/image-20210914235953016.png"></p>
<p>Exported：是否允许广播接收器接受程序以外信息</p>
<p>Enabled：是否启用这个广播接收器</p>
<p><strong>修改BootCompleteReceiver中的代码</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BootCompleteReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// TODO: This method is called when the BroadcastReceiver is receiving</span>
        <span class="token comment" spellcheck="true">// an Intent broadcast.</span>
        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"Boot Complete"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加权限</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.permission.RECEIVE_BOOT_COMPLETED<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>修改AndroidManifest.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.BootCompleteReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.intent.action.BOOT_COMPLETED<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="发送自定义广播"><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h2><ol>
<li><p>新建广播接收器</p>
</li>
<li><p>在AndroidManifest.xml中</p>
</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.broadcasttest.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自定义广播名</p>
<ol start="3">
<li>发出对应的广播”com.example.broadcasttest.MY_BROADCAST”时接收器可以收到该广播</li>
</ol>
<h4 id="对于无法接收静态广播的情况（Android-8-0后）："><a href="#对于无法接收静态广播的情况（Android-8-0后）：" class="headerlink" title="对于无法接收静态广播的情况（Android 8.0后）："></a>对于无法接收静态广播的情况（Android 8.0后）：</h4><p>加入</p>
<pre class="line-numbers language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">setComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"包名"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="发送有序广播"><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h2><ol>
<li>将sendBroadcast()方法改为sendOrderBroadcast()方法，接收intent和null</li>
<li>设置优先级</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
    <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.MyBroadcastReceiver<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span> <span class="token attr-name"><span class="token namespace">android:</span>priority</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.broadcasttest01.MY_BROADCAST<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>截断代码，在OnReceive()方法中添加abortBroadcast（）方法。</li>
</ol>
<h2 id="使用本地广播"><a href="#使用本地广播" class="headerlink" title="使用本地广播"></a>使用本地广播</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> IntentFilter intentFilter<span class="token punctuation">;</span>

    <span class="token keyword">private</span> LocalReceiver localReceiver<span class="token punctuation">;</span>

    <span class="token keyword">private</span> LocalBroadcastManager localBroadcastManager<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button button <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager <span class="token operator">=</span> LocalBroadcastManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                localBroadcastManager<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.LOCAL_BROADCAST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LocalReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager<span class="token punctuation">.</span><span class="token function">registerReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        localBroadcastManager<span class="token punctuation">.</span><span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>localReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">LocalReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"received in local broadcast"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>主要使用一个LocalBroadcastManager来对广播进行管理</p>
<ol>
<li><p>新建类LocalReceiver继承自BroadcastReceiver()</p>
</li>
<li><p>通过LocalBroadcastManager.getInstance(this)方法得到实例</p>
</li>
<li><p>调用LocalBroadcastManager的registerReceiver()方法注册广播接收器</p>
</li>
<li><p>调用localBroadcastManager.sendBroadcast()方法发送广播</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Broadcast</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（六）广播的最佳实例</title>
    <url>/2021/09/14/AndroidDevelopment10/</url>
    <content><![CDATA[<h2 id="创建AcitivityCollector类"><a href="#创建AcitivityCollector类" class="headerlink" title="创建AcitivityCollector类"></a>创建AcitivityCollector类</h2><p>管理所有活动</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityCollector</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>Activity<span class="token operator">></span> activities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addActivity</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span><span class="token punctuation">{</span>
        activities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeActivity</span><span class="token punctuation">(</span>Activity activity<span class="token punctuation">)</span><span class="token punctuation">{</span>
        activities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>Activity activity<span class="token operator">:</span>activities<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>activities<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="创建BaseActivity作为所有活动父类"><a href="#创建BaseActivity作为所有活动父类" class="headerlink" title="创建BaseActivity作为所有活动父类"></a>创建BaseActivity作为所有活动父类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> ForceOffLineReceiver receiver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        IntentFilter intentFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        receiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForceOffLineReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>receiver<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
            receiver <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ActivityCollector<span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ActivityCollector<span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">ForceOffLineReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            AlertDialog<span class="token punctuation">.</span>Builder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Warning"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"You are forced to be offline"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setCancelable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>DialogInterface dialogInterface<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    ActivityCollector<span class="token punctuation">.</span><span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ForceOfflineReceiver"><a href="#ForceOfflineReceiver" class="headerlink" title="ForceOfflineReceiver"></a>ForceOfflineReceiver</h3><ol>
<li>使用AlertDialog.Builder来构建一个对话框</li>
<li>调用setCancelable（）方法将对话框设置为不可取消</li>
<li>调用setPositiveButton（）方法来给对话框注册确定按钮</li>
</ol>
<h2 id="修改LoginActivity类"><a href="#修改LoginActivity类" class="headerlink" title="修改LoginActivity类"></a>修改LoginActivity类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> EditText accountEdit<span class="token punctuation">;</span>
    <span class="token keyword">private</span> EditText passwordEdit<span class="token punctuation">;</span>
    <span class="token keyword">private</span> Button login<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_login<span class="token punctuation">)</span><span class="token punctuation">;</span>
        accountEdit <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>account<span class="token punctuation">)</span><span class="token punctuation">;</span>
        passwordEdit <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        login <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>login<span class="token punctuation">)</span><span class="token punctuation">;</span>
        login<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                String account <span class="token operator">=</span> accountEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                String password <span class="token operator">=</span> passwordEdit<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">//密码是123456.用户名为admin</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>account<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>LoginActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"account or password is invalid"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="修改MainActivity中的代码"><a href="#修改MainActivity中的代码" class="headerlink" title="修改MainActivity中的代码"></a>修改MainActivity中的代码</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Button forceOffline <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>force_offline<span class="token punctuation">)</span><span class="token punctuation">;</span>
        forceOffline<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Intent intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.broadcastbestpractice.FORCE_OFFLINE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">sendBroadcast</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Broadcast</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（七）MateraiDesign实践</title>
    <url>/2021/09/16/AndroidDevelopment11/</url>
    <content><![CDATA[<h1 id="Materai-Design实践"><a href="#Materai-Design实践" class="headerlink" title="Materai Design实践"></a>Materai Design实践</h1><h2 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h2><p><strong>themes.xml中的设置</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialTest<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat.Light.NoActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Primary brand color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/purple_500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/purple_700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/white<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Secondary brand color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/teal_200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/teal_700<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/black<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Status bar color. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:statusBarColor<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">tools:</span>targetApi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>l<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>?attr/colorPrimaryVariant<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Customize your theme here. --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/09/16/AndroidDevelopment11/image-20210916222400495.png"></p>
<p>除此之外还可一通过textColorPrimary\windowBackground和navigationBarColor等属性控制其他位置的颜色</p>
<p><strong>用ToolBar代替ActionBar中的代码</strong></p>
<p>更改activity_main.xml中的代码</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FrameLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>popupTheme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Light<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FrameLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>用xmlns.app指定了一个新的命名空间</li>
<li>用app.:popupTheme属性将弹出的菜单指定成单色主题</li>
</ol>
<p>更改MainActivity中的代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toolbar toolbar<span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>toolbar<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setSupportActionBar</span><span class="token punctuation">(</span>toolbar<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在menu文件夹下新建toolbar.xml文件</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/backup<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Backup<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>always<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/delete<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Delete<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ifRoom<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/settings<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Settings<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>showAsAction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>never<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>showAsAction：</p>
<ol>
<li>always永远显示在toolbar中</li>
<li>ifRoom表示屏幕空间足够时在Toolbar中显示，不够就显示在菜单中</li>
<li>never表示永远显示在菜单中</li>
</ol>
<p>在onOptionsItemSelected()方法中处理各个按钮的点击事件</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onOptionsItemSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> MenuItem item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>backup<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Backup"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>delete<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Delete"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>settings<span class="token operator">:</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"You click Settings"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>home<span class="token operator">:</span>
            mDrawerLayout<span class="token punctuation">.</span><span class="token function">openDrawer</span><span class="token punctuation">(</span>GravityCompat<span class="token punctuation">.</span>START<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="DrawerLayout"><a href="#DrawerLayout" class="headerlink" title="DrawerLayout"></a>DrawerLayout</h2><ol>
<li><p>在布局文件中使用DrawerLayout</p>
<p>第一个子控件是主界面，第二个是滑动菜单</p>
<p>在第二个子控件中设置layout_gravity以指定滑动方向</p>
</li>
<li><p>在Toolbar最左边加入导航按钮，点击按钮显示滑动菜单</p>
<pre class="line-numbers language-java"><code class="language-java">mDrawerLayout <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>drawer_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
ActionBar actionBar <span class="token operator">=</span> <span class="token function">getSupportActionBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>actionBar <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    actionBar<span class="token punctuation">.</span><span class="token function">setDisplayHomeAsUpEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示按钮</span>
    actionBar<span class="token punctuation">.</span><span class="token function">setHomeAsUpIndicator</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图标</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>并在前文说到的onOptionsItemSelected()方法中加入</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">case</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>home<span class="token operator">:</span>
    mDrawerLayout<span class="token punctuation">.</span><span class="token function">openDrawer</span><span class="token punctuation">(</span>GravityCompat<span class="token punctuation">.</span>START<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="NavigationView"><a href="#NavigationView" class="headerlink" title="NavigationView"></a>NavigationView</h2><ol>
<li><p>在dependencies中加入</p>
<pre><code>implementation &#39;de.hdodenhof:circleimageview:3.1.0&#39;
</code></pre>
</li>
<li><p>创建一个nav_menu.xml文件来设置菜单项</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>group</span> <span class="token attr-name"><span class="token namespace">android:</span>checkableBehavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>single<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_call<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Call<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_friends<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Friends<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_location<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Location<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_mail<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mail<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_task<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/button<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tasks<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>group</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>整个headerLayout放头像，用户名</p>
<p>创建nav_header.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>de.hdodenhof.circleimageview.CircleImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/icon_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/head<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/icon_image<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_alignParentBottom</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>33dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_marginBottom</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tonygreendev@email.com<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10sp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/mail<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_above</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Tony Green<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#FFF<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_below</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/username<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>14sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中CircleImageView用于将图片圆形化，用法与ImageView一样</p>
<ol start="4">
<li><p>将NavigationView放到DrawerLayout里作为滑动菜单（第二个子控件）</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.navigation.NavigationView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/nav_view<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>start<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>headerLayout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/nav_header<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>menu</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@menu/nav_menu<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ol>
<p>显示效果：</p>
<img src="/2021/09/16/AndroidDevelopment11/image-20210920220459300.png" alt="image-20210920220459300" style="zoom: 50%;">

<h2 id="FloatingActionButton"><a href="#FloatingActionButton" class="headerlink" title="FloatingActionButton"></a>FloatingActionButton</h2><ol>
<li>在布局中添加FloatingActionButton</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.floatingactionbutton.FloatingActionButton</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fab<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom|end<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>elevation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/down<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>​    其中layout_gravity控制控件的位置</p>
<p>​    elevation可调整其高度，控制投影效果</p>
<ol start="2">
<li><p>设置点击事件</p>
<pre class="line-numbers language-java"><code class="language-java">FloatingActionButton fab <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fab<span class="token punctuation">)</span><span class="token punctuation">;</span>
fab<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"Data deleted"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token string">"Undo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"Data restored"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这点和button相似</p>
</li>
</ol>
<p>显示效果</p>
<img src="/2021/09/16/AndroidDevelopment11/image-20210920220539856.png" alt="image-20210920220539856" style="zoom:50%;">

<h2 id="Snackbar"><a href="#Snackbar" class="headerlink" title="Snackbar"></a>Snackbar</h2><p>Snacker跟Toast的用法相似</p>
<pre class="line-numbers language-java"><code class="language-java">Snackbar<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"Data deleted"</span><span class="token punctuation">,</span> Snackbar<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token string">"Undo"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"Data restored"</span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>调用Snacker的make方法创建Snacker对象，make（）方法的第一个参数传入一个view，当前布局的任意一个即可Snacker会自动查找最外层布局。第二个是显示内容，第三个是显示时长。</p>
</li>
<li><p>调用setAction()方法来设置一个动作，第一个参数为显示内容，第二个为事件</p>
</li>
</ol>
<p>显示效果：</p>
<p><img src="/2021/09/16/AndroidDevelopment11/image-20210920220603763.png" alt="image-20210920220603763"></p>
<h2 id="CoordinatorLayout"><a href="#CoordinatorLayout" class="headerlink" title="CoordinatorLayout"></a>CoordinatorLayout</h2><p>用法跟FrameLayout一样</p>
<p>使用后会将Snackerbar的动态效果优化</p>
<h2 id="CardView"><a href="#CardView" class="headerlink" title="CardView"></a>CardView</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.cardview.widget.CardView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>cardCornerRadius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4dp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_name<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_gravity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_horizontal<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout_margin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5dp<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>textSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16sp<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.cardview.widget.CardView</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>由于CardView没有方便的定位方式，所以再嵌套一个LinearLayout</p>
<h2 id="使用Glide加载图片"><a href="#使用Glide加载图片" class="headerlink" title="使用Glide加载图片"></a>使用Glide加载图片</h2><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>fruit<span class="token punctuation">.</span><span class="token function">getImageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>holder<span class="token punctuation">.</span>fruitImage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Glide.with()传入一个Context、Activity或Fragment参数</p>
<p>再调用load（）方法去加载图片，最后再调用into（）方法将图片设置到一个具体的ImageView中</p>
<p>使用GridLayoutManager布局方式</p>
<h2 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h2><p>将Toolbar嵌套在AppBarLayout中可以有效解决toolbar被覆盖的问题</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.appbar.AppBarLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.appcompat.widget.Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_scrollFlags</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll|enterAlways|snap<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>popupTheme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Light<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>com.google.android.material.appbar.AppBarLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>app:layout_scrollFlags用于调节Toolbar隐藏或显示属性</p>
<h2 id="SwipeRefreshLayout"><a href="#SwipeRefreshLayout" class="headerlink" title="SwipeRefreshLayout"></a>SwipeRefreshLayout</h2><p>通过SwipeRefreshLayout实现下拉刷新</p>
<ol>
<li><p>在RecyclerView外面嵌套一层SwipeRefreshLayout实现自动下拉刷新功能</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/swipe_refresh<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>layout_behavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/appbar_scrolling_view_behavior<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/recycler_view<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_behavior</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/appbar_scrolling_view_behavior<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.swiperefreshlayout.widget.SwipeRefreshLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>在代码处添加具体的刷新逻辑</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> SwipeRefreshLayout swipeRefresh<span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在onCreation（）加入</p>
<pre class="line-numbers language-java"><code class="language-java">swipeRefresh <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>swipe_refresh<span class="token punctuation">)</span><span class="token punctuation">;</span>
swipeRefresh<span class="token punctuation">.</span><span class="token function">setColorSchemeResources</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>design_default_color_on_primary<span class="token punctuation">)</span><span class="token punctuation">;</span>
swipeRefresh<span class="token punctuation">.</span><span class="token function">setOnRefreshListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SwipeRefreshLayout<span class="token punctuation">.</span>OnRefreshListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">refreshFruits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中onRefresh中添加具体刷新的操作</p>
</li>
</ol>
<h2 id="CollapsingToolbatLayout"><a href="#CollapsingToolbatLayout" class="headerlink" title="CollapsingToolbatLayout"></a>CollapsingToolbatLayout</h2><p>这个空间只能作为AppBarLayout的直接自布局来使用，而AppBarLayout又必须是CoordinatorLayout的子布局</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.appbar.CollapsingToolbarLayout</span>
    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/collapsing_toolbar<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>contentScrim</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/colorPrimary<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">app:</span>layout_scrollFlags</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scroll|exitUntilCollapsed<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/fruit_image_view<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_collapseMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parallax<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fitsSystemWindows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.appcompat.widget.Toolbar</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/toolbar<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/actionBarSize<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layout_collapseMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pin<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>com.google.android.material.appbar.CollapsingToolbarLayout</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>app:layout_collapseMode用于指定当前空间在CollapsingToolvarLayout折叠过程中的折叠模式，Toolbar指定成pin表示折叠时位置不变，ImageView指定成parallax，表示会在折叠过程中产生一定的错位偏移。</p>
<p>想要让背景图和系统状态栏融合，需要借助<strong>Android: fitsSystemWindows</strong>这个属性来实现。而且该部件的父布局都要设置</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>MateraiDesign</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓开发（八）LitePal</title>
    <url>/2021/09/27/AndroidDevelopment12/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>安卓开发（九）PopupWindow那些事</title>
    <url>/2021/10/01/AndroidDevelopment13/</url>
    <content><![CDATA[<p>转载自：<a href="https://blog.csdn.net/harvic880925/article/details/49272285?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163307449116780269858046%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=163307449116780269858046&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~hot_rank-1-49272285.pc_v2_rank_blog_default&utm_term=popupwindow&spm=1018.2226.3001.4450">PopUpWindow使用详解(一)——基本使用</a></p>
<h2 id="PopupWindow的构造函数"><a href="#PopupWindow的构造函数" class="headerlink" title="PopupWindow的构造函数"></a>PopupWindow的构造函数</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//方法一：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span> <span class="token punctuation">(</span>Context context<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法二：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法三：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//方法四：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">boolean</span> focusable<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中contentView是设置的布局</p>
<h2 id="PopupWindow的常用方法"><a href="#PopupWindow的常用方法" class="headerlink" title="PopupWindow的常用方法"></a>PopupWindow的常用方法</h2><h3 id="显示PopupWindow"><a href="#显示PopupWindow" class="headerlink" title="显示PopupWindow"></a>显示PopupWindow</h3><pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">showAtLocation</span><span class="token punctuation">(</span>rootview<span class="token punctuation">,</span> Gravity<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>将PopupWindow放在父容器中，显示在BOTTOM的位置</p>
<h3 id="显示窗体showAsDropDown"><a href="#显示窗体showAsDropDown" class="headerlink" title="显示窗体showAsDropDown"></a>显示窗体showAsDropDown</h3><p><img src="/2021/10/01/AndroidDevelopment13/image-20211001160832054.png" alt="image-20211001160832054"></p>
<pre class="line-numbers language-java"><code class="language-java">mMenuTv <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">showAsDropDown</span><span class="token punctuation">(</span>mMenuTv<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//mPopWindow.showAsDropDown(View anchor, int xoff, int yoff)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>其中mMenuTv是菜单控件</p>
<h3 id="为PopupWindow添加动画"><a href="#为PopupWindow添加动画" class="headerlink" title="为PopupWindow添加动画"></a>为PopupWindow添加动画</h3><pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setAnimationStyle</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>contextMenuAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="为菜单添加阴影"><a href="#为菜单添加阴影" class="headerlink" title="为菜单添加阴影"></a>为菜单添加阴影</h2><ol>
<li><p>在布局外层再包一层RelativeLayout，并添加半透明背景android:background=”#66000000”</p>
<p>此时设置的android:layout_width和android:layout_height是无意义的，会重新设置</p>
</li>
<li><p>添加代码</p>
<pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FILL_PARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="setTouchable-boolean-touchable"><a href="#setTouchable-boolean-touchable" class="headerlink" title="setTouchable(boolean touchable)"></a>setTouchable(boolean touchable)</h3><p>设置PopupWindow是否响应touch事件，默认是true，如果设置为false，所有touch事件无响应，包括点击事件</p>
<h3 id="setFocusable-boolean-focusable"><a href="#setFocusable-boolean-focusable" class="headerlink" title="setFocusable(boolean focusable)"></a>setFocusable(boolean focusable)</h3><p>该函数的意义表示，PopupWindow是否具有获取焦点的能力，默认为False。一般来讲是没有用的，因为普通的控件是不需要获取焦点的，而对于EditText则不同，如果不能获取焦点，那么EditText将是无法编辑的。</p>
<h3 id="setOutsideTouchable-boolean-touchable"><a href="#setOutsideTouchable-boolean-touchable" class="headerlink" title="setOutsideTouchable(boolean touchable)"></a>setOutsideTouchable(boolean touchable)</h3><p>这个函数的意义，就是指，PopupWindow以外的区域是否可点击，即如果点击PopupWindow以外的区域，PopupWindow是否会消失。</p>
<pre class="line-numbers language-java"><code class="language-java">mPopWindow<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BitmapDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mPopWindow<span class="token punctuation">.</span><span class="token function">setOutsideTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>加上mPopWindow.setBackgroundDrawable(new BitmapDrawable());才可以点击</p>
<h3 id="setBackgroundDrawable-Drawable-background"><a href="#setBackgroundDrawable-Drawable-background" class="headerlink" title="setBackgroundDrawable(Drawable background)"></a>setBackgroundDrawable(Drawable background)</h3><p>只有加上它之后，PopupWindow才会对手机的返回按钮有响应：即，点击手机返回按钮，可以关闭PopupWindow；如果不加setBackgroundDrawable（）将关闭的PopupWindow所在的Activity.</p>
<p>可以填充进去各种Drawable,比如new BitmapDrawable()，new ColorDrawable(),等；</p>
<h2 id="设置各个控件的点击响应"><a href="#设置各个控件的点击响应" class="headerlink" title="设置各个控件的点击响应"></a>设置各个控件的点击响应</h2><pre class="line-numbers language-java"><code class="language-java">TextView tv1 <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span>contentView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>pop_computer<span class="token punctuation">)</span><span class="token punctuation">;</span>
tv1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>PopupWindow</tag>
      </tags>
  </entry>
  <entry>
    <title>AndroidDevelopment14</title>
    <url>/2021/10/01/AndroidDevelopment14/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>编译原理（一）概论</title>
    <url>/2021/09/06/CompileTechnical01/</url>
    <content><![CDATA[<h2 id="编译器在语言处理系统中的位置"><a href="#编译器在语言处理系统中的位置" class="headerlink" title="编译器在语言处理系统中的位置"></a>编译器在语言处理系统中的位置</h2><p><img src="/2021/09/06/CompileTechnical01/1631415856819.png"></p>
<p>链接器：</p>
<p>将多个可重定位的机器代码文件连接到一起</p>
<p>解决外部内存地址问题</p>
<h2 id="编译系统的结构"><a href="#编译系统的结构" class="headerlink" title="编译系统的结构"></a>编译系统的结构</h2><h3 id="翻译过程"><a href="#翻译过程" class="headerlink" title="翻译过程"></a>翻译过程</h3><p><img src="/2021/09/06/CompileTechnical01/1631416283170.png"></p>
<p>词法分析：确定句子中各个单词的词性</p>
<p>语法分析：识别句子中各类短语从而获得句子结构</p>
<p>语义分析： 分析各个短语在句子中充当什么成分，得到短语之间的关系</p>
<h3 id="编译器结构"><a href="#编译器结构" class="headerlink" title="编译器结构"></a>编译器结构</h3><img src="/2021/09/06/CompileTechnical01/1631416517620.png" style="zoom: 67%;">

<hr>
<h2 id="词法分析概述"><a href="#词法分析概述" class="headerlink" title="词法分析概述"></a>词法分析概述</h2><h3 id="词法分析-扫描（Scanning）"><a href="#词法分析-扫描（Scanning）" class="headerlink" title="词法分析/扫描（Scanning）"></a>词法分析/扫描（Scanning）</h3><p><strong>主要任务：</strong></p>
<p>从左向右逐行扫面源程序的字符，识别出每一个单词，确定单词的类型。将识别出的单词转换成统一的<strong>机内表示</strong>——词法单元（token）形式</p>
<p><strong>token：</strong>&lt;种别码，属性值&gt;</p>
<p><img src="/2021/09/06/CompileTechnical01/1631416872548.png"></p>
<p><strong>例：</strong></p>
<img src="/2021/09/06/CompileTechnical01/1631416949744.png" style="zoom:67%;">





<h2 id="语法分析概述"><a href="#语法分析概述" class="headerlink" title="语法分析概述"></a>语法分析概述</h2><p>语法分析器（parser）从单词分析器输出的token序列中识别出各类短语，并构造<strong>语法分析树</strong>（prase tree）</p>
<p><img src="/2021/09/06/CompileTechnical01/1631417219451.png"></p>
<h3 id="例1：赋值语句的分析树"><a href="#例1：赋值语句的分析树" class="headerlink" title="例1：赋值语句的分析树"></a>例1：赋值语句的分析树</h3><img src="/2021/09/06/CompileTechnical01/1631417286626.png" style="zoom:80%;">



<h3 id="例2：变量声明语句的分析树"><a href="#例2：变量声明语句的分析树" class="headerlink" title="例2：变量声明语句的分析树"></a>例2：变量声明语句的分析树</h3> <img src="/2021/09/06/CompileTechnical01/1631417462314.png" style="zoom:80%;">





<h2 id="语义分析概述"><a href="#语义分析概述" class="headerlink" title="语义分析概述"></a>语义分析概述</h2><h3 id="收集标识符的属性信息："><a href="#收集标识符的属性信息：" class="headerlink" title="收集标识符的属性信息："></a>收集标识符的属性信息：</h3><ol>
<li>种类：简单变量，复合变量，过程</li>
<li>类型：整型、bool型···</li>
<li>存储长度、长度</li>
<li>值</li>
<li>作用域</li>
<li>参数和返回值信息</li>
</ol>
<h3 id="符号表和字符串表"><a href="#符号表和字符串表" class="headerlink" title="符号表和字符串表"></a>符号表和字符串表</h3><p><img src="/2021/09/06/CompileTechnical01/1631417842788.png" alt="1631417842788"></p>
<h3 id="语义检查"><a href="#语义检查" class="headerlink" title="语义检查"></a>语义检查</h3><p><img src="/2021/09/06/CompileTechnical01/1631417970126.png"></p>
<h2 id="中间代码生成及编译后端概述"><a href="#中间代码生成及编译后端概述" class="headerlink" title="中间代码生成及编译后端概述"></a>中间代码生成及编译后端概述</h2><h3 id="常用中间表示形式："><a href="#常用中间表示形式：" class="headerlink" title="常用中间表示形式："></a>常用中间表示形式：</h3><p><strong>三地址码</strong></p>
<p><strong>语法结构树/语法树</strong></p>
<h4 id="三地址码："><a href="#三地址码：" class="headerlink" title="三地址码："></a><strong>三地址码：</strong></h4><p>三地址码由类似于汇编语言的指令序列组成，每个指令最多由三个操作数</p>
<p><img src="/2021/09/06/CompileTechnical01/1631418278417.png"></p>
<p><strong>地址可具有如下形式之一：</strong></p>
<p>源程序中的名字；常量；编译器中的临时变量</p>
<p><strong>三地址指令的表示</strong>：</p>
<img src="/2021/09/06/CompileTechnical01/1631418496974.png" style="zoom:50%;">

<p>例：</p>
<img src="/2021/09/06/CompileTechnical01/1631418564645.png" style="zoom:80%;">

<p>一个三地址指令确定了一个唯一运算完成的顺序。</p>
<h4 id="中间代码生成的例子"><a href="#中间代码生成的例子" class="headerlink" title="中间代码生成的例子"></a>中间代码生成的例子</h4><p><img src="/2021/09/06/CompileTechnical01/1631418746359.png"></p>
<h3 id="目标代码生成："><a href="#目标代码生成：" class="headerlink" title="目标代码生成："></a>目标代码生成：</h3><p>目标代码生成以源程序的<strong>中间表示形式</strong>作为输入，并把它映射到<strong>目标语言</strong></p>
<p>目标代码生成一个重要任务是为程序中使用的变量<strong>合理分配寄存器</strong></p>
<h3 id="代码优化："><a href="#代码优化：" class="headerlink" title="代码优化："></a>代码优化：</h3><p>为改进代码所进行的等价程序变换，使其运行得更快一些、占用空间更少一些，或者二者兼顾。</p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理（四）正则表达式</title>
    <url>/2021/09/13/CompileTechnical04/</url>
    <content><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><img src="/2021/09/13/CompileTechnical04/image-20210913103353953.png"></p>
<h3 id="正则表达式的定义"><a href="#正则表达式的定义" class="headerlink" title="正则表达式的定义"></a>正则表达式的定义</h3><p><img src="/2021/09/13/CompileTechnical04/image-20210913103516059.png"></p>
<img src="/2021/09/13/CompileTechnical04/image-20210913103914688.png" style="zoom:50%;">



<h3 id="正则语言"><a href="#正则语言" class="headerlink" title="正则语言"></a>正则语言</h3><p><img src="/2021/09/13/CompileTechnical04/image-20210913103828514.png"></p>
<h3 id="RE的代数定律"><a href="#RE的代数定律" class="headerlink" title="RE的代数定律"></a>RE的代数定律</h3><p><img src="/2021/09/13/CompileTechnical04/image-20210913104140162.png"></p>
<h3 id="正则文法与正则表达式等价"><a href="#正则文法与正则表达式等价" class="headerlink" title="正则文法与正则表达式等价"></a>正则文法与正则表达式等价</h3><img src="/2021/09/13/CompileTechnical04/image-20210913104327585.png" style="zoom:67%;">



<h3 id="正则定义"><a href="#正则定义" class="headerlink" title="正则定义"></a>正则定义</h3><p><img src="/2021/09/13/CompileTechnical04/image-20210913104817879.png"></p>
<p>例：</p>
<img src="/2021/09/13/CompileTechnical04/image-20210913104849120.png" style="zoom:50%;">

]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理（二）词法分析器</title>
    <url>/2021/09/06/CompileTechnical02/</url>
    <content><![CDATA[<h1 id="词法分析器"><a href="#词法分析器" class="headerlink" title="词法分析器"></a>词法分析器</h1><p>词法分析是对源程序进行的首次分析，实现词法分析的程序称为<strong>词法分析程序</strong></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol>
<li><p>读入字符串</p>
</li>
<li><p>进行预处理工作</p>
<p>包括取消注释，剔除无用的空格键、跳格、回车、换行等</p>
</li>
<li><p>将预处理后的字符串转换为<strong>单词流</strong>输出</p>
</li>
</ol>
<h2 id="单词的识别"><a href="#单词的识别" class="headerlink" title="单词的识别"></a>单词的识别</h2><h3 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h3><ol>
<li>标识词：变量名、函数名等</li>
<li>基本字：如if、while、for等</li>
<li>常数：如整型、浮点型等</li>
<li>运算符：+-*/等</li>
<li>界符：包括,  ;  :  //  /* */等</li>
</ol>
<h3 id="表示方法"><a href="#表示方法" class="headerlink" title="表示方法"></a>表示方法</h3><p>通常一个单词用一个二元式来表示：</p>
<p>&lt;单词类型,单词的属性&gt;</p>
<p>例:</p>
<pre><code>int i=0;
</code></pre>
<p>识别的中间码：</p>
<pre><code>&lt;int的编码, - &gt;
&lt;标识符的编码,&quot;i&quot;&gt;
&lt;=的编码, - &gt;
&lt;常数的编码,常数0&gt;
&lt;;的编码, - &gt;
</code></pre>
<h2 id="状态转换图"><a href="#状态转换图" class="headerlink" title="状态转换图"></a>状态转换图</h2><p>状态转化图（转换图）是一张有限方向图，结点表示状态（State），有向边表示状态间的转换（Transition），有向边上标记的字符表示状态转换的条件。</p>
<p>状态数量是有限的，其中必有一个初始状态（双箭头指向），若干个终止状态（双圆圈表示）</p>
<p>某些终止状态是在多识别一个字符后才成为识别状态的，对这种情况多识别的字符予以退回，在终态上标“*”区别</p>
<p><img src="/2021/09/06/CompileTechnical02/1631068043131.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理（三）语言及其文法</title>
    <url>/2021/09/08/CompileTechnical03/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="字母表（Alphabet）"><a href="#字母表（Alphabet）" class="headerlink" title="字母表（Alphabet）"></a>字母表（Alphabet）</h3><p><strong>字母表∑是一个有穷符号集合</strong></p>
<p>符号：字母、数字、标点···</p>
<p><img src="/2021/09/08/CompileTechnical03/1631427430401-16314274433141.png"></p>
<h4 id="字母表的运算"><a href="#字母表的运算" class="headerlink" title="字母表的运算"></a>字母表的运算</h4><p>乘积：</p>
<p><img src="/2021/09/08/CompileTechnical03/1631427506335.png"></p>
<p>n次幂：</p>
<p><img src="/2021/09/08/CompileTechnical03/1631427551449.png"></p>
<p>正闭包：</p>
<p><img src="/2021/09/08/CompileTechnical03/1631427620613.png"></p>
<p>克林闭包：</p>
<p><img src="/2021/09/08/CompileTechnical03/1631427703580.png"></p>
<h3 id="串"><a href="#串" class="headerlink" title="串"></a>串</h3><p><img src="/2021/09/08/CompileTechnical03/1631427794545.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/1631427815604.png"></p>
<h4 id="串上的运算："><a href="#串上的运算：" class="headerlink" title="串上的运算："></a>串上的运算：</h4><p>连接：</p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912143008677.png"></p>
<p>幂运算：</p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912143111064.png"></p>
<h2 id="文法的定义"><a href="#文法的定义" class="headerlink" title="文法的定义"></a>文法的定义</h2><h3 id="自然语言的例子"><a href="#自然语言的例子" class="headerlink" title="自然语言的例子"></a>自然语言的例子</h3><p><img src="/2021/09/08/CompileTechnical03/1631066388769.png"></p>
<p>&lt;语法成分&gt;—-&gt;语言的基本符号</p>
<h3 id="文法形式化定义"><a href="#文法形式化定义" class="headerlink" title="文法形式化定义"></a>文法形式化定义</h3><p><strong>终结符</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/1631067074489.png"></p>
<p><strong>非终结符</strong><img src="/2021/09/08/CompileTechnical03/1631067116318.png"></p>
<p><strong>产生式集合</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/1631067215559.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/1631067329740.png"></p>
<p><strong>开始符号</strong></p>
<img src="/2021/09/08/CompileTechnical03/1631067410774.png" style="zoom: 50%;">

<p>开始符号表示该文法中最大的语法成分</p>
<p>例： S=&lt;句子&gt;</p>
<p><strong>文法表示</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912144829948.png"></p>
<h4 id="产生式的简写"><a href="#产生式的简写" class="headerlink" title="产生式的简写"></a>产生式的简写</h4><p><img src="/2021/09/08/CompileTechnical03/image-20210912145002125.png"></p>
<h4 id="符号约定"><a href="#符号约定" class="headerlink" title="符号约定"></a>符号约定</h4><p><img src="/2021/09/08/CompileTechnical03/image-20210912145437200.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912145547004.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912145646206.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912145815658.png"></p>
<h2 id="语言的形式化定义"><a href="#语言的形式化定义" class="headerlink" title="语言的形式化定义"></a>语言的形式化定义</h2><h3 id="推导和归约"><a href="#推导和归约" class="headerlink" title="推导和归约"></a>推导和归约</h3><p><img src="/2021/09/08/CompileTechnical03/image-20210912150225452.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912150316670.png"></p>
<p><strong>例子：</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912150417460.png"></p>
<p><strong>如何判断某一词串是否是该文法的句子：</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912150658480.png"></p>
<h3 id="句型和句子"><a href="#句型和句子" class="headerlink" title="句型和句子"></a>句型和句子</h3><p><img src="/2021/09/08/CompileTechnical03/image-20210912151143183.png"></p>
<p><strong>例子：</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912151234666.png"></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912151602748.png"></p>
<h2 id="Chomsky文法分类体系"><a href="#Chomsky文法分类体系" class="headerlink" title="Chomsky文法分类体系"></a>Chomsky文法分类体系</h2><h3 id="0型文法"><a href="#0型文法" class="headerlink" title="0型文法"></a>0型文法</h3><img src="/2021/09/08/CompileTechnical03/image-20210912152312993.png" style="zoom: 80%;">



<h3 id="1型文法"><a href="#1型文法" class="headerlink" title="1型文法"></a>1型文法</h3><img src="/2021/09/08/CompileTechnical03/image-20210912152833892.png" style="zoom:80%;">

<p><strong>ε-产生式：右部为空串的产生式</strong></p>
<h3 id="2型文法"><a href="#2型文法" class="headerlink" title="2型文法"></a>2型文法</h3><img src="/2021/09/08/CompileTechnical03/image-20210912153121027.png" style="zoom:80%;">

<img src="/2021/09/08/CompileTechnical03/image-20210912154056351.png" style="zoom:80%;">



<h3 id="3型文法"><a href="#3型文法" class="headerlink" title="3型文法"></a>3型文法</h3><p><img src="/2021/09/08/CompileTechnical03/image-20210912154530442.png"></p>
 <img src="/2021/09/08/CompileTechnical03/image-20210912155146911.png" style="zoom:80%;">



<h3 id="四种文法的关系："><a href="#四种文法的关系：" class="headerlink" title="四种文法的关系："></a>四种文法的关系：</h3><img src="/2021/09/08/CompileTechnical03/1631433173194.png" style="zoom:80%;">





<h2 id="CFG分析树"><a href="#CFG分析树" class="headerlink" title="CFG分析树"></a>CFG分析树</h2><p><img src="/2021/09/08/CompileTechnical03/image-20210912160412131.png"></p>
<img src="/2021/09/08/CompileTechnical03/image-20210912160519530.png" style="zoom:80%;">



<p><strong>（句型的）短语</strong></p>
<p><img src="/2021/09/08/CompileTechnical03/image-20210912161659518.png"></p>
<h3 id="二义性文法"><a href="#二义性文法" class="headerlink" title="二义性文法"></a><strong>二义性文法</strong></h3><p><img src="/2021/09/08/CompileTechnical03/image-20210912162014931.png"></p>
<p>例：</p>
<img src="/2021/09/08/CompileTechnical03/image-20210912162223446.png" style="zoom:67%;">



<h3 id="二义性文法的判定"><a href="#二义性文法的判定" class="headerlink" title="二义性文法的判定"></a><strong>二义性文法的判定</strong></h3><p><img src="/2021/09/08/CompileTechnical03/image-20210912162329248.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理（五）有穷自动机</title>
    <url>/2021/09/13/CompileTechnical05/</url>
    <content><![CDATA[<h2 id="有穷自动机"><a href="#有穷自动机" class="headerlink" title="有穷自动机"></a>有穷自动机</h2><p><img src="/2021/09/13/CompileTechnical05/image-20210913110558275.png"></p>
<h3 id="FA的典型例子"><a href="#FA的典型例子" class="headerlink" title="FA的典型例子"></a>FA的典型例子</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913111631646.png"></p>
<h3 id="FA模型"><a href="#FA模型" class="headerlink" title="FA模型"></a>FA模型</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913111732614.png"></p>
<h3 id="FA的表示"><a href="#FA的表示" class="headerlink" title="FA的表示"></a>FA的表示</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913111848121.png"></p>
<h3 id="最长子串匹配原则（Longest-String-Matching-Principle）"><a href="#最长子串匹配原则（Longest-String-Matching-Principle）" class="headerlink" title="最长子串匹配原则（Longest String Matching Principle）"></a>最长子串匹配原则（Longest String Matching Principle）</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913112130173.png"></p>
<h2 id="FA的分类"><a href="#FA的分类" class="headerlink" title="FA的分类"></a>FA的分类</h2><p><img src="/2021/09/13/CompileTechnical05/image-20210913112310989.png"></p>
<h3 id="确定的有穷自动机（DFA）"><a href="#确定的有穷自动机（DFA）" class="headerlink" title="确定的有穷自动机（DFA）"></a>确定的有穷自动机（DFA）</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913112408235.png"></p>
<p>例：</p>
<p><img src="/2021/09/13/CompileTechnical05/image-20210913112547422.png"></p>
<h3 id="非确定的有穷自动机（NFA）"><a href="#非确定的有穷自动机（NFA）" class="headerlink" title="非确定的有穷自动机（NFA）"></a>非确定的有穷自动机（NFA）</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913112816595.png"></p>
<p>例：</p>
<p><img src="/2021/09/13/CompileTechnical05/image-20210913113105794.png"></p>
<h3 id="DFA和NFA的等价性"><a href="#DFA和NFA的等价性" class="headerlink" title="DFA和NFA的等价性"></a>DFA和NFA的等价性</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913113209744.png"></p>
<p>例：</p>
<p><img src="/2021/09/13/CompileTechnical05/image-20210913113401567.png"></p>
<h3 id="带有“ε-边”的NFA"><a href="#带有“ε-边”的NFA" class="headerlink" title="带有“ε-边”的NFA"></a>带有“ε-边”的NFA</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913113547309.png"></p>
<h3 id="带有和不带有“ε-边”的NFA的等价性"><a href="#带有和不带有“ε-边”的NFA的等价性" class="headerlink" title="带有和不带有“ε-边”的NFA的等价性"></a>带有和不带有“ε-边”的NFA的等价性</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913113806553.png"></p>
<h3 id="DAF的算法实现"><a href="#DAF的算法实现" class="headerlink" title="DAF的算法实现"></a>DAF的算法实现</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913114040891.png"></p>
<h2 id="从正则表达式到有穷自动机"><a href="#从正则表达式到有穷自动机" class="headerlink" title="从正则表达式到有穷自动机"></a>从正则表达式到有穷自动机</h2><p><img src="/2021/09/13/CompileTechnical05/image-20210913114442039.png"></p>
<h3 id="根据RE构造NFA"><a href="#根据RE构造NFA" class="headerlink" title="根据RE构造NFA"></a>根据RE构造NFA</h3><img src="/2021/09/13/CompileTechnical05/image-20210913114513431.png" style="zoom: 67%;">



<p><img src="/2021/09/13/CompileTechnical05/image-20210913114751466.png"></p>
<img src="/2021/09/13/CompileTechnical05/image-20210913114836905.png" style="zoom:80%;">

<h3 id="从NFA到DFA的转换"><a href="#从NFA到DFA的转换" class="headerlink" title="从NFA到DFA的转换"></a>从NFA到DFA的转换</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913151805953.png"></p>
<p>可见，DFA中的状态是NFA中若干状态的集合</p>
<img src="/2021/09/13/CompileTechnical05/image-20210913152400310.png" style="zoom:80%;">

<p><img src="/2021/09/13/CompileTechnical05/image-20210913152807437.png" alt="image-20210913152807437"></p>
<h3 id="计算-closure（T）"><a href="#计算-closure（T）" class="headerlink" title="计算-closure（T）"></a>计算-closure（T）</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913153232065.png"></p>
<h2 id="识别单词的DFA"><a href="#识别单词的DFA" class="headerlink" title="识别单词的DFA"></a>识别单词的DFA</h2><h3 id="识别标识符的正则表达式"><a href="#识别标识符的正则表达式" class="headerlink" title="识别标识符的正则表达式"></a>识别标识符的正则表达式</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913154102608.png"></p>
<h3 id="识别无符号数的DFA"><a href="#识别无符号数的DFA" class="headerlink" title="识别无符号数的DFA"></a>识别无符号数的DFA</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913154233027.png"></p>
<p><img src="/2021/09/13/CompileTechnical05/image-20210913154619752.png"></p>
<h3 id="识别无符号数的DFA-1"><a href="#识别无符号数的DFA-1" class="headerlink" title="识别无符号数的DFA"></a>识别无符号数的DFA</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913154939740.png"></p>
<h3 id="识别注释的DFA"><a href="#识别注释的DFA" class="headerlink" title="识别注释的DFA"></a>识别注释的DFA</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913155223841.png"></p>
<h3 id="总结：识别Token的DFA"><a href="#总结：识别Token的DFA" class="headerlink" title="总结：识别Token的DFA"></a>总结：识别Token的DFA</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913155515955.png"></p>
<h2 id="词法分析阶段的错误处理"><a href="#词法分析阶段的错误处理" class="headerlink" title="词法分析阶段的错误处理"></a>词法分析阶段的错误处理</h2><h3 id="可检测的错误类型"><a href="#可检测的错误类型" class="headerlink" title="可检测的错误类型"></a>可检测的错误类型</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913155816099.png"></p>
<h3 id="词法错误检测"><a href="#词法错误检测" class="headerlink" title="词法错误检测"></a>词法错误检测</h3><p>如果当前状态与当前输入符号在转换表中对应项的信息为空，则报错，调用错误处理程序</p>
<h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913162921960.png"></p>
<h3 id="错误回复策略"><a href="#错误回复策略" class="headerlink" title="错误回复策略"></a>错误回复策略</h3><p><img src="/2021/09/13/CompileTechnical05/image-20210913163001011.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
        <tag>有穷自动机</tag>
      </tags>
  </entry>
  <entry>
    <title>编译原理（六）自顶向下的分析</title>
    <url>/2021/09/15/CompileTechnical06/</url>
    <content><![CDATA[<h2 id="自顶向下的分析-（Top-Down-Parsing）"><a href="#自顶向下的分析-（Top-Down-Parsing）" class="headerlink" title="自顶向下的分析 （Top-Down Parsing）"></a>自顶向下的分析 （Top-Down Parsing）</h2><p><img src="/2021/09/15/CompileTechnical06/image-20210915091925663.png"></p>
<h3 id="最左推导（Left-mostDerivation）"><a href="#最左推导（Left-mostDerivation）" class="headerlink" title="最左推导（Left-mostDerivation）"></a>最左推导（Left-mostDerivation）</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210915092045212.png"></p>
<h3 id="最右推导（Right-most-Derivation）"><a href="#最右推导（Right-most-Derivation）" class="headerlink" title="最右推导（Right-most Derivation）"></a>最右推导（Right-most Derivation）</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210915092144182.png"></p>
<p>在自定向上的分析中，总是采用最左归约的方式，因此把<strong>最左归约</strong>称为<strong>规范归约</strong>，而<strong>最右推导</strong>相应地称为<strong>规范推导</strong></p>
<h3 id="最右推导和最左推导的唯一性"><a href="#最右推导和最左推导的唯一性" class="headerlink" title="最右推导和最左推导的唯一性"></a>最右推导和最左推导的唯一性</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210915093257042.png"></p>
<p><strong>自顶向下的语法分析采用最左推导方式</strong></p>
<p>总是选择每个句型的最左非终结符进行替换</p>
<p>根据输入流中的下一个终结符，选择最左非终结符的一个候选式</p>
<p>例：</p>
<p><img src="/2021/09/15/CompileTechnical06/1631669772951.png"></p>
<h3 id="自顶向下语法分析的通用形式"><a href="#自顶向下语法分析的通用形式" class="headerlink" title="自顶向下语法分析的通用形式"></a>自顶向下语法分析的通用形式</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210915094352344.png"></p>
<h3 id="预测分析"><a href="#预测分析" class="headerlink" title="预测分析"></a>预测分析</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210915095115483.png"></p>
<h2 id="文法转换"><a href="#文法转换" class="headerlink" title="文法转换"></a>文法转换</h2><p><strong>问题1</strong></p>
<img src="/2021/09/15/CompileTechnical06/image-20210915095557128.png" style="zoom:67%;">

<p><strong>问题2</strong></p>
<img src="/2021/09/15/CompileTechnical06/image-20210915095625817.png" alt="image-20210915095625817" style="zoom:67%;">



<h3 id="消除直接左递归"><a href="#消除直接左递归" class="headerlink" title="消除直接左递归"></a>消除直接左递归</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210917151108735.png"></p>
<p><strong>消除左递归的一般形式</strong></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917151306750.png"></p>
<h3 id="消除间接左递归"><a href="#消除间接左递归" class="headerlink" title="消除间接左递归"></a>消除间接左递归</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210917152125244.png"></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917152305490.png"></p>
<h3 id="提取左公因子"><a href="#提取左公因子" class="headerlink" title="提取左公因子"></a>提取左公因子</h3><p><img src="/2021/09/15/CompileTechnical06/image-20210917152442550.png"></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917152844195.png"></p>
<h2 id="LL-1-文法"><a href="#LL-1-文法" class="headerlink" title="LL(1)文法"></a>LL(1)文法</h2><ul>
<li>第一个“L”：left to right，按照从左到右的顺序处理输入的token序列</li>
<li>第二个“L”：leftmost derivation，从文法的最左边开始进行推导</li>
<li>“(1)”：使用1个token来预测解析的方向（当然也有LL(n)）</li>
</ul>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917153215934.png"></p>
<p>例：</p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917153737301.png"></p>
<h4 id="非终结符的后继符号级"><a href="#非终结符的后继符号级" class="headerlink" title="非终结符的后继符号级"></a>非终结符的后继符号级</h4><p><img src="/2021/09/15/CompileTechnical06/image-20210917155114722.png"></p>
<h4 id="产生式的可选集"><a href="#产生式的可选集" class="headerlink" title="产生式的可选集"></a>产生式的可选集</h4><p><img src="/2021/09/15/CompileTechnical06/image-20210917155712456.png"></p>
<h4 id="串首终结符集"><a href="#串首终结符集" class="headerlink" title="串首终结符集"></a>串首终结符集</h4><p><img src="/2021/09/15/CompileTechnical06/image-20210917160516778.png"></p>
<h4 id="LL-1-文法-1"><a href="#LL-1-文法-1" class="headerlink" title="LL(1)文法"></a>LL(1)文法</h4><p><img src="/2021/09/15/CompileTechnical06/image-20210917161259083.png"></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917161342550.png"></p>
<h2 id="FIRST集和FOLLOW集的计算"><a href="#FIRST集和FOLLOW集的计算" class="headerlink" title="FIRST集和FOLLOW集的计算"></a>FIRST集和FOLLOW集的计算</h2><p><strong>计算FIRST集</strong></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210918113202668.png"></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210917161922136.png"></p>
<p><strong>计算FOLLOW集</strong></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210918113224532.png"></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210918113239292.png"></p>
<p><strong>计算SELECT集</strong></p>
<p><img src="/2021/09/15/CompileTechnical06/image-20210918113340666.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译技术（七）</title>
    <url>/2021/09/27/CompileTechnical07/</url>
    <content><![CDATA[<h2 id="递归的预测分析法"><a href="#递归的预测分析法" class="headerlink" title="递归的预测分析法"></a>递归的预测分析法</h2><p><img src="/2021/09/27/CompileTechnical07/image-20210927195215795.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927195446119.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927195647264.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927200237286.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927200250896.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927200309486.png"></p>
<h2 id="非递归的预测分析法"><a href="#非递归的预测分析法" class="headerlink" title="非递归的预测分析法"></a>非递归的预测分析法</h2><p><img src="/2021/09/27/CompileTechnical07/image-20210927200431533.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927201320326.png"></p>
<p><strong>表驱动的预测分析法</strong></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927201402297.png"></p>
<p><strong>对比</strong></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927203201613.png"></p>
<p><strong>实现步骤</strong></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927203440620.png"></p>
<h2 id="预测分析中的错误检测"><a href="#预测分析中的错误检测" class="headerlink" title="预测分析中的错误检测"></a>预测分析中的错误检测</h2><p><img src="/2021/09/27/CompileTechnical07/image-20210927203536117.png"></p>
<h3 id="恐慌模式"><a href="#恐慌模式" class="headerlink" title="恐慌模式"></a>恐慌模式</h3><p><img src="/2021/09/27/CompileTechnical07/image-20210927203622693.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927204148013.png"></p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927204631068.png"></p>
<h2 id="该章要点"><a href="#该章要点" class="headerlink" title="该章要点"></a>该章要点</h2><p><img src="/2021/09/27/CompileTechnical07/image-20210927205758518.png"></p>
<p>递归的预测分析 </p>
<p><img src="/2021/09/27/CompileTechnical07/image-20210927210130858.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>编译技术（八）自底向上分析概述</title>
    <url>/2021/09/27/CompileTechnical08/</url>
    <content><![CDATA[<h2 id="自底向上分析概述"><a href="#自底向上分析概述" class="headerlink" title="自底向上分析概述"></a>自底向上分析概述</h2><p><img src="/2021/09/27/CompileTechnical08/image-20210927211636184.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927212049846.png"></p>
<p>每次归约的符号串称为“<strong>句柄</strong>”</p>
<h3 id="移入-归约分析的工作过程"><a href="#移入-归约分析的工作过程" class="headerlink" title="移入-归约分析的工作过程"></a>移入-归约分析的工作过程</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210927212901034.png"></p>
<h3 id="移入-归约分析可采取的4种动作"><a href="#移入-归约分析可采取的4种动作" class="headerlink" title="移入-归约分析可采取的4种动作"></a>移入-归约分析可采取的4种动作</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210927212955907.png"></p>
<h3 id="移入-归约分析中存在的问题"><a href="#移入-归约分析中存在的问题" class="headerlink" title="移入-归约分析中存在的问题"></a>移入-归约分析中存在的问题</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210927213143213.png"></p>
<p>造成错误的原因：错误地识别了句柄</p>
<h2 id="LR分析法"><a href="#LR分析法" class="headerlink" title="LR分析法"></a>LR分析法</h2><p><img src="/2021/09/27/CompileTechnical08/image-20210927214047716.png"></p>
<p><strong>LR分析法的基本原理</strong></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927214123653.png"></p>
<h3 id="LR分析器（自动机）的总体结构"><a href="#LR分析器（自动机）的总体结构" class="headerlink" title="LR分析器（自动机）的总体结构"></a><strong>LR分析器（自动机）的总体结构</strong></h3><p><img src="/2021/09/27/CompileTechnical08/image-20210927214422190.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927214936681.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927215216357.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927215226895.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927215242790.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927215254745.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210927215304387.png"></p>
<h3 id="LR分析法的工作流程"><a href="#LR分析法的工作流程" class="headerlink" title="LR分析法的工作流程"></a><strong>LR分析法的工作流程</strong></h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929090158168.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929090400576.png" alt="image-20210929090400576"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929090411687.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929090724075.png"></p>
<h2 id="LR（0）项目"><a href="#LR（0）项目" class="headerlink" title="LR（0）项目"></a>LR（0）项目</h2><p><img src="/2021/09/27/CompileTechnical08/image-20210929104124517.png"></p>
<h3 id><a href="#" class="headerlink" title></a></h3><h3 id="增广文法"><a href="#增广文法" class="headerlink" title="增广文法"></a>增广文法</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929104352500.png"></p>
<p><strong>文法中的项目</strong></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929104707194.png" alt="image-20210929104707194"></p>
<p>归约项目：原点在最后的项目</p>
<p>接收项目：文法开始符的归约项目</p>
<p>待约项目：圆点后为非终结符的项目</p>
<p>移进项目：原点后为终结符的项目</p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929105608678.png" alt="image-20210929105608678"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929105840997.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929110155851.png"></p>
<h3 id="CLOSURE-函数"><a href="#CLOSURE-函数" class="headerlink" title="CLOSURE()函数"></a>CLOSURE()函数</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929111658342.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929111707276.png"></p>
<h3 id="GOTO-函数"><a href="#GOTO-函数" class="headerlink" title="GOTO()函数"></a>GOTO()函数</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929112008473.png"></p>
<h3 id="构造LR-0-自动机的状态集"><a href="#构造LR-0-自动机的状态集" class="headerlink" title="构造LR(0)自动机的状态集"></a>构造LR(0)自动机的状态集</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929112215276.png"></p>
<h3 id="LR-0-分析表构造算法"><a href="#LR-0-分析表构造算法" class="headerlink" title="LR(0)分析表构造算法"></a>LR(0)分析表构造算法</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929112534836.png"></p>
<h3 id="LR-0-自动机的形式化定义"><a href="#LR-0-自动机的形式化定义" class="headerlink" title="LR(0)自动机的形式化定义"></a>LR(0)自动机的形式化定义</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929112845821.png"></p>
<h3 id="LR-0-分析过程中的冲突"><a href="#LR-0-分析过程中的冲突" class="headerlink" title="LR(0)分析过程中的冲突"></a>LR(0)分析过程中的冲突</h3><p><img src="/2021/09/27/CompileTechnical08/image-20210929113140568.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929113258671.png"></p>
<p><img src="/2021/09/27/CompileTechnical08/image-20210929113418363.png"></p>
]]></content>
      <categories>
        <category>编译原理</category>
      </categories>
      <tags>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理（一）</title>
    <url>/2021/09/08/ComputerCompositionPrinciple01/</url>
    <content><![CDATA[<h2 id="计算机基本组成"><a href="#计算机基本组成" class="headerlink" title="计算机基本组成"></a>计算机基本组成</h2><p><strong>五大组成部分</strong></p>
<p>运算器、控制器、存储器、输入设备、输出设备</p>
<p><strong>硬件组成</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631101751247-16311017717611.png"></p>
<p><strong>工作流程：</strong></p>
<p>编写程序-&gt;输入程序-&gt;存储程序-&gt;程序转换为指令序列-&gt;执行指令-&gt;输出结果</p>
<p><strong>计算机内部的两大流：</strong></p>
<p>控制流：控制计算机工作大学习，即指令、微命令</p>
<p>数据流：计算机加工处理的对象，即数据型数据，非数值型数据</p>
<p>（重点：信息的表示；信息的传送及传送中的控制）</p>
<h2 id="存储程序"><a href="#存储程序" class="headerlink" title="存储程序"></a>存储程序</h2><p><strong>计算机存储程序的工作方式：</strong></p>
<ol>
<li>事先编制程序</li>
<li>存储程序</li>
<li>自动连续运行程序</li>
</ol>
<p><strong>冯诺依曼体质</strong></p>
<ol>
<li>采用二进制形式表示数据和指令</li>
<li>采用存储程序方式工作（核心）</li>
<li>由五大部分组成计算机系统的硬件，并规定了这五部分的基本功能</li>
</ol>
<h2 id="数字型计算机的特点"><a href="#数字型计算机的特点" class="headerlink" title="数字型计算机的特点"></a>数字型计算机的特点</h2><ol>
<li>能在程序控制下自动连续工作：PC寄存器</li>
<li>运算速度快</li>
<li>运算精度高</li>
<li>具有很强的信息存储能力</li>
<li>通用性强</li>
</ol>
<h2 id="主要功能部件"><a href="#主要功能部件" class="headerlink" title="主要功能部件"></a>主要功能部件</h2><h3 id="存储器"><a href="#存储器" class="headerlink" title="存储器"></a>存储器</h3><p>功能：存储信息</p>
<p>组成（主存储器）：</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631103052208.png"></p>
<p><strong>存储体：</strong>存放信息的实体</p>
<p><strong>寻址系统：</strong>对地址码译码，选择存储单元</p>
<p><strong>读/写线路和数据寄存器：</strong>完成读/写操作，</p>
<p>​                                            暂存读/写数据</p>
<p><strong>控制线路：</strong>产生读/写时序，控制读/写操作</p>
<h3 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h3><p>由<strong>运算器、控制器</strong>组成</p>
<h4 id="运算器："><a href="#运算器：" class="headerlink" title="运算器："></a>运算器：</h4><p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631103737634.png"></p>
<p><strong>ALU：</strong>通过加法器实现运算操作（由<strong>全加器</strong>求和，由<strong>进位链</strong>传递<strong>进位信号</strong>）</p>
<p><strong>通用寄存器组：</strong>提供操作数，存放运算结果</p>
<p><strong>移位器：</strong>直接或者移位送出运算结果</p>
<p><strong>控制器：</strong></p>
<ol>
<li><p>功能：产生控制命令（微命令），控制全机操作</p>
</li>
<li><p>组成：</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104175903.png"></p>
</li>
<li><p>微命令产生方式（指令执行控制方式）:</p>
<ul>
<li>组合逻辑控制方式：由组合逻辑电路产生微命令</li>
<li>微程序控制方式：由微指令产生微命令</li>
</ul>
</li>
</ol>
<h3 id="输入-输出设备"><a href="#输入-输出设备" class="headerlink" title="输入/输出设备"></a>输入/输出设备</h3><ol>
<li><p>功能：转换信息</p>
<p>输入：原始信息-&gt;代码，送入主机 </p>
<p>输出：处理结果-&gt;人所能接受的形式，并输出 （代码）</p>
</li>
</ol>
<h2 id="硬件系统结构"><a href="#硬件系统结构" class="headerlink" title="硬件系统结构"></a>硬件系统结构</h2><h3 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h3><p>能为多个部件分时、共享的一组信息传送线 路及相应的控制逻辑。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104683808.png"></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104748258.png"></p>
<p><strong>以CPU为中心的双总线结构：</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104791464.png"></p>
<p><strong>单总线结构：</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104831462.png"></p>
<p><strong>以M为中心的双总线结构：</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104873210.png"></p>
<p><strong>多级总线结构：</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631104927121.png"></p>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>部件与部件（指硬件或软件）之间的交接部分称为接口；</p>
<p>主机系统总线与I/O设备之间的交接部分称为I/O接口。</p>
<p><strong>接口类型</strong></p>
<p>按传送格式： 串行接口、并行接口 </p>
<p>按时序控制： 同步接口、异步接口 </p>
<p>按信息传送控制方式：<strong>中断接口</strong>、DMA接口</p>
<h2 id="计算机性能的性能指标"><a href="#计算机性能的性能指标" class="headerlink" title="计算机性能的性能指标"></a>计算机性能的性能指标</h2><h3 id="基本字长"><a href="#基本字长" class="headerlink" title="基本字长"></a>基本字长</h3><p>一般指参加<strong>一次定点运算的操作数的位数</strong></p>
<p>8、16、32、64位</p>
<h3 id="运算速度"><a href="#运算速度" class="headerlink" title="运算速度"></a>运算速度</h3><p><strong>CPU主频</strong></p>
<p>计算机的振荡器输出的脉冲序列的频率，是计算机中一切操作所依据的时间基准信号，其高低决定了计算机工做速度的快慢。</p>
<p><strong>时钟频率</strong></p>
<p>是主频脉冲经分频后所形成的时钟脉冲序列的频率，两个相邻时钟脉冲之间的间隔时间是一个<strong>时钟周期</strong>时间，也称为<strong>节拍</strong>。</p>
<h3 id="数据通路宽度与数据传输率"><a href="#数据通路宽度与数据传输率" class="headerlink" title="数据通路宽度与数据传输率"></a>数据通路宽度与数据传输率</h3><p><strong>数据通路宽度</strong></p>
<p> 指数据总线（多条）一次能并行传送的数据位数。</p>
<p><strong>数据传输率</strong></p>
<p>指数据总线每秒传送的数据量，也称为数据总线的带宽。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple01/1631106969901.png"></p>
<h3 id="存储容量"><a href="#存储容量" class="headerlink" title="存储容量"></a>存储容量</h3><p><strong>主存容量：</strong></p>
<p>指  存储单元个数（地址位数）×位数（编制单位）</p>
<p>表示为：字数×字长（按字编址，16位） </p>
<p>​                或 字数×字节长（按字节编址，8位）</p>
<p><strong>外存容量：</strong></p>
<p>常表示为字节数。 外存容量与地址码位数无关。</p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理（二）</title>
    <url>/2021/09/08/ComputerCompositionPrinciple02/</url>
    <content><![CDATA[<p><strong>计算机中信息的表示方式</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631108317881.png"></p>
<p><strong>指令的执行：</strong></p>
<ol>
<li>取指：从主存储器中取指令；</li>
<li>执行指令：在CPU内部执行该条指令（在此过程中， CPU一般还需从主存储器中获取如操作数等相关的信 息）；</li>
<li>存结果：结果送回存储器存放。</li>
</ol>
<p><strong>指令：</strong>一系列按照某种规律有序排列的，能被CPU 识别、并执行的二进制代码</p>
<p><strong>指令系统（或集）：</strong>一台计算机所能执行的全部指令。</p>
<h2 id="指令格式"><a href="#指令格式" class="headerlink" title="指令格式"></a>指令格式</h2><p>一条指令最多提供两方面的信息：</p>
<p>操作码（OP）：与CPU操作有关的信息</p>
<p>地址码（AD）：与操作数有关的信息</p>
<p><strong>基本格式</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631108657173.png"></p>
<h2 id="指令字长"><a href="#指令字长" class="headerlink" title="指令字长"></a>指令字长</h2><p>指令字长越长：</p>
<p>​    优点：功能丰富，完成工作多</p>
<p>​    缺点：占用空间大，取指时间长，执行速度慢</p>
<p><strong>操作码的位数决定了操作类型的多少</strong></p>
<p><strong>操作码分类：</strong></p>
<p>定长操作码：</p>
<p>指令长度比较长时，位置、位数固定，位置在指令 的前几位。</p>
<p>扩展操作码：</p>
<p>指令长度比较短时，位置、位数不固定，用扩展标 志表示。</p>
<p>方式码：</p>
<p>操作码分为几部分，每部分表示一种操作。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631109347792.png"></p>
<h2 id="地址结构"><a href="#地址结构" class="headerlink" title="地址结构"></a>地址结构</h2><p>在指令中明确给出几个地址，给出哪些地址</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631235309933.png"></p>
<p><strong>指令给出操作数地址的方式：</strong></p>
<p>显式：直接、间接、变址、基址等</p>
<p>隐式：隐含约定寄存器号、主存储器单元号</p>
<p><strong>显地址：</strong></p>
<p>指令明显给出地址</p>
<p>如：写明主存储单元号 或CPU的寄存器编号,则这种地址表达称为显地址。</p>
<p><strong>显地址分为：</strong> 三地址指令、二地址指令、 一地址指令、零地址指令</p>
<p><strong>隐地址：</strong></p>
<p>指令中的地址是以隐含的方式约定</p>
<p>如：系统事先隐含约定操作数在CPU某个寄存器中,或是在堆栈 中,因此在指令中并不给出地址码,这种隐含约定的地址就称为隐地址。</p>
<p><strong>简化地址结构的基本途径：尽量使用隐地址。</strong></p>
<p><strong>（1）四地址指令</strong></p>
<p><strong><img src="/2021/09/08/ComputerCompositionPrinciple02/1631236505556.png"></strong></p>
<p><strong>（2）三地址指令</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631237535653.png"></p>
<p><strong>（3）二地址指令</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631237595648.png"></p>
<p><strong>（4）单地址指令</strong></p>
<p><strong>a. 隐含约定的目的地的双操作数指令</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631237677942.png"></p>
<img src="/2021/09/08/ComputerCompositionPrinciple02/1631238035214-16312380540271.png" style="zoom:50%;">



<p><strong>b.只有目的操作数的单操作数指令</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631238181946.png"></p>
<p><strong>（5）零地址指令</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631238421642.png"></p>
<p><strong>a.对只有目的操作数的指令，隐含在指定寄存器内 进行操作。</strong></p>
<p>PUSHF ；FLAGS→入栈 </p>
<p>POPF ；FLAGS→出栈 </p>
<p>LAHF ；FLAGS的低8位→AH </p>
<p>SAHF ；AH→FLAGS的低8位</p>
<p>···</p>
<p><strong>b.不需要操作数的指令。</strong></p>
<p>NOP ；空操作指令</p>
<p>HLT ；停机指令</p>
<p>···</p>
<p><strong>c.对堆栈栈顶单元内容进行操作,如指令PUSH (压 入堆栈)、POP (弹出堆栈)</strong></p>
<h2 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h2><p><img src="/2021/09/08/ComputerCompositionPrinciple02/1631239226346.png"></p>
<p>① CPU能够直接访问的操作数只能存放在主存储器 （包括CACHE、接口中的R）或CPU内的寄存器中； </p>
<p>② 由于主存储器的容量远远大于CPU内的寄存器的 容量，因此CPU能够直接访问的操作数主要存放在主 存储器中。</p>
<p><strong>存放方式（大致过程）：</strong></p>
<p>程序-&gt;CS段</p>
<p>数据-&gt;DS段</p>
<p>结果-&gt;ES段</p>
<p>下条地址-&gt;SS段</p>
<p><strong>四大寻址方式</strong></p>
<ol>
<li><p><strong>立即寻址：（掌握）</strong></p>
<p>操作码字段后面你的部分不是操作码地址，而是操作数本身。在读取指令时也就从指令之中获得了操作数，即操 作数包含在指令中。</p>
<img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913085811043.png" style="zoom:50%;"></li>
<li><p><strong>直接寻址类：（掌握）</strong></p>
<p>直接给出主存地址（主存直接寻址）或寄存器（寄存器直接寻址）编号，从主存单元内或 CPU的寄存器内读取操作数。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913085532650.png"></p>
<img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913090007021.png" style="zoom:67%;">

<p><strong>比较：</strong></p>
<p>a. 直接寻址是访问一次主存才能读取所需操作数；寄 存器寻址是从CPU的寄存器中读取操作数，不需访问主存，所需时间大约是从主存中读数时间的几分之一到 几十分之一 ，因而寄存器寻址比直接寻址快得多。</p>
<p>b.由于寄存器数远少于主存储器的单元数，所以指令 中存放寄存器号的字段位数也就大大少于存放主存地 址码所需位数。采用寄存器寻址方式或其它以寄存器 为基础的寻址方式（例如寄存器寻址、寄存器间址方 式），可以大大减少指令中一个地址的位数，从而有 效地缩短指令长度。这也使读取指令的时间减少，提 高了工作速度。</p>
<p><strong>注意：</strong></p>
<p>减少指令中地址数目与减少一个地址的位数是 两个不同的概念。 </p>
<p>采用隐地址可以减少指令中地址的数目； </p>
<p>采用寄存器寻址方式、寄存器间址方式等可以使指令中为给出一个地址所需的位数减少。 其实，均减少了指令长度。</p>
</li>
<li><p><strong>间接寻址类：（掌握）</strong></p>
<p>先从某寄存器/主存中读取地址，再按这个地址访问 主存以读取操作数。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913092428125.png"></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913094228659.png"></p>
<p><strong>自增型寄存器间址方式</strong></p>
<p>寄存器间址的一种变型,若指令中给出存放操作数地址 的寄存器号,从寄存器中读出操作数地址后,寄存器内容加1，这种寻址方式称为自增型寄存器间接寻址。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913095016132.png"></p>
<p><strong>自减型寄存器间址型</strong></p>
<p>若指令中给出寄存器号，被指定的寄存器内容减1后 作为操作数地址，按照该地址访问主存储器，相应的主 存单元内容为操作数，自减型寄存器间址方式常用助记 符 -（R）表示。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913095243802.png"></p>
<p><strong>堆栈寻址</strong></p>
<p>堆栈寻址方式是指操作数在堆栈中，指令隐含约定由堆 栈指针SP寄存器提供栈顶单元地址（SP也可以编码形式 出现在指令中），进行读出或写入的一种寻址方式。 根据压入数据时栈顶单元的地址是减小还是增大或不变, 可以将堆栈的工作方式大致分为向上生成方式、向下生 成方式和栈顶固定方式三种。</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210913100304932.png"></p>
</li>
</ol>
<p><strong>多重间接寻址</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915202759509.png"></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915202812521.png"></p>
<p>例：</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915202828392.png"></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915202904166.png"></p>
<ol start="4">
<li><strong>变址类</strong></li>
</ol>
<p><strong>变址寻址</strong>（掌握）</p>
<p>SI:source index</p>
<p>DI:destination index</p>
<p>BX:base </p>
<p>BP:base pointer</p>
<p>在8086/8088中使用SI,DI</p>
<p>指令给出的是形式地址（不是最终地址），经过某种变换（例如相加、相减、高低位地址拼接等），才获得有效地址，据此访问主存储器以读取操作数。变址方式常用助记符**X(R)**表示</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915200045895.png"></p>
<p>例:</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915200155551.png"></p>
<p><strong>基址寻址</strong></p>
<p>区别：寄存器不一样</p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915200329184.png"></p>
<p><strong>变址、基址寻址区别</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915200841131.png"></p>
<p><strong>基址加变址方式</strong></p>
<p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915201014412.png"></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><img src="/2021/09/08/ComputerCompositionPrinciple02/image-20210915202424469.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理（三）</title>
    <url>/2021/09/15/ComputerCompositionPrinciple03/</url>
    <content><![CDATA[<h1 id="指令分类"><a href="#指令分类" class="headerlink" title="指令分类"></a>指令分类</h1><p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915203451432.png"></p>
<ol>
<li><p>按指令格式分类</p>
<p>双操作数指令，单操作数指令，程序转移指令</p>
</li>
<li><p>按操作数寻址方式分类</p>
<p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915203637196.png"></p>
</li>
<li><p>按指令功能分类</p>
<p><strong>传送指令，输入/输出（I/O）指令</strong>，算数逻辑指令，程序控制指令，处理机控制类指令</p>
</li>
</ol>
<h2 id="一般传送指令"><a href="#一般传送指令" class="headerlink" title="一般传送指令"></a>一般传送指令</h2><p>计算机中<strong>最基本的指令</strong>，包括：</p>
<p>算术逻辑运算、输入输出操作···</p>
<p>单纯的传送指令将数据从一个地方（源地址）传送到另一个地方（目的地址）</p>
<p><strong>传送范围</strong>：</p>
<p>即指令允许数据在什么范围内传送。</p>
<p>操作数来源与目的地主要是：<strong>CPU寄存器、主存储器</strong></p>
<p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915204839560.png"></p>
<p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915204851811.png"></p>
<p><strong>传送单位</strong></p>
<p><strong>设置寻址方式</strong></p>
<h2 id="输入输出（I-O）指令"><a href="#输入输出（I-O）指令" class="headerlink" title="输入输出（I/O）指令"></a>输入输出（I/O）指令</h2><p>从广义的角度来看，<strong>I/O指令也是一种传送指令</strong></p>
<p>主机对外围设备的访问一般就是对有关接口寄存器的访问</p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915205114711.png" style="zoom:80%;">



<h3 id="外围设备编址"><a href="#外围设备编址" class="headerlink" title="外围设备编址"></a><strong>外围设备编址</strong></h3><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915205412470.png" style="zoom:80%;">

<h4 id="单独编址"><a href="#单独编址" class="headerlink" title="单独编址"></a>单独编址</h4><ol>
<li><strong>单独编址到设备级：</strong></li>
</ol>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915205549385.png" style="zoom:80%;">

<ol start="2">
<li><strong>单独编制到寄存器级：</strong></li>
</ol>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915205825524.png" style="zoom:80%;">

<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915211441454.png" style="zoom:80%;">



<h4 id="统一编址"><a href="#统一编址" class="headerlink" title="统一编址"></a>统一编址</h4><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915212129447.png" style="zoom:80%;">



<h4 id="单独编制和统一编址比较"><a href="#单独编制和统一编址比较" class="headerlink" title="单独编制和统一编址比较"></a>单独编制和统一编址比较</h4><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915212200991.png" style="zoom: 67%;">



<h3 id="I-O指令的设置方法"><a href="#I-O指令的设置方法" class="headerlink" title="I/O指令的设置方法"></a>I/O指令的设置方法</h3><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210915213415716.png" style="zoom:80%;">

<p><strong>1. 设置专用的I/O指令：IN,OUT</strong></p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922163608301.png" style="zoom: 67%;">



<p>1）如采用<strong>设备编码</strong>方式，则I/O指令的地址码部分应给出所要访问的外围设备的编码，并指定所访问的寄存器。</p>
<p>2）如果采用<strong>I/O端口地址编码</strong>方式，则I/O指令的地址 段给出端口地址，并指定CPU中寄存器号，操作码规定输入或输出操作类型。</p>
<p><strong>2. 采用通用的数据传送指令实现I/O操作</strong></p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922163959176.png" style="zoom: 67%;">

<p>如果传送指令的源地址是<strong>CPU寄存器</strong>，而目的地是接口寄存器，则这条传送指令就是一条输出指令。例如传送指令:MOV n，R0；</p>
<p>如果传送指令的源地址是<strong>接口寄存器</strong>，而目的地是 CPU中的寄存器，则是一条输入指令，例如:MOV R0，n。</p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922164519440.png" style="zoom: 67%;">



<p><strong>3. 通过I/O处理器（或I/O处理机）控制I/O操作</strong></p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922164927227.png" style="zoom:67%;">



<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922164954101.png" style="zoom:67%;">



<h1 id="复习提纲"><a href="#复习提纲" class="headerlink" title="复习提纲"></a>复习提纲</h1><p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922165204285.png"></p>
<img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922165139954.png" style="zoom:67%;">

<p><img src="/2021/09/15/ComputerCompositionPrinciple03/image-20210922165215552.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（八）：模型机的微程序控制器</title>
    <url>/2021/09/27/ComputerCompositionPrinciple05/</url>
    <content><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ol>
<li><p>微命令：构成控制信号序列的<strong>最小（或最基本）单 位</strong>，又称微信号，指那些直接作用于部件或控制门 电路的命令。如：打开或关闭某传送通路的电信命 令，或对触发器D端或R/S端进行同步打入，置位、 复位等的控制脉冲。</p>
</li>
<li><p>微操作：由微命令控制实现的最基本的操作称为微操作，如：开门、关门、选择。</p>
</li>
<li><p>微周期：从控制存储器中读取一条微指令并执行相应的一步操作所需的时间，称为一个微周期或微指 令周期。通常一个时钟周期为一个微周期。</p>
</li>
<li><p>微指令：每个<strong>微周期</strong>的操作所需的微命令组成一条 微指令。从控制存储器的组织角度讲，每个单元存 放一条微指令。</p>
</li>
<li><p>微程序：一系列微指令的有序集合称为微程序，用 来解释执行一条机器指令。</p>
</li>
<li><p>对应关系：</p>
<p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927094728546.png" alt="image-20210927094728546"></p>
</li>
</ol>
<p>微程序控制的概念</p>
<p>① 将控制器所需的微命令，以代码（微码）形式编成 微指令，存入一个ROM构成的控制存储器中。 ……将存储逻辑引入CPU。 ② 将各种机器指令的操作分解为若干微操作序列。 ……将程序技术引入CPU的构成级。 </p>
<p>上面从两个角度阐明了微程序控制的基本概念： 微命令的产生方式，微程序与机器指令之间的对应关系。</p>
<p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927095354076.png"></p>
<p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927095859376.png"></p>
<h2 id="复习提纲"><a href="#复习提纲" class="headerlink" title="复习提纲"></a>复习提纲</h2><p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927095924521.png"></p>
<p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927100154139.png"></p>
<p><img src="/2021/09/27/ComputerCompositionPrinciple05/image-20210927100315512.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理（四）</title>
    <url>/2021/09/17/ComputerCompositionPrinciple04/</url>
    <content><![CDATA[<h1 id="模型机的总体设计"><a href="#模型机的总体设计" class="headerlink" title="模型机的总体设计"></a>模型机的总体设计</h1><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917083753129.png"></p>
<h2 id="指令格式"><a href="#指令格式" class="headerlink" title="指令格式"></a>指令格式</h2><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084042617.png"></p>
<p><strong>1. 双操作数指令</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084103503.png" alt="image-20210917084103503"></p>
<ol start="2">
<li><strong>单操作数指令</strong></li>
</ol>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084130138.png"></p>
<ol start="3">
<li><p><strong>转移指令</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084154667.png"></p>
</li>
</ol>
<h2 id="寻址方式"><a href="#寻址方式" class="headerlink" title="寻址方式"></a>寻址方式</h2><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084308367.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917084320473.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917085432918.png"></p>
<h2 id="操作类型"><a href="#操作类型" class="headerlink" title="操作类型"></a>操作类型</h2><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917085558828.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917085826008.png"></p>
<h2 id="CPU组成"><a href="#CPU组成" class="headerlink" title="CPU组成"></a>CPU组成</h2><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917085910304.png"></p>
<h3 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h3><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917090154698.png"></p>
<ol>
<li><p>输入选择器/锁存器</p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917090456194.png"></p>
</li>
<li><p>ALU部件</p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917090739124.png"></p>
</li>
<li><p>移位器</p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917090752014.png"></p>
</li>
</ol>
<h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p><strong>寄存器设置</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917092527017.png"></p>
<h4 id="用于处理的寄存器"><a href="#用于处理的寄存器" class="headerlink" title="用于处理的寄存器"></a>用于处理的寄存器</h4><p><strong>通用寄存器组</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917093326618.png"></p>
<p><strong>暂存器</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917093437800.png" alt="image-20210917093437800"></p>
<h4 id="用于控制的寄存器"><a href="#用于控制的寄存器" class="headerlink" title="用于控制的寄存器"></a>用于控制的寄存器</h4><p><strong>指令寄存器IR（Instruction Register）</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917093942508.png"></p>
<p><strong>程序计数器PC（Program Counter）</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917094305279.png"></p>
<p><strong>程序状态字寄存器PSW（Program Status Word)</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917094359904.png"></p>
<h4 id="用作主存接口的寄存器"><a href="#用作主存接口的寄存器" class="headerlink" title="用作主存接口的寄存器"></a>用作主存接口的寄存器</h4><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917094946788.png"></p>
<p><strong>地址寄存器MAR: Memory Address Register</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917095141560.png"></p>
<p><strong>数据缓冲寄存器MBR/MDR：Memory Buffer/Data Register</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917100027716.png"></p>
<h3 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h3><p>1.定义</p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917100423495.png"></p>
<ol start="2">
<li><p>总线类型</p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210917100543723.png"></p>
</li>
</ol>
<p> <strong>CPU内总线：</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918084656831.png"></p>
<p><strong>部件间总线：</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918084848134.png"></p>
<p><strong>系统总线：</strong></p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918084905049.png" style="zoom:67%;">



<p><strong>外总线：</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918084919443.png"></p>
<h3 id="时序控制方式与时序系统"><a href="#时序控制方式与时序系统" class="headerlink" title="时序控制方式与时序系统"></a>时序控制方式与时序系统</h3><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918085259855.png" style="zoom:67%;">



<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922200728446.png"></p>
<h4 id="时序控制方式："><a href="#时序控制方式：" class="headerlink" title="时序控制方式："></a>时序控制方式：</h4><p><strong>同步控制方式：</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922200909734.png" alt="image-20210922200909734"></p>
<p>同步定时：在许多操作中需要严格地同步定时，如同步打入脉冲。</p>
<p>各部件协同：在CPU内， 一般采用由CPU提供的统一时序信号来控制部件间信息的传送的。</p>
<p>特点：时序关系比较简单，在是时间安排利用上可能不经济的。</p>
<p><strong>异步控制方式</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922201522469.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922201555950.png" alt="image-20210922201555950"></p>
<p><strong>实际应用中一些变化</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922202328484.png"></p>
<p><strong>指令序列间的衔接方式</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922203140097.png"></p>
<h4 id="时序系统"><a href="#时序系统" class="headerlink" title="时序系统"></a>时序系统</h4><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922203220857.png"></p>
<p><strong>划分层次</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922203543953.png"></p>
<p><strong>多级时序的划分</strong></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922204055893.png"></p>
<h3 id="CPU的内部数据通路结构"><a href="#CPU的内部数据通路结构" class="headerlink" title="CPU的内部数据通路结构"></a>CPU的内部数据通路结构</h3><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918085557420.png" style="zoom:67%;">



<p><strong>1. 模型机数据通路框图</strong></p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918085634763.png" style="zoom:67%;">

<p><strong>2. 各类信息的传送路径</strong></p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918085746835.png" style="zoom:67%;">



<p>取指令地址</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918092219691.png" style="zoom:67%;">

<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918090243201.png" style="zoom:50%;">



<p>指令信息的传递</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918091244655.png" style="zoom:50%;">



<p>取操作数地址（寄存器间址）</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918092728565.png" style="zoom:67%;">



<p>取操作数地址（自减型寄存器间址）</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918092837970.png" alt="image-20210918092837970" style="zoom:67%;">



<p>取操作数地址（自增型寄存器间址）</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093042362.png" style="zoom:67%;">

<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093051599.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093059929.png"></p>
<p>取操作数地址（变址器间址）</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093735006.png" style="zoom:67%;">

<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093752452.png" alt="image-20210918093752452" style="zoom:67%;">

<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918093802571.png" style="zoom:67%;">



<p><strong>4. 数据信息的传送</strong></p>
<p>寄存器-&gt;寄存器</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094030278.png" style="zoom:67%;">



<p>寄存器-&gt;主存</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094212532.png" style="zoom:67%;">



<p>主存-&gt;寄存器</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094235606.png" style="zoom:67%;">



<p>主存-&gt;主存</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094316110.png" style="zoom:67%;">



<p>寄存器-&gt;外围设备</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094608972.png" style="zoom:67%;">



<p>外围设备-&gt;寄存器</p>
<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918094836188.png" style="zoom:67%;">





<h3 id="微命令设置"><a href="#微命令设置" class="headerlink" title="微命令设置"></a>微命令设置</h3><p>将模型机的数据传送路径分为<strong>两大类操作</strong>，并分段设置相关微命令：</p>
<h4 id="数据通路操作：CPU内部操作"><a href="#数据通路操作：CPU内部操作" class="headerlink" title="数据通路操作：CPU内部操作"></a>数据通路操作：CPU内部操作</h4><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918095508673.png" style="zoom:67%;">



<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918095602805.png" style="zoom: 67%;">



<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918095949584.png" style="zoom:50%;">

<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918100143665.png" style="zoom:50%;">



<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918100202131.png" style="zoom:50%;">

<img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210918100326456.png" style="zoom:50%;">

<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922194825326.png"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922195226991.png"></p>
<h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922195259142.png" alt="image-20210922195259142"></p>
<p><img src="/2021/09/17/ComputerCompositionPrinciple04/image-20210922195954157.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（九）：存储子系统（一）</title>
    <url>/2021/09/29/ComputerCompositionPrinciple06/</url>
    <content><![CDATA[<h2 id="存储器的层次结构"><a href="#存储器的层次结构" class="headerlink" title="存储器的层次结构"></a>存储器的层次结构</h2><p>存储器是用来存放大量程序与数据的计算机部件</p>
<p><strong>存储器的基本要求：</strong></p>
<ol>
<li>存储容量大</li>
<li>存取速度快</li>
<li>成本价格低</li>
</ol>
<p><strong>计算机的工作表现为读取与执行指令：</strong></p>
<ol>
<li>执行指令在CPU内完成</li>
<li>读取指令是在存储器中完成的</li>
</ol>
<p>由于两者速度不匹配，CPU处理时间与访存时间相差一个数量级，这就是计算机的“瓶颈”问题</p>
<p>解决方法：</p>
<ol>
<li>努力改进制造工艺，寻求新的存储机理，以提高存储器的性能</li>
<li>采用<strong>存储器分层结构</strong>来满足计算机系统对存储器不同方面的要求</li>
</ol>
<p><strong>三级存储体系结构：</strong></p>
<p>高速缓冲存储器-主存-外存</p>
<p><strong>现代新型多级缓存体系：</strong></p>
<p>CPU内部寄存器组–CPU内部第一级Cache(L1)–第二级Cache(L2) –第三级Cache(L3)–主存(内存)–外部存储 </p>
<p><strong>自上而下的存储器具有以下特征：</strong></p>
<ol>
<li>存储器每位加个逐渐降低</li>
<li>存储器容量逐渐增加</li>
<li>存储器的存取速率逐渐变慢</li>
</ol>
<p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929200151518.png"></p>
<h3 id="主存储"><a href="#主存储" class="headerlink" title="主存储"></a>主存储</h3><p>能由CPU直接编程访问的存储器，它存放当前CPU需要执行的程序与需要处理的数据。</p>
<p><strong>特点：</strong></p>
<p>存取速度快，容量有限</p>
<p><strong>主存储器的基本要求：</strong></p>
<ol>
<li><p>随机访问</p>
</li>
<li><p>工作速度快</p>
</li>
<li><p>具有一定的存储容量</p>
</li>
</ol>
<h3 id="外存储器"><a href="#外存储器" class="headerlink" title="外存储器"></a>外存储器</h3><p>用来存放需要联机保存但暂不使用 的大量程序与数据。</p>
<p><strong>特点:</strong></p>
<p>存储速度较慢，容量很大</p>
<p>程序与数据只有进入主存才能真正运行，而外存储器是作为后援的。</p>
<h3 id="高速缓存-Cache"><a href="#高速缓存-Cache" class="headerlink" title="高速缓存(Cache)"></a>高速缓存(Cache)</h3><p>高速缓存中存放的是最近经常使用的程序与数据，作为主存中当前活跃信息的副本</p>
<p><strong>特点：</strong></p>
<p>存储速度很快，容量很小</p>
<h3 id="层次结构"><a href="#层次结构" class="headerlink" title="层次结构"></a>层次结构</h3><h4 id="主存-Cache层次"><a href="#主存-Cache层次" class="headerlink" title="主存-Cache层次"></a>主存-Cache层次</h4><p><strong>地址映射：</strong></p>
<ol>
<li><p>直接映射：</p>
<p>主存的每一块只能映射到Cache的固定块中。</p>
</li>
<li><p>全相联映射：</p>
<p>主存的每一块可以映射到Cache的任一块</p>
</li>
<li><p>组相联映射</p>
<p>主存的每一块可以映射到Cache的多个固定块</p>
</li>
</ol>
<p><strong>访问命中：</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929200951301.png"></p>
<p><strong>Cache内容替换</strong></p>
<p><strong>数据一致性</strong></p>
<h4 id="主存-外存层次"><a href="#主存-外存层次" class="headerlink" title="主存-外存层次"></a>主存-外存层次</h4><p>虚拟存储：主存+部分外存-&gt;虚存（用户编程空间）</p>
<p><strong>需解决：</strong></p>
<ol>
<li>存储空间分配</li>
<li>程序调度</li>
<li>虚-实地址转换</li>
</ol>
<h2 id="存储器分类"><a href="#存储器分类" class="headerlink" title="存储器分类"></a>存储器分类</h2><p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929202137965.png"></p>
<ol>
<li><p><strong>静态存储器：</strong></p>
<p>依靠<strong>双稳态触发器</strong>的两个稳定状态 保存信息。</p>
</li>
<li><p><strong>动态存储器：</strong></p>
<p>依靠<strong>电容上的存储电荷</strong>暂存信息。</p>
</li>
<li><p><strong>磁表面存储器：</strong></p>
<p>利用磁层上<strong>不同方向的磁化区域</strong>表示信息。容量大， 非破坏性读出，长期保存信息，速度慢，作外存。 是构成外存的单元之一 ，分为：磁卡、磁鼓、磁带、磁盘等。</p>
</li>
<li><p><strong>光盘存储器：</strong></p>
<p>利用光斑的有无表示信息。容量很大，非破坏性读出， 长期保存信息，速度慢，作外存。</p>
<ol>
<li>只读型光盘（CD-ROM）</li>
<li>写入式（只能写一次）光盘（WORM）</li>
<li>可擦除/重写型（可逆式）光盘</li>
</ol>
</li>
</ol>
<h2 id="存取方式"><a href="#存取方式" class="headerlink" title="存取方式"></a>存取方式</h2><h3 id="随机存取存储器（RAM）：random-access-memory"><a href="#随机存取存储器（RAM）：random-access-memory" class="headerlink" title="随机存取存储器（RAM）：random access memory"></a><strong>随机存取存储器（RAM）：random access memory</strong></h3><p><strong>主存与高速缓存Cache</strong>是CPU可以直接编址访问的存储器，这就要求它们采取随机访问的存取方式。</p>
<p><strong>随机存取：</strong></p>
<ol>
<li><p><strong>可按地址随机地访问任一存储单元。</strong></p>
<p>如可直接访问 0000H单元，也可直接访问FFFFH单元；CPU可按字节或 字存取数据，进行处理</p>
</li>
<li><p><strong>访问各存储单元所需的读/写时间相同，与地址无关。</strong></p>
<p>可用读/写周期（存取周期）表明RAM的工作速度。</p>
<p><strong>速度指标：</strong>存取周期或读/写周期</p>
</li>
</ol>
<h3 id="只读存储器（ROM）：read-only-memory"><a href="#只读存储器（ROM）：read-only-memory" class="headerlink" title="只读存储器（ROM）：read only memory"></a>只读存储器（ROM）：read only memory</h3><p>只读存储器在正常工作中只能读出，不能写入。主存中常采用部分ROM固化系统软件中的核心部分、已调试好不再改变的应用软件、汉字字库一类信息。</p>
<p><strong>CPU中也常采用ROM，存放用来解释执行机器指令的微程序。</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929204724515.png"></p>
<h3 id="顺序存取存储器（SAM）-sequential-access-memory"><a href="#顺序存取存储器（SAM）-sequential-access-memory" class="headerlink" title="顺序存取存储器（SAM）:sequential access memory"></a>顺序存取存储器（SAM）:sequential access memory</h3><p>顺序存取存储器的信息是按记录块组织、顺序存放的，访问时间与信息存放位置有关。磁带是采取顺 序存取方式的存储器</p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929205443604.png"></p>
<h3 id="直接存取存储器（DAM）-direct-access-memory"><a href="#直接存取存储器（DAM）-direct-access-memory" class="headerlink" title="直接存取存储器（DAM）:direct access memory"></a>直接存取存储器（DAM）:direct access memory</h3><p>访问时读/写部件先直接指向一个小区域，再在该区域内 顺序查找。访问时间与数据位置有关。</p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple06/image-20210929205610916.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（十）：存储子系统（二）</title>
    <url>/2021/09/29/ComputerCompositionPrinciple07/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929210409122.png" alt="image-20210929210409122"></p>
<h2 id="静态MOS存储单元与芯片（SRAM）"><a href="#静态MOS存储单元与芯片（SRAM）" class="headerlink" title="静态MOS存储单元与芯片（SRAM）"></a>静态MOS存储单元与芯片（SRAM）</h2><p>若T1通导而T2截止，存入信息为0。若T1截止而T2通导， 存入信息为1。（不要求）</p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929211912273.png"></p>
<h2 id="动态MOS存储器的基本存储原理-DRAM"><a href="#动态MOS存储器的基本存储原理-DRAM" class="headerlink" title="动态MOS存储器的基本存储原理(DRAM)"></a>动态MOS存储器的基本存储原理(DRAM)</h2><h3 id="动态MOS存储器的基本存储原理"><a href="#动态MOS存储器的基本存储原理" class="headerlink" title="动态MOS存储器的基本存储原理"></a>动态MOS存储器的基本存储原理</h3><p>是将存储信息以<strong>电荷形式存于电容</strong>之中，这种电容可 以是MOS管栅极电容，或者是专用的MOS电容，通常定义 电容充电至高电平时为1；放电至低电平时为0。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ol>
<li><p>刷新</p>
<p>在MOS管断开之后，电容总存在泄漏通路，难以使泄漏电阻达到无穷大。时间过长，电容上的<strong>电荷会通过泄漏电路放电</strong>，使所存储的信息丢失。为此，经过 一定时间后就需要对存储内容重写一遍，也就是<strong>对存1的电容重新充电</strong>，称为刷新。</p>
</li>
<li><p>重写：</p>
<p>对于单管动态MOS存储单元而言，读操作后电容C上的 电荷将发生变化，属于破坏性读出，需要<strong>读后对存1的电容补充电荷</strong>，称为重写(再生)。这一过程，由芯片内的外围电路自动实现。</p>
</li>
</ol>
<h3 id="动态MOS四管存储单元电路（非双稳态电路）"><a href="#动态MOS四管存储单元电路（非双稳态电路）" class="headerlink" title="动态MOS四管存储单元电路（非双稳态电路）"></a>动态MOS四管存储单元电路（非双稳态电路）</h3><p><strong>组成</strong></p>
<p>T1、T2：记忆管 </p>
<p>C1、C2：柵极电容 </p>
<p>T3、T4：控制门管 </p>
<p>Z：字线 </p>
<p>非W、W ：位线</p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929213004492.png"></p>
<p><strong>定义</strong></p>
<p>“0”：T1导通，T2截止（C1有电荷，C2无电荷）；</p>
<p> “1”：T1截止，T2导通（C1无电荷，C2有电荷）。</p>
<h4 id="工作"><a href="#工作" class="headerlink" title="工作"></a><strong>工作</strong></h4><p><strong>写入</strong></p>
<p>首先字线Z加高电平时， T3、T4导通</p>
<p><strong>写”0”</strong>： </p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929213848997.png"></p>
<p><strong>写”1”</strong>： </p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929213902231.png"></p>
<p><strong>读出</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214020099.png"></p>
<p><strong>读“0”：</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214044834.png"></p>
<p><strong>读“1”：</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214103685.png" alt="image-20210929214103685"></p>
<p><strong>保持</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214157111.png"></p>
<h2 id="单管单元"><a href="#单管单元" class="headerlink" title="单管单元"></a>单管单元</h2><p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214404392.png"></p>
<p><strong>组成</strong></p>
<p>C：记忆单元    T：控制门管    Z：字线    W：位线</p>
<p><strong>定义</strong></p>
<p>“0”：C无电荷，电平V0（低） </p>
<p>“1”：C有电荷，电平V1（高）</p>
<p><strong>工作</strong></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214436835.png"></p>
<p><img src="/2021/09/29/ComputerCompositionPrinciple07/image-20210929214446085.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（11）：存储子系统（三）</title>
    <url>/2021/09/29/ComputerCompositionPrinciple08/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>主存储器的组织涉及到这样一些方面： </p>
<p>(1)存储器<strong>基本逻辑设计</strong>，而半导体存储器的逻辑 主要是<strong>寻址逻辑</strong>，即如何按地址选择芯片与片内单元； </p>
<p>(2) 如果采用DRAM，还需考虑<strong>动态刷新</strong>问题；</p>
<p>(3) 所构成的主存如何与CPU<strong>连接、匹配</strong>；</p>
<p>(4) <strong>主存校验</strong>，如何保证存取信息的正确性。</p>
<h2 id="主存储器的逻辑设计"><a href="#主存储器的逻辑设计" class="headerlink" title="主存储器的逻辑设计"></a>主存储器的逻辑设计</h2><h3 id="设计主存时，需要注意两点："><a href="#设计主存时，需要注意两点：" class="headerlink" title="设计主存时，需要注意两点："></a>设计主存时，需要注意两点：</h3><ol>
<li><p>明确所要求的<strong>总容量</strong>这一技术指标，即<strong>字数× 位数</strong>。</p>
<p>字数指可编址单元数，常简称单元数；位数指每 个编址单元的位数。</p>
<p>模型机中，采用主存按字节编址， 那么每个编址单元有8位(一个字节)</p>
</li>
<li><p>需要确定可供选用的存储芯片，即什么类型、型号 的存储芯片， 每片的容量是多少。每片容量通常低于总容量，就需要用若干块芯片组成。相应地，可能存在 <strong>位数与字数的扩展问题。</strong></p>
</li>
</ol>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（一）-软件过程模型的选择</title>
    <url>/2021/09/06/DiaryInUESTC01/</url>
    <content><![CDATA[<p>在选择合适的软件过程模型之前，我们先了解几种常用的模型</p>
<h2 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h2><p>转载自：<a href="https://www.cnblogs.com/jojop/p/11801241.html">周二鸭</a></p>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>瀑布模型（经典生命模型）提出了软件开发的系统化的、顺序的方法。其流程从用户需求规格说明开始，通过策划、建模、构建和部署过程，最终提供一个完整的软件并提供持续的技术支持。</p>
<p><strong>模型特点</strong></p>
<ul>
<li>必须等前一阶段的工作完成之后，才能开始后一段的工作；</li>
<li>每一阶段都必须完成规定的文档，没有交出合格的文档就是没有完成该阶段的任务。</li>
<li>前一阶段的输出文档就是后一阶段的输入文档，因此，只有前一阶段的输出文档正确，后一阶段的工作才能得到正确的结果。</li>
<li>每个阶段结束前都要对所完成的文档进行评审，以便及早发现问题，改正错误。事实上越是早期阶段犯下的错误，暴露出来的时间就越晚，排除故障改正错误所需付出的代价也越高。因此，及时审查，是保证软件质量，降低软件成本的重要措施。</li>
</ul>
<p><strong>模型优点</strong>：</p>
<ul>
<li>强调了开发的阶段性，各阶段具有顺序性和依赖性</li>
<li>强调早期调研和需求分析，推迟编码实现的观点</li>
<li>提供了一个模板，这个模板使得分析、设计、编码、测试和支持的方法可以在该模板下有一个共同的指导。</li>
</ul>
<p><strong>模型局限</strong>：</p>
<ul>
<li>瀑布模型是一种线性模型，要求项目严格按规程推进，必须等到所有开发工作全部完成以后才能获得可以交付的软件产品。不能对软件系统进行快速创建，对于一些急于交付的软件系统的开发很不方便。</li>
<li>瀑布模型适合于需求明确，且无大的需求变更的软件开发（编译系统、操作系统等）。而对于分析初期需求模糊的项目，瀑布模型也并不适合。</li>
</ul>
<p><strong>适用场景</strong>：</p>
<p>适用于需求确定，无大的需求变更，工作能够采用线性的方式完成的软件。</p>
<hr>
<p>而在这个项目中我们使用的是基于瀑布模型之上的<strong>增量模型</strong></p>
<h2 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>增量模型融合了瀑布模型的基本成分和原型实现的迭代特征，它对软件过程的考虑是：在整体上按照瀑布模型的流程实施项目开发，以方便对项目的管理；但在软件的实际开发中，则将软件系统按功能分解为许多增减构件，并以构件为单位逐个地创建与交付，直到全部增量构件创建完成，并都被集成到系统之中交付用户使用。</p>
<p><strong>各阶段任务：</strong></p>
<ol>
<li>对整个系统进行需求分析和概要设计，确定系统基于增量构建的开发，以需求中构建的组成和关系为依据，完成对软件系统的体系结构设计。</li>
<li>进行增量构建的开发。对构建进行需求精细化，然后设计、编码、测试和有效性验证</li>
<li>将构建集成到系统，并对已经改变的系统进行有效性验证，继续下一个增量构建的开发</li>
</ol>
<p><strong>模型特点：</strong></p>
<ol>
<li>将软件系统模块化，分批地提交软件产品，用户可以及时了解软件项目的进展</li>
<li>降低了软件开发的风险，一个开发周期内的错误不会影响整个系统</li>
<li>开发顺序灵活。开发人员可以对组件的实现顺序进行优先级排序，先完成需求稳定的核心组件。当组件的优先级发生变化时，还能及时地对实现顺序进行调整。</li>
</ol>
<p><strong>适用场景：</strong></p>
<p>1、软件产品可以分批次地进行交付。</p>
<p>2、待开发的软件系统能够被模块化。</p>
<p>3、软件开发人员对应用领域不熟悉，难以一次性地进行系统开发。</p>
<p>4、项目管理人员把握全局的水平较高</p>
<hr>
<p>参考：<a href="https://baike.baidu.com/item/%E5%A2%9E%E9%87%8F%E6%A8%A1%E5%9E%8B/686083?fr=aladdin">增量模型</a></p>
<p>其他软件过程模型介绍：<a href="https://www.cnblogs.com/jojop/p/11801241.html">周二鸭</a></p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（二）需求分析</title>
    <url>/2021/09/09/DiaryInUESTC02/</url>
    <content><![CDATA[<h2 id="记账"><a href="#记账" class="headerlink" title="记账"></a>记账</h2><h3 id="收款"><a href="#收款" class="headerlink" title="收款"></a>收款</h3><ol>
<li><p>收款分类</p>
<ul>
<li>奖学金</li>
<li>零花钱</li>
<li>兼职</li>
<li>···</li>
</ul>
</li>
<li><p>接收收款的金额</p>
<ul>
<li>语音输入</li>
<li>文字输入</li>
<li>UI输入</li>
</ul>
</li>
<li><p>记录收款时间</p>
<ul>
<li>更改时间</li>
<li>自动读取系统时间</li>
</ul>
</li>
</ol>
<h3 id="付款"><a href="#付款" class="headerlink" title="付款"></a>付款</h3><ol>
<li><p>付款分类</p>
<ul>
<li>外卖</li>
<li>学习</li>
<li>娱乐</li>
<li>衣物</li>
<li>日用品</li>
<li>···</li>
</ul>
</li>
<li><p>接收付款的金额</p>
<ul>
<li>语音输入</li>
<li>文字输入</li>
<li>UI输入</li>
</ul>
</li>
<li><p>记录付款时间</p>
<ul>
<li>更改时间</li>
<li>自动读取系统时间</li>
</ul>
</li>
</ol>
<h3 id="预算"><a href="#预算" class="headerlink" title="预算"></a>预算</h3><ol>
<li>编辑预算<ul>
<li>分类</li>
</ul>
</li>
<li>计算预算的完成程度</li>
</ol>
<h3 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h3><ol>
<li>收款、付款、预算的增删改查</li>
<li>生成消费记录周、月报<ul>
<li>雷达图、圆饼图、柱状图···</li>
<li>日均消费</li>
<li>各个分类的消费情况</li>
</ul>
</li>
</ol>
<h3 id="优先级："><a href="#优先级：" class="headerlink" title="优先级："></a>优先级：</h3><p>收款=付款&gt;汇总&gt;预算</p>
<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><h3 id="记录待办事项"><a href="#记录待办事项" class="headerlink" title="记录待办事项"></a>记录待办事项</h3><ol>
<li>打字输入</li>
<li>语音输入</li>
</ol>
<h3 id="对代办事项进行管理"><a href="#对代办事项进行管理" class="headerlink" title="对代办事项进行管理"></a>对代办事项进行管理</h3><ol>
<li>基本的增删改</li>
</ol>
<h3 id="整理事项完成情况"><a href="#整理事项完成情况" class="headerlink" title="整理事项完成情况"></a>整理事项完成情况</h3><ol>
<li>显示完成情况图（柱状图、雷达图···）</li>
</ol>
<h3 id="ddl提示"><a href="#ddl提示" class="headerlink" title="ddl提示"></a>ddl提示</h3><ol>
<li>通知栏显示未完成事项</li>
</ol>
<h3 id="桌面模块"><a href="#桌面模块" class="headerlink" title="桌面模块"></a>桌面模块</h3><ol>
<li>在桌面以模块的形式显示todo列表</li>
</ol>
<h3 id="优先级：-1"><a href="#优先级：-1" class="headerlink" title="优先级："></a>优先级：</h3><p>记录待办事项&gt;管理待办事项&gt;整理完成情况&gt;ddl提示</p>
<h2 id="日记模块"><a href="#日记模块" class="headerlink" title="日记模块"></a>日记模块</h2><h3 id="基本需求："><a href="#基本需求：" class="headerlink" title="基本需求："></a>基本需求：</h3><ul>
<li>用户创建新日记</li>
<li>用户编辑日记</li>
<li>储存日记数据</li>
</ul>
<h3 id="进阶需求："><a href="#进阶需求：" class="headerlink" title="进阶需求："></a>进阶需求：</h3><ul>
<li>多种输入方式，多媒体（语音输入）</li>
<li>导出图片，pdf功能</li>
<li>历史日记展示</li>
</ul>
<h4 id="可实现ideas"><a href="#可实现ideas" class="headerlink" title="可实现ideas:"></a>可实现ideas:</h4><ul>
<li>创建时以随机颜色由加号点击后扩散到整个屏幕</li>
<li>切换颜色时可用圆形调色板或随机切换也是扩散方式加载</li>
<li>使用美工边框主题</li>
<li>增加去年今天故事回顾</li>
<li>每个日记添加心情、当天天气、写日记的时间</li>
<li>云同步（可以忽略）</li>
<li>随机调取一年中的回忆，生成照片或视频)</li>
</ul>
<h2 id="我的信息"><a href="#我的信息" class="headerlink" title="我的信息"></a>我的信息</h2><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><ol>
<li><p>登录功能</p>
<ul>
<li>验证密码</li>
<li>验证账号格式（邮箱）</li>
</ul>
</li>
<li><p>注册账号</p>
<p>手机/邮箱验证</p>
</li>
<li><p>新账号密码设置</p>
<ul>
<li>验证密码安全性</li>
</ul>
</li>
<li><p>个性化设置</p>
<ul>
<li>设置用户名称</li>
</ul>
</li>
</ol>
<ul>
<li>设置用户头像<ul>
<li>编辑用户个性签名</li>
<li>个性化主题、文字样式</li>
</ul>
</li>
</ul>
<ol start="5">
<li>查看注册时间</li>
</ol>
<h3 id="设置功能"><a href="#设置功能" class="headerlink" title="设置功能"></a>设置功能</h3><ol>
<li><p>待办事项截止提醒。</p>
</li>
<li><p>设定软件音量等。</p>
</li>
<li><p>开发者互动沟通功能。</p>
</li>
<li><p>查看隐私权政策。</p>
</li>
</ol>
<h3 id="优先级：-2"><a href="#优先级：-2" class="headerlink" title="优先级："></a>优先级：</h3><p>设置功能&gt;个人信息</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（三）创建github仓库</title>
    <url>/2021/09/11/DiaryInUESTC03/</url>
    <content><![CDATA[<h2 id="第一步：配置身份"><a href="#第一步：配置身份" class="headerlink" title="第一步：配置身份"></a>第一步：配置身份</h2><pre><code>gti config --global user.name&quot;Tony&quot;
git config --global user.email&quot;tony@gmail.com&quot;
</code></pre>
<h2 id="第二步：建立代码仓库"><a href="#第二步：建立代码仓库" class="headerlink" title="第二步：建立代码仓库"></a>第二步：建立代码仓库</h2><pre><code>git init
</code></pre>
<h2 id="第三步：提交本地代码"><a href="#第三步：提交本地代码" class="headerlink" title="第三步：提交本地代码"></a>第三步：提交本地代码</h2><p>add 是用于把想要提交的代码先添加进来，而 commit 则是真正地去执行提交操作</p>
<p>添加文件</p>
<pre><code>git add AndroidManifest.xml
</code></pre>
<p>添加文件夹</p>
<pre><code>git add src
</code></pre>
<p>添加全部文件</p>
<pre><code>git add .
</code></pre>
<p>提交</p>
<pre><code>git commit -m &quot;First commit.&quot;
</code></pre>
<p><strong>Tips</strong>：.gitignore文件中的说明忽略那些文件内容</p>
<p>例</p>
<pre><code>bin/
gen/
</code></pre>
<p>表示bin、gen目录下的所有文件全部忽略</p>
<p>查看文件修改情况</p>
<pre><code>git status
</code></pre>
<p>查看修改情况</p>
<pre><code>git diff
git diff 文件相对路径
</code></pre>
<p>撤销文件修改</p>
<pre><code>git checkout 文件相对路径
</code></pre>
<p>撤销文件添加</p>
<pre><code>git reset HEAD 相对路径
</code></pre>
<p>查看提交记录</p>
<pre><code>git log
</code></pre>
<h2 id="第四步：将代码托管到GitHub上"><a href="#第四步：将代码托管到GitHub上" class="headerlink" title="第四步：将代码托管到GitHub上"></a>第四步：将代码托管到GitHub上</h2><p>参考：<a href="https://blog.csdn.net/qq_43768946/article/details/90411154">JT.X</a></p>
<h3 id="配置-SSH-Key"><a href="#配置-SSH-Key" class="headerlink" title="配置 SSH Key"></a>配置 SSH Key</h3><pre><code>cd ~/.ssh
ls
或者
ll
//看是否存在 id_rsa 和 id_rsa.pub文件，如果存在，说明已经有SSH Key
</code></pre>
<p>配置SSH Key</p>
<pre><code>ssh-keygen -t rsa -C “这里换上你的邮箱”
</code></pre>
<p>然后一直回车，生成密钥在/Users/.SSH中</p>
<p>在GitHub平台上添加SSH Key</p>
<p>测试通不通</p>
<pre><code>ssh -T git@github.com
</code></pre>
<h3 id="托管"><a href="#托管" class="headerlink" title="托管"></a>托管</h3><p>设置origin master</p>
<pre><code>git remote add origin ssh地址
</code></pre>
<p>将提交内容同步到远程版本库</p>
<pre><code>git add .
git commit -m &quot;First commit.&quot;
git push origin master
</code></pre>
<h2 id="第五步：分支的用法"><a href="#第五步：分支的用法" class="headerlink" title="第五步：分支的用法"></a>第五步：分支的用法</h2><p>在现有代码 的基础上开辟一个分叉口，使得代码可以在主干线和分支线上同时进行开发，且相互之间不 会影响。</p>
<p>建立分支</p>
<pre><code>git branch version1.0
</code></pre>
<p>检查分支</p>
<pre><code>git branch -a
</code></pre>
<p>合并操作</p>
<pre><code>git checkout master
git merge version1.0
</code></pre>
<p>将分支删除</p>
<pre><code>git branch -D version1.0
</code></pre>
<h2 id="第六步：与远程版本库协作"><a href="#第六步：与远程版本库协作" class="headerlink" title="第六步：与远程版本库协作"></a>第六步：与远程版本库协作</h2><p>下载代码</p>
<pre><code>git clone 项目网址
</code></pre>
<p>把本地内容同步到远程版本库</p>
<pre><code>git push origin master
</code></pre>
<p>将远程版本库代码同步到本地</p>
<pre><code>git fetch origin master
</code></pre>
<p>同步的代码不会合并到任何分支上，而是会存放在到一个 origin/master 分支上，这时我们可以通过 diff 命 令来查看远程版本库上到底修改了哪些东西</p>
<pre><code>git diff origin/master
</code></pre>
<p>之后再调用 merge 命令将 origin/master 分支上的修改合并到主分支上即可</p>
<pre><code>git merge origin/master
</code></pre>
<p>而 pull 命令则是相当于将 fetch 和 merge 这两个命令放在一起执行了，它可以从远程版本库上获取最新的代码并且合并到本地，用法如下所示：</p>
<pre><code>git pull origin master
</code></pre>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（五）TODO界面的实现</title>
    <url>/2021/10/02/DiaryInUESTC05/</url>
    <content><![CDATA[<h2 id="step1：创建Todo类"><a href="#step1：创建Todo类" class="headerlink" title="step1：创建Todo类"></a>step1：创建Todo类</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> String content<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> ddl<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> selected<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Todo</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDdl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ddl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span>String content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDdl</span><span class="token punctuation">(</span><span class="token keyword">int</span> ddl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ddl <span class="token operator">=</span> ddl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> selected<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>selected <span class="token operator">=</span> b<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="step2：添加recyclarView"><a href="#step2：添加recyclarView" class="headerlink" title="step2：添加recyclarView"></a>step2：添加recyclarView</h2><p>创建recyclarView的过程这里不再赘述，效果如下</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104008745.png" alt="1"></p>
<h2 id="step3：实现todo的点击效果"><a href="#step3：实现todo的点击效果" class="headerlink" title="step3：实现todo的点击效果"></a>step3：实现todo的点击效果</h2><p>在adapter的onBindViewHolder（）中添加点击事件</p>
<pre class="line-numbers language-java"><code class="language-java">holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span>CompoundButton compoundButton<span class="token punctuation">,</span> <span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        todo<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>STRIKE_THRU_TEXT_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加中划线</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string">"#C0C0C0"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//修改字体颜色</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">getPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//恢复无划线</span>
            holder<span class="token punctuation">.</span>todoContent<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string">"#000000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//恢复字体颜色</span>
        <span class="token punctuation">}</span>
        mTodoList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> todo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果如下：</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104701684.png"></p>
<h2 id="step4：添加悬浮按钮以及添加todo事件"><a href="#step4：添加悬浮按钮以及添加todo事件" class="headerlink" title="step4：添加悬浮按钮以及添加todo事件"></a>step4：添加悬浮按钮以及添加todo事件</h2><p>如何添加悬浮按钮这里不再阐述，效果如下：</p>
<p><img src="/2021/10/02/DiaryInUESTC05/image-20211002104855671.png"></p>
<p>在添加对应的点击事件时，一开始我打算将布局放在fragment上，但是在弹出返回栈时会直接切换到Diary界面。</p>
<p>于是选择通过新建activity实现，但是新建activity后原来todo界面的背景会被activity的背景覆盖，不太美观。</p>
<p>最后，我们决定通过popupWindow实现，这样就一次性解决了返回退出的几个问题。相关代码：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">load_popupwindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        View popView <span class="token operator">=</span> <span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>fragment_add_todo<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">PopupWindow</span><span class="token punctuation">(</span>popView<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setBackgroundDrawable</span><span class="token punctuation">(</span>ResourcesCompat<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>round_outline<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setOutsideTouchable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//点击其它退出</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//可编辑todo</span>
        popupTodoAdd<span class="token punctuation">.</span><span class="token function">setAnimationStyle</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>popupWindow_anim_style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置动画</span>

        <span class="token comment" spellcheck="true">//设置点击事件</span>
        EditText editText <span class="token operator">=</span> popView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>todo_edit<span class="token punctuation">)</span><span class="token punctuation">;</span>
        editText<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextWatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">beforeTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTextChanged</span><span class="token punctuation">(</span>CharSequence charSequence<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> i1<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"todo content"</span><span class="token punctuation">,</span>charSequence<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterTextChanged</span><span class="token punctuation">(</span>Editable editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Button button <span class="token operator">=</span> popView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_todo_button<span class="token punctuation">)</span><span class="token punctuation">;</span>

        button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>view1 <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"已保存"</span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//            EventBus.getDefault().post(editText.getText().toString());</span>
            todoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Todo</span><span class="token punctuation">(</span>editText<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将todo添加到第一个</span>
            <span class="token function">refreshTodo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            popupTodoAdd<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        popupTodoAdd<span class="token punctuation">.</span><span class="token function">showAtLocation</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Gravity<span class="token punctuation">.</span>CENTER<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>实现效果：</p>
<img src="/2021/10/02/DiaryInUESTC05/image-20211002105638844.png" style="zoom:50%;">

]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记（三）</title>
    <url>/2021/10/06/HTMLLearning03/</url>
    <content><![CDATA[<h1 id="表单的应用"><a href="#表单的应用" class="headerlink" title="表单的应用"></a>表单的应用</h1><h2 id="只读模式"><a href="#只读模式" class="headerlink" title="只读模式"></a>只读模式</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="隐藏域"><a href="#隐藏域" class="headerlink" title="隐藏域"></a>隐藏域</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">hidden</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006160703423.png"></p>
<h2 id="增强鼠标可用性"><a href="#增强鼠标可用性" class="headerlink" title="增强鼠标可用性"></a>增强鼠标可用性</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>你点我试试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006160925407.png"></p>
<h1 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h1><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>name:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning03/image-20211006161748997.png"></p>
<p>required: 非空判断</p>
<p>pattern：正则表达式判断</p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>成电微记（四）对模板进行修改</title>
    <url>/2021/09/22/DiaryInUESTC04/</url>
    <content><![CDATA[<p><strong>选择Bottom Navigation Activity</strong></p>
<p><img src="/2021/09/22/DiaryInUESTC04/image-20210922152329323.png" alt="image-20210922152329323"> </p>
<p>对其中的代码进行修改：</p>
<p><img src="/2021/09/22/DiaryInUESTC04/image-20210922153116370.png" alt="image-20210922153116370"></p>
<p>该模版已经将各个布局的内容分开</p>
<p>以后的工作将在这个框架上进行</p>
]]></content>
      <categories>
        <category>成电微记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML学习笔记（二）</title>
    <url>/2021/10/06/HTMLLearning02/</url>
    <content><![CDATA[<h2 id="页面结构分析"><a href="#页面结构分析" class="headerlink" title="页面结构分析"></a>页面结构分析</h2><p><img src="/2021/10/06/HTMLLearning02/image-20211006141016170.png" alt="image-20211006141016170"></p>
<h2 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>通过内联框架实现：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击跳转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.我的第一个网页.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>name:    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reset<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006144814808.png"></p>
<p><strong>表单的元素属性</strong></p>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006144904105.png"></p>
<h2 id="文本框和单选框："><a href="#文本框和单选框：" class="headerlink" title="文本框和单选框："></a>文本框和单选框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>boy<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>男
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>girl<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>女
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006152351801.png"></p>
<h2 id="多选框："><a href="#多选框：" class="headerlink" title="多选框："></a>多选框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    爱好：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006152722175.png"></p>
<h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>点击：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>long<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../resource/image/head.png<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153339386.png"></p>
<h2 id="下拉框"><a href="#下拉框" class="headerlink" title="下拉框"></a>下拉框</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>列表名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153558069.png"></p>
<h2 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>反馈：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textarea<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006153908961.png"></p>
<h2 id="文件域"><a href="#文件域" class="headerlink" title="文件域"></a>文件域</h2><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>files<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006154258564.png"></p>
<h2 id="邮箱验证"><a href="#邮箱验证" class="headerlink" title="邮箱验证"></a>邮箱验证</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    邮箱：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    URL:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    数字：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>num<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
    <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006154847692.png"></p>
<h2 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>滑块：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>voice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006155034464.png"></p>
<h2 id="搜索框："><a href="#搜索框：" class="headerlink" title="搜索框："></a>搜索框：</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    搜索：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/06/HTMLLearning02/image-20211006155241101.png"></p>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>托福学习笔记</title>
    <url>/2021/08/29/TOEFL/</url>
    <content><![CDATA[<h1 id="试卷结构"><a href="#试卷结构" class="headerlink" title="试卷结构"></a>试卷结构</h1><p><img src="/2021/08/29/TOEFL/1.png"></p>
<h1 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h1><h2 id="阅读训练方法"><a href="#阅读训练方法" class="headerlink" title="阅读训练方法"></a>阅读训练方法</h2><p><img src="/2021/08/29/TOEFL/2.png"></p>
<h2 id="阅读技巧"><a href="#阅读技巧" class="headerlink" title="阅读技巧"></a>阅读技巧</h2><p>抓住句子主干</p>
<p><strong>句子主干三要素：</strong></p>
<ol>
<li>主角是谁</li>
<li>和谁发生关系</li>
<li>关系导致结果</li>
</ol>
<p><strong>段落结构：</strong></p>
<ol>
<li><p>段落主旨：</p>
<p>主旨信号：转折、对比、总结、强调、因果、定义、有问有答、顺序</p>
</li>
<li></li>
</ol>
<h2 id="难句归类"><a href="#难句归类" class="headerlink" title="难句归类"></a>难句归类</h2><p><img src="/2021/08/29/TOEFL/1631192712318.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192780192.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192765470.png"></p>
<p><img src="/2021/08/29/TOEFL/1631192857942.png"></p>
<h2 id="单词积累"><a href="#单词积累" class="headerlink" title="单词积累"></a>单词积累</h2><p><img src="/2021/08/29/TOEFL/3.png"></p>
<p><img src="/2021/08/29/TOEFL/4.png"></p>
<h1 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h1><p>看图片进入状态</p>
<p>背单词不等同于阅读</p>
<h2 id="Lecture"><a href="#Lecture" class="headerlink" title="Lecture"></a>Lecture</h2><p>想象自己要听课而不是在考试</p>
<p>观察说明图例</p>
<p><img src="/2021/08/29/TOEFL/5.png"></p>
<p><img src="/2021/08/29/TOEFL/6.png"></p>
<h2 id="Conversation"><a href="#Conversation" class="headerlink" title="Conversation"></a>Conversation</h2><br>

<p><img src="/2021/08/29/TOEFL/7.png"></p>
<p><img src="/2021/08/29/TOEFL/8.png"></p>
<h2 id="训练计划："><a href="#训练计划：" class="headerlink" title="训练计划："></a>训练计划：</h2><p><img src="/2021/08/29/TOEFL/9.png"></p>
<p><img src="/2021/08/29/TOEFL/10.png"></p>
<p><img src="/2021/08/29/TOEFL/11.png"></p>
<p><img src="/2021/08/29/TOEFL/12.png"></p>
<h2 id="听力笔记要点"><a href="#听力笔记要点" class="headerlink" title="听力笔记要点"></a>听力笔记要点</h2><p><img src="/2021/08/29/TOEFL/13.png"></p>
<p><strong><a href="https://www.scientificamerican.com/podcast/">练习听力网址：https://www.scientificamerican.com/podcast</a></strong></p>
<h1 id="口语"><a href="#口语" class="headerlink" title="口语"></a>口语</h1><h2 id="口语考试安排"><a href="#口语考试安排" class="headerlink" title="口语考试安排"></a>口语考试安排</h2><p><img src="/2021/08/29/TOEFL/14.png"></p>
<h2 id="评分标准"><a href="#评分标准" class="headerlink" title="评分标准"></a>评分标准</h2><p><img src="/2021/08/29/TOEFL/15.png"></p>
<p><img src="/2021/08/29/TOEFL/16.png"></p>
<p><img src="/2021/08/29/TOEFL/17.png"></p>
<h2 id="各部分内容及解题步骤"><a href="#各部分内容及解题步骤" class="headerlink" title="各部分内容及解题步骤"></a>各部分内容及解题步骤</h2><h3 id="Task1"><a href="#Task1" class="headerlink" title="Task1"></a>Task1</h3><h4 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h4><p><img src="/2021/08/29/TOEFL/20.png"></p>
<p><img src="/2021/08/29/TOEFL/22.png"></p>
<p><img src="/2021/08/29/TOEFL/23.png"></p>
<p><img src="/2021/08/29/TOEFL/24.png"></p>
<p><img src="/2021/08/29/TOEFL/25.png"></p>
<h3 id="Task2"><a href="#Task2" class="headerlink" title="Task2"></a>Task2</h3><h4 id="解题步骤-1"><a href="#解题步骤-1" class="headerlink" title="解题步骤"></a>解题步骤</h4><p><img src="/2021/08/29/TOEFL/26.png"></p>
<table>
<thead>
<tr>
<th>Step1</th>
<th>阅读45s</th>
<th>阅读笔记</th>
</tr>
</thead>
<tbody><tr>
<td>step2</td>
<td>听力对话</td>
<td>听力笔记：针对阅读中的主题，对话主导方是支持还是反对，以及支持或反对的理由。</td>
</tr>
<tr>
<td>step3</td>
<td>审题</td>
<td>Task2的提问大都相似。回答时必须抓住对话主导方的立场和相应理由。答题缺少逻辑或者理由缺少细节的会被扣分。</td>
</tr>
<tr>
<td>Step4</td>
<td>30s准备；60s答题</td>
<td>30s准备工作：标出关键词，确认答题结构，整理笔记</td>
</tr>
</tbody></table>
<h4 id="常用句式"><a href="#常用句式" class="headerlink" title="常用句式"></a>常用句式</h4><p><img src="/2021/08/29/TOEFL/32.png"></p>
<h4 id="时间分配"><a href="#时间分配" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/27.png"></p>
<h3 id="Task3"><a href="#Task3" class="headerlink" title="Task3"></a>Task3</h3><h4 id="解题步骤-2"><a href="#解题步骤-2" class="headerlink" title="解题步骤"></a>解题步骤</h4><table>
<thead>
<tr>
<th>Step1</th>
<th>阅读45s</th>
<th>阅读笔记：概括了解学术的原理、现象、概念</th>
</tr>
</thead>
<tbody><tr>
<td>Step2</td>
<td>听力讲座</td>
<td></td>
</tr>
<tr>
<td>Step3</td>
<td>审题</td>
<td>Task3的提问大都相似，要求我们负数讲座中对学术概念的展开讲解。我们在转述时要尽量全面地输出讲座中的例证细节。</td>
</tr>
<tr>
<td>Step4</td>
<td>30s准备；60s答题</td>
<td>30s准备工作：标出关键词，确认答题结构。笔记中几下的关键术语，努力记下发音，不要因为笔记而耽误听。</td>
</tr>
</tbody></table>
<h4 id="常用句式-1"><a href="#常用句式-1" class="headerlink" title="常用句式"></a>常用句式</h4><p><img src="/2021/08/29/TOEFL/33.png"></p>
<h4 id="时间分配-1"><a href="#时间分配-1" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/28.png"></p>
<h3 id="Task4"><a href="#Task4" class="headerlink" title="Task4"></a>Task4</h3><h4 id="解题步骤："><a href="#解题步骤：" class="headerlink" title="解题步骤："></a>解题步骤：</h4><table>
<thead>
<tr>
<th>Step1</th>
<th>听力对话</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Step2</td>
<td>审题</td>
<td>Task4的提问大都相似。要求归纳听力讲座的概念和展开细节。</td>
</tr>
</tbody></table>
<p><img src="/2021/08/29/TOEFL/29.png"></p>
<h4 id="时间分配-2"><a href="#时间分配-2" class="headerlink" title="时间分配"></a>时间分配</h4><p><img src="/2021/08/29/TOEFL/30.png"></p>
<h2 id="口语训练方法"><a href="#口语训练方法" class="headerlink" title="口语训练方法"></a>口语训练方法</h2><p><img src="/2021/08/29/TOEFL/18.png"></p>
<h3 id="发音练习教程："><a href="#发音练习教程：" class="headerlink" title="发音练习教程："></a>发音练习教程：</h3><p><img src="/2021/08/29/TOEFL/19.png"></p>
<img src="/2021/08/29/TOEFL/31.png" style="zoom: 67%;">

<p><a href="https://space.bilibili.com/631186842?from=search&seid=11633573194715022155">瑞秋教程</a></p>
<p><a href="https://www.bilibili.com/video/BV1Kb41117ud?from=search&seid=14125080769006400819">安迪教程：基础发音-&gt;句子发音</a></p>
<h3 id="训练规划"><a href="#训练规划" class="headerlink" title="训练规划"></a>训练规划</h3><img src="/2021/08/29/TOEFL/34.png" alt="34">

<h3 id="1v5策略："><a href="#1v5策略：" class="headerlink" title="1v5策略："></a>1v5策略：</h3><p>通过核心语料一次解决多个问题，一般在20-30套核心语料</p>
<h1 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h1><p><img src="/2021/08/29/TOEFL/1630844989017.png"></p>
<h2 id="写作布局"><a href="#写作布局" class="headerlink" title="写作布局"></a>写作布局</h2><p><img src="/2021/08/29/TOEFL/1630852103390.png"></p>
<h2 id="机评算法"><a href="#机评算法" class="headerlink" title="机评算法"></a>机评算法</h2><h3 id="第一项-Organization-30-20-约9分"><a href="#第一项-Organization-30-20-约9分" class="headerlink" title="第一项 Organization,30%-20%,约9分"></a>第一项 Organization,30%-20%,约9分</h3><ol>
<li>枣核型结构【1个导入段+2或3个主题段+1个片尾总结段】</li>
<li>是否写3个主体段：因人而异</li>
</ol>
<h3 id="第二项-Development，28-30-，约9分"><a href="#第二项-Development，28-30-，约9分" class="headerlink" title="第二项 Development，28%-30%，约9分"></a>第二项 Development，28%-30%，约9分</h3><ol>
<li>篇首段两要素【背景导入+明确立场】</li>
<li>主体段三个要素【主旨句+论证细节+总结句】</li>
</ol>
<p><strong>建议：偏首背景导入不要单独分成一段，偏首段直接表明立场；</strong></p>
<p><strong>机评通过数据对比和学号定位确定分数段，请按模型写。</strong></p>
<h3 id="第三项-Mechanics，10-，约3分"><a href="#第三项-Mechanics，10-，约3分" class="headerlink" title="第三项 Mechanics，10%，约3分"></a>第三项 Mechanics，10%，约3分</h3><h4 id="最高三大失分项："><a href="#最高三大失分项：" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>拼写错误</li>
<li>缺少逗号</li>
<li>首字母大写</li>
</ol>
<h3 id="第四项-Usage，7-8-，约2-5分"><a href="#第四项-Usage，7-8-，约2-5分" class="headerlink" title="第四项 Usage，7%-8%，约2.5分"></a>第四项 Usage，7%-8%，约2.5分</h3><h4 id="最高三大失分项：-1"><a href="#最高三大失分项：-1" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>冠词错误</li>
<li>介词错误</li>
<li>动名混淆</li>
</ol>
<h3 id="第五项Grammer，7-8-，约2-5分"><a href="#第五项Grammer，7-8-，约2-5分" class="headerlink" title="第五项Grammer，7%-8%，约2.5分"></a>第五项Grammer，7%-8%，约2.5分</h3><h4 id="最高三大失分项：-2"><a href="#最高三大失分项：-2" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>主谓一致</li>
<li>动词时态错误</li>
<li> 无法辨认</li>
</ol>
<h3 id="第六项-Style，3-，约1分"><a href="#第六项-Style，3-，约1分" class="headerlink" title="第六项 Style，3%，约1分"></a>第六项 Style，3%，约1分</h3><h4 id="最高三大失分项：-3"><a href="#最高三大失分项：-3" class="headerlink" title="最高三大失分项："></a>最高三大失分项：</h4><ol>
<li>重复使用一个词</li>
<li>过多被动语态</li>
<li>长句或短句太多</li>
</ol>
<p><strong>建议：避免使用一个词反复超过3次；</strong></p>
<p><strong>避免大于55个词和小于7个词的句子。</strong></p>
<h3 id="提分策略"><a href="#提分策略" class="headerlink" title="提分策略"></a>提分策略</h3><ol>
<li><p><strong>调整了词长词频：</strong>单词越长越生僻，得到点数越高</p>
<p><a href="www.thesaurus.com/browse/synonym">同义词网站：www.thesaurus.com/browse/synonym</a></p>
</li>
<li><p><strong>增加用词搭配权重7%：</strong>两个次的正确搭配显示</p>
<p><a href="https://prowritingaid.com/en/Collocation/Dictionary/?Word=">常用搭配在线词典：https://prowritingaid.com/en/Collocation/Dictionary/?Word=</a></p>
</li>
</ol>
<hr>
<p><a href="https://www.bilibili.com/video/BV1LW411v7Z6">B站原视频：【清北托福备考慕课】考托人手必备！(2020考试改革后新版)</a></p>
]]></content>
      <categories>
        <category>托福</category>
      </categories>
      <tags>
        <tag>托福</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/08/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>HTML学习笔记（一）</title>
    <url>/2021/10/04/HTMLLearning01/</url>
    <content><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>Hyper Text Markup Language (超文本标记语言)</p>
<h2 id="HTML的基本结构"><a href="#HTML的基本结构" class="headerlink" title="HTML的基本结构"></a>HTML的基本结构</h2><p>使用规范：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>头部：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>meta标签：</p>
<p>描述性标签，一般用来做SEO（搜索引擎优化）</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>网页标题：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>主体部分：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注释：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--注释内容--></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="网页的基本标签"><a href="#网页的基本标签" class="headerlink" title="网页的基本标签"></a>网页的基本标签</h2><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>二级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>三级标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>显示效果</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004144300601.png"></p>
<h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p>快捷键：p+TAB</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
    第一行
    第一行
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>第二行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>第三行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>显示效果：</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004144544162.png"></p>
<h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><pre class="line-numbers language-html"><code class="language-html">第二行<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="水平线标签"><a href="#水平线标签" class="headerlink" title="水平线标签"></a>水平线标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="粗体、斜体标签"><a href="#粗体、斜体标签" class="headerlink" title="粗体、斜体标签"></a>粗体、斜体标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>显示效果：</p>
<p><img src="/2021/10/04/HTMLLearning01/image-20211004172448100.png"></p>
<h3 id="特殊符号标签"><a href="#特殊符号标签" class="headerlink" title="特殊符号标签"></a>特殊符号标签</h3><p>空格：</p>
<pre class="line-numbers language-html"><code class="language-html">空<span class="token entity" title="&nbsp;">&amp;nbsp;</span>格
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-html"><code class="language-html">大于 <span class="token entity" title="&gt;">&amp;gt;</span>
小于 <span class="token entity" title="&lt;">&amp;lt;</span>
版权号 <span class="token entity" title="&copy;">&amp;copy;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>path<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>y<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击我跳转到页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>href：表示跳转到那个页面</p>
<p>target：表示窗口在哪里打开</p>
<table>
<thead>
<tr>
<th>_blank</th>
<th>在新窗口中打开被链接文档。</th>
</tr>
</thead>
<tbody><tr>
<td>_self</td>
<td>默认。在相同的框架中打开被链接文档。</td>
</tr>
<tr>
<td>_parent</td>
<td>在父框架集中打开被链接文档。</td>
</tr>
<tr>
<td>_top</td>
<td>在整个窗口中打开被链接文档。</td>
</tr>
<tr>
<td><em>framename</em></td>
<td>在指定的框架中打开被链接文档。</td>
</tr>
</tbody></table>
<p><strong>锚定标签</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p><strong>有序列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006115700284.png"></p>
<p><strong>无序列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>c++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006115731828.png"></p>
<p><strong>自定义列表</strong></p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>subject<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Python<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>C++<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006120000026.png"></p>
<h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1-4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="/2021/10/04/HTMLLearning01/image-20211006135634359.png"></p>
<h3 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autoplay</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre><code>&lt;audio src=&quot;&quot;&gt;&lt;/audio&gt;
&lt;/body&gt;
</code></pre>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>建立博客时遇到的问题</title>
    <url>/2021/08/30/%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="本地部署时出现：FATAL-Port-4000-has-been-used-Try-other-port-instead"><a href="#本地部署时出现：FATAL-Port-4000-has-been-used-Try-other-port-instead" class="headerlink" title="本地部署时出现：FATAL Port 4000 has been used. Try other port instead."></a>本地部署时出现：FATAL Port 4000 has been used. Try other port instead.</h1><p>解释：提示4000端口出问题</p>
<h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>在主地址下的_config.yml文件中加入以下代码</p>
<pre><code>server:
  port: 4000 #端口值，默认为4000
  compress: true
  header: true
</code></pre>
<br>

<h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><p>用以下命令启动</p>
<pre><code>hexo server -p 4001
</code></pre>
<hr>
<h1 id="图片无法加载"><a href="#图片无法加载" class="headerlink" title="图片无法加载"></a>图片无法加载</h1><h3 id="第一步：安装插件"><a href="#第一步：安装插件" class="headerlink" title="第一步：安装插件"></a>第一步：安装插件</h3><pre><code>    npm install hexo-asset-image --save
</code></pre>
<h3 id="第二步：修改文件内容"><a href="#第二步：修改文件内容" class="headerlink" title="第二步：修改文件内容"></a>第二步：修改文件内容</h3><p>在根目录下的_config.yml中加入：（新建文章时自动生成同名文件夹）</p>
<pre><code>post_asset_folder: true
</code></pre>
<h3 id="第三步：打开根目录下的"><a href="#第三步：打开根目录下的" class="headerlink" title="第三步：打开根目录下的"></a>第三步：打开根目录下的</h3><pre><code>/node_modules/hexo-asset-image/index.js
</code></pre>
<p>将内容修改为</p>
<pre><code>&#39;use strict&#39;;
var cheerio = require(&#39;cheerio&#39;);

// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string
function getPosition(str, m, i) &#123;
  return str.split(m, i).join(m).length;
&#125;

var version = String(hexo.version).split(&#39;.&#39;);
hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;
  var config = hexo.config;
  if(config.post_asset_folder)&#123;
        var link = data.permalink;
    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)
       var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;
    else
       var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;
    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.
    var endPos = link.lastIndexOf(&#39;/&#39;) + 1;
    link = link.substring(beginPos, endPos);

    var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];
    for(var i = 0; i &lt; toprocess.length; i++)&#123;
      var key = toprocess[i];
 
      var $ = cheerio.load(data[key], &#123;
        ignoreWhitespace: false,
        xmlMode: false,
        lowerCaseTags: false,
        decodeEntities: false
      &#125;);

      $(&#39;img&#39;).each(function()&#123;
        if ($(this).attr(&#39;src&#39;))&#123;
            // For windows style path, we replace &#39;\&#39; to &#39;/&#39;.
            var src = $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;/&#39;);
            if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;
               !/^\s*\//.test(src)) &#123;
              // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.
              // In addition, to support multi-level local directory.
              var linkArray = link.split(&#39;/&#39;).filter(function(elem)&#123;
                return elem != &#39;&#39;;
              &#125;);
              var srcArray = src.split(&#39;/&#39;).filter(function(elem)&#123;
                return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;;
              &#125;);
              if(srcArray.length &gt; 1)
                srcArray.shift();
              src = srcArray.join(&#39;/&#39;);
              $(this).attr(&#39;src&#39;, config.root + link + src);
              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);
            &#125;
        &#125;else&#123;
            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);
            console.info&amp;&amp;console.info($(this));
        &#125;
      &#125;);
      data[key] = $.html();
    &#125;
  &#125;
&#125;);
</code></pre>
<p><a href="https://blog.csdn.net/xjm850552586/article/details/84101345">参考Ericam_</a></p>
<h3 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h3><p><strong>此种方式如有文件夹中存在中文则会<code>url</code>转码,也会显示不正常,解决方法: <code>new </code>文件时使用英文名,手动设置文章标题即可</strong></p>
<p>在.md文件中按markdown语法引用图片：（在text.md中引用在同名文件夹中的</p>
<p>picture.png)</p>
<pre><code>![随便写](text/picture.png)
</code></pre>
<hr>
<h1 id="添加valine评论邮件通知："><a href="#添加valine评论邮件通知：" class="headerlink" title="添加valine评论邮件通知："></a>添加valine评论邮件通知：</h1><p><a href="https://zealot.top/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bvaline%E8%AF%84%E8%AE%BA%E5%AE%9E%E7%8E%B0%E9%82%AE%E7%AE%B1%E6%8F%90%E9%86%92%E7%9A%84%E6%96%B9%E6%B3%95.html">Hexo博客之valine评论实现邮箱提醒的方法</a></p>
<hr>
<h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><h3 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h3><p>安装插件：</p>
<pre><code>npm install hexo-generator-searchdb --save
</code></pre>
<h3 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h3><p>在根目录文件_config.yml文件下添加配置：</p>
<pre><code>search:
  path: search.xml
  field: post
  format: html
  limit: 10000
</code></pre>
<p>在主题目录文件_config.yml文件下配置：</p>
<pre><code>local_search:
  enable: true
</code></pre>
<hr>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title>数字逻辑基础知识（组合逻辑电路）</title>
    <url>/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="组合逻辑电路"><a href="#组合逻辑电路" class="headerlink" title="组合逻辑电路"></a>组合逻辑电路</h1><h2 id="组合逻辑电路分析"><a href="#组合逻辑电路分析" class="headerlink" title="组合逻辑电路分析"></a>组合逻辑电路分析</h2><h3 id="分类-："><a href="#分类-：" class="headerlink" title="分类 ："></a>分类 ：</h3><ol>
<li><p><strong>组合逻辑电路</strong></p>
<p>任意时刻的输出仅仅取决于该时刻的输入组合，而与输入信号 作用前电路的原状态无关(与过去的输入无关)。</p>
</li>
<li><p><strong>时序逻辑电路</strong></p>
<p>任意时刻的输出不仅仅与该时刻的输入有关，而且还与电路的原状态有关(与过去的输入有关)。</p>
</li>
</ol>
<h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><ol>
<li>电路由逻辑门构成，无记忆元件</li>
<li>输入信号是单项传输，一般无反馈</li>
</ol>
<h3 id="分析步骤："><a href="#分析步骤：" class="headerlink" title="分析步骤："></a>分析步骤：</h3><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.png" style="zoom: 67%;">

<h4 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h4><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.png" style="zoom: 67%;">



<h1 id="典型组合逻辑电路介绍"><a href="#典型组合逻辑电路介绍" class="headerlink" title="典型组合逻辑电路介绍"></a>典型组合逻辑电路介绍</h1><h2 id="半加器-Half-Adder-："><a href="#半加器-Half-Adder-：" class="headerlink" title="半加器(Half Adder)："></a>半加器(Half Adder)：</h2><h3 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h3><p>半加器电路是指对两个输入<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E4%BD%8D/3441892">数据位</a>相加，输出一个结果位和<a href="https://baike.baidu.com/item/%E8%BF%9B%E4%BD%8D/5989952">进位</a>，没有进位输入的<a href="https://baike.baidu.com/item/%E5%8A%A0%E6%B3%95%E5%99%A8/9374198">加法器</a>电路。 是实现两个一位二进制数的加法运算电路。</p>
<h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.png" style="zoom: 67%;">



<h2 id="全加器-Full-Adder-："><a href="#全加器-Full-Adder-：" class="headerlink" title="全加器(Full Adder)："></a>全加器(Full Adder)：</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>全加器英语名称为full-adder，是用<a href="https://baike.baidu.com/item/%E9%97%A8%E7%94%B5%E8%B7%AF/10796427">门电路</a>实现两个二进制数相加并求出和的组合线路，称为一位全加器。一位全加器可以处理低位进位，并输出本位加法进位。多个一位全加器进行级联可以得到多位全加器。</p>
<h3 id="实现原理-1"><a href="#实现原理-1" class="headerlink" title="实现原理"></a>实现原理</h3><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.png" style="zoom:67%;">



<h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><p>通过上学期的离散数学知识，可将下表转换为表达式</p>
<img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.png" style="zoom: 80%;">



<img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.png">



<p>将表达式转化为组合逻辑电路</p>
<img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.png" style="zoom:80%;">



<h2 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>所谓<strong>编码</strong>，就是在选定的一系列二值代码中赋予每个代码以固定 的含义。执行编码功能的电路称<strong>编码器</strong>。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p><strong>输出：</strong></p>
<ol>
<li>二进制编码器：输入2^n个信号，输出n位编码</li>
<li>二~十进制编码器：10个信号输出，BCD码输出</li>
</ol>
<p><strong>功能：</strong></p>
<ol>
<li>一般编码器 — 输入信号有约束</li>
<li>优先编码器 — 按优先级别高低编码</li>
</ol>
<h3 id="二进制编码器"><a href="#二进制编码器" class="headerlink" title="二进制编码器"></a>二进制编码器</h3><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.png"></p>
<h4 id="例：8线－3线编码器"><a href="#例：8线－3线编码器" class="headerlink" title="例：8线－3线编码器"></a>例：8线－3线编码器</h4><p>有8个输入变量，共256种组合，但只用了8种，即任一时刻允许一位为“0”</p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.png"></p>
<h5 id="真值表"><a href="#真值表" class="headerlink" title="真值表"></a>真值表</h5><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.png"></p>
<h2 id="译码器"><a href="#译码器" class="headerlink" title="译码器"></a>译码器</h2><h3 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h3><p>译码是编码的逆过程，其功能是将具有特定含义的不同二进制代 码“翻译”出来。</p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/11.png"></p>
<h3 id="二进制译码器"><a href="#二进制译码器" class="headerlink" title="二进制译码器"></a>二进制译码器</h3><p>二进制译码器属于完全译码器(设译码器有n个输入和m个输出，则m=2 n )，不满足该条件的称为部分译码器。</p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.png"></p>
<h3 id="使能端"><a href="#使能端" class="headerlink" title="使能端"></a>使能端</h3><ol>
<li><p>控制译码器状态：</p>
<p>E=1：译码器处于工作状态</p>
<p>E=2：译码器处于非工作状态</p>
</li>
<li><p>用于译码器扩展</p>
</li>
</ol>
<h4 id="例（控制工作状态）："><a href="#例（控制工作状态）：" class="headerlink" title="例（控制工作状态）："></a>例（控制工作状态）：</h4><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/13.png"></p>
<h4 id="例（译码器扩展）："><a href="#例（译码器扩展）：" class="headerlink" title="例（译码器扩展）："></a>例（译码器扩展）：</h4><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/14.png" style="zoom:67%;">



<h4 id="3线—8线译码器74LS138-T4138-的引脚图"><a href="#3线—8线译码器74LS138-T4138-的引脚图" class="headerlink" title="3线—8线译码器74LS138(T4138)的引脚图:"></a>3线—8线译码器74LS138(T4138)的引脚图:</h4><p><strong>Ai：输入    Zi：输出    Vcc：电源</strong></p>
<img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/15.png" style="zoom:67%;">



<p><strong>规定：S1=1，S2=S3=0时，使能端E=1</strong></p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/16.png"></p>
<h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h1><h2 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h2><p>能够存储一位二进制信息的基本单元电路称触发器(Flip-Flop)</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol>
<li><p>具有两个能自我保持的稳定状态：</p>
<p><strong>现态、次态</strong></p>
<p>用来表示逻辑状态的“0”或”1“</p>
</li>
</ol>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630889807481.png"></p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890041294.png"></p>
<h2 id="R-S触发器"><a href="#R-S触发器" class="headerlink" title="R-S触发器"></a>R-S触发器</h2><h3 id="电路结构"><a href="#电路结构" class="headerlink" title="电路结构"></a>电路结构</h3><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890362795.png"></p>
<h3 id="状态转换表"><a href="#状态转换表" class="headerlink" title="状态转换表"></a>状态转换表</h3><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890402605.png"></p>
<h3 id="特征方程"><a href="#特征方程" class="headerlink" title="特征方程"></a>特征方程</h3><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890477084.png"></p>
<h3 id="RS触发器存在的问题："><a href="#RS触发器存在的问题：" class="headerlink" title="RS触发器存在的问题："></a>RS触发器存在的问题：</h3><p>(1)存在约束条件的限制； </p>
<p>(2)没有时钟信号，无法与其他部件同步工作。</p>
<h2 id="钟控触发器"><a href="#钟控触发器" class="headerlink" title="钟控触发器"></a>钟控触发器</h2><h3 id="钟控RS触发器"><a href="#钟控RS触发器" class="headerlink" title="钟控RS触发器"></a>钟控RS触发器</h3><h4 id="电路结构-1"><a href="#电路结构-1" class="headerlink" title="电路结构"></a>电路结构</h4><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890677853.png"></p>
<h4 id="工作状态"><a href="#工作状态" class="headerlink" title="工作状态"></a>工作状态</h4><p>CP=0时，保持状态不变；CP=1时，接收输入信号。</p>
<h4 id="特征方程-1"><a href="#特征方程-1" class="headerlink" title="特征方程"></a>特征方程</h4><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630890858258.png"></p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>加入了时 钟信号，使工作成为可能。</p>
<h4 id="存在的问题："><a href="#存在的问题：" class="headerlink" title="存在的问题："></a>存在的问题：</h4><ol>
<li><p>仍然存在约束问题</p>
</li>
<li><p>在CP=1期间，只要R、S稍有变化，那么Q段也随之变化，存在”空翻问题“。</p>
<p>（“空翻”会造成节拍混乱，使系统工作不可靠，因此在实际的 数字电路中是不允许出现的。）</p>
</li>
</ol>
<h2 id="集成D触发器（掌握）"><a href="#集成D触发器（掌握）" class="headerlink" title="集成D触发器（掌握）"></a>集成D触发器（掌握）</h2><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630893188523.png"></p>
<h3 id="特征方程-2"><a href="#特征方程-2" class="headerlink" title="特征方程"></a>特征方程</h3><p>(1) 同步工作时：</p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630893231349.png"></p>
<p>(2) 异步工作时</p>
<p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630893237754.png"></p>
<h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p><img src="/2021/09/01/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1630892713522.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组：数据的表示、运算和校验（数值型数据）</title>
    <url>/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="数值型数据"><a href="#数值型数据" class="headerlink" title="数值型数据"></a>数值型数据</h1><h2 id="不同进制的写法："><a href="#不同进制的写法：" class="headerlink" title="不同进制的写法："></a>不同进制的写法：</h2><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/1.png"></p>
<h2 id="进位计数："><a href="#进位计数：" class="headerlink" title="进位计数："></a>进位计数：</h2><p>基数：每位数中所允许的最大数值加1（十进制的基数是10）</p>
<p>权：基数的n次方</p>
<p>两个相邻的权值比是基数</p>
<h1 id="带符号数表示："><a href="#带符号数表示：" class="headerlink" title="带符号数表示："></a>带符号数表示：</h1><h2 id="真值："><a href="#真值：" class="headerlink" title="真值："></a>真值：</h2><p>正负号加绝对值</p>
<h2 id="机器数："><a href="#机器数：" class="headerlink" title="机器数："></a>机器数：</h2><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ol>
<li>只能采用二进制</li>
<li>四种编码制：原码，补码，反码，移码</li>
<li>符号位数值化：0表示正，1表示负</li>
<li>组成：符号位+有效数值</li>
</ol>
<br>

<h1 id="四种编码制"><a href="#四种编码制" class="headerlink" title="四种编码制"></a>四种编码制</h1><h2 id="原码表示法："><a href="#原码表示法：" class="headerlink" title="原码表示法："></a>原码表示法：</h2><h3 id="整数："><a href="#整数：" class="headerlink" title="整数："></a>整数：</h3><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/2.png"></p>
<p>Eg：</p>
<p>+1100-&gt;0,1100(0表示正数）</p>
<p>-1100 -&gt; 2^4-(-1100) -&gt; 2^4+1100=1,1100(1表示负数）</p>
<h3 id="小数："><a href="#小数：" class="headerlink" title="小数："></a>小数：</h3><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/3.png"></p>
<p>Eg：<br>+0.1100-&gt;0.1100(第一个0表示正数）</p>
<p>-0.1100 -&gt;1-(-0.1100)-&gt;1.1100(第一个1表示负数）</p>
<p>简单方法：</p>
<p>（1）取真值的绝对值的2进制表示。</p>
<p>（2）左边第一位添加符号。  </p>
<br>

<h2 id="反码表示法"><a href="#反码表示法" class="headerlink" title="反码表示法"></a>反码表示法</h2><p><strong>正数：</strong></p>
<p>反码和原码相同</p>
<p><strong>负数：</strong></p>
<p>符号位不变，原码其余各个位取反</p>
<br>

<p>Eg:</p>
<p>[+127]原=0111 1111, [+127]反=0111 1111,</p>
<p>[-127]原=1111 1111, [-127]反=1000 0000。</p>
<p>[+0]原=0000 0000, [+0]反=0000 0000,</p>
<p>[-0]原=1000 0000, [-0]反=1111 1111。</p>
<br>

<h2 id="补码表示法"><a href="#补码表示法" class="headerlink" title="补码表示法"></a>补码表示法</h2><p><strong>正数：</strong></p>
<p>补码与原码一样</p>
<p><strong>负数：</strong></p>
<p>反码末尾+1</p>
<p>Eg:</p>
<p>[+127]原=0111 1111, [+127]反=0111 1111,[+127]补=0111 1111</p>
<p>[-127]原=1111 1111, [-127]反=1000 0000，[-127]补=1000 0001</p>
<p>[+0]原=0000 0000, [+0]反=0000 0000,[+0]补=0000 0000,</p>
<p>[-0]原=1000 0000, [-0]反=1111 1111，[-0]补=0000 0000。</p>
<br>

<h2 id="移码（增码）表示法"><a href="#移码（增码）表示法" class="headerlink" title="移码（增码）表示法"></a>移码（增码）表示法</h2><p>将补码符号位取反即可</p>
<h3 id="特征：-1"><a href="#特征：-1" class="headerlink" title="特征："></a>特征：</h3><ol>
<li>符号位与原码，补码相反</li>
<li>让X从－128逐渐增至+127，相应地X移从00…00逐渐增至11……11，呈递增状。可见采用移码能更直观地比较正负阶码的大小。</li>
</ol>
<p>tips:</p>
<p>标准移码：沿x轴平移2^(n-1) </p>
<p>IEEE754非标准移码：2^(n-1)-1</p>
<p>其中n为字长</p>
<br>

<h1 id="定点数与浮点数"><a href="#定点数与浮点数" class="headerlink" title="定点数与浮点数"></a>定点数与浮点数</h1><h3 id="1-定点表示法："><a href="#1-定点表示法：" class="headerlink" title="1.定点表示法："></a>1.定点表示法：</h3><p><strong>特征：</strong>小数点位置不变</p>
<p><strong>类别：</strong></p>
<ol>
<li>无符号定点整数：略去符号位的正整数</li>
<li>带符号定点整数：小数点在最低位之后，最高位为符号位</li>
<li>带符号定点小数：纯小数，原码或补码表示</li>
</ol>
<h3 id="2-浮点数表示法："><a href="#2-浮点数表示法：" class="headerlink" title="2.浮点数表示法："></a>2.浮点数表示法：</h3><p><strong>特征：</strong>浮点数是一种小数点位置不固定，可随需要浮动的数</p>
<p><strong>格式：</strong></p>
<p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/4.png"></p>
<p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/5.png"></p>
<br>

<p><strong>R是阶码的底：</strong>一般约定为基数</p>
<p><strong>E是阶码</strong></p>
<p><strong>M是尾数：</strong>带符号定点小数，可用补码或原码表示</p>
<br>

<h2 id="IEEE754标准浮点格式"><a href="#IEEE754标准浮点格式" class="headerlink" title="IEEE754标准浮点格式"></a>IEEE754标准浮点格式</h2><h3 id="3种浮点表示格式："><a href="#3种浮点表示格式：" class="headerlink" title="3种浮点表示格式："></a>3种浮点表示格式：</h3><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/6.png"></p>
<p><strong>注意：</strong></p>
<p>短浮点数又称为单精度浮点数，长浮点数又称为双精度浮点数，它们都采用<strong>隐含尾数最高数位</strong></p>
<p>（2^0）的方法。因此，<strong>相应地尾数真值实际上等于1+（23位尾数数值或52位尾数数值）</strong></p>
<h3 id="如何用浮点数形式表示："><a href="#如何用浮点数形式表示：" class="headerlink" title="如何用浮点数形式表示："></a>如何用浮点数形式表示：</h3><p><strong>阶码是以移码形式存储的，存储浮点数阶码部分之前，偏置值先要加到阶码真值上。</strong></p>
<p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/7.png"></p>
<p>tips:</p>
<p>阶码真值：科学计数法后小数退的位数</p>
<p>偏置值：2^(n-1)-1</p>
<p><strong>举例：</strong></p>
<p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/8.png"></p>
<p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/9.png"></p>
<h3 id="反向运算："><a href="#反向运算：" class="headerlink" title="反向运算："></a>反向运算：</h3><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/10.png"></p>
<h4 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h4><p><img src="/2021/08/30/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E7%A4%BA%E3%80%81%E8%BF%90%E7%AE%97%E5%92%8C%E6%A0%A1%E9%AA%8C/11.png"></p>
<p>参考网站：<a href="https://www.cnblogs.com/bruce81/p/3536596.html">https://www.cnblogs.com/bruce81/p/3536596.html</a></p>
]]></content>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（七）：模型机的组合逻辑控制器</title>
    <url>/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>定义：</p>
<p>组合逻辑控制器的微命令是由组合逻辑电路 来实现。每种微命令都需要一组逻辑电路产生，全机所 有微命令所需的逻辑电路就构成了微命令发生器。</p>
<h2 id="硬件组成："><a href="#硬件组成：" class="headerlink" title="硬件组成："></a>硬件组成：</h2><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210922214921297.png"></p>
<h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210922214952739.png" style="zoom:80%;">

<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210922215103376.png"></p>
<h2 id="组合逻辑控制器时序系统"><a href="#组合逻辑控制器时序系统" class="headerlink" title="组合逻辑控制器时序系统"></a>组合逻辑控制器时序系统</h2><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210922215412178.png"></p>
<p><strong>工作周期：</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210922215439946.png"></p>
<ol>
<li><p>取指周期FT：在FT中完成的操作是公共性操作;</p>
</li>
<li><p>源周期ST：如果需要从主存中读取源操作数（非寄 存器寻址），则进入ST。</p>
</li>
<li><p>目的周期DT：如果需要从主存中读取目的地址或目的操作数（非寄存器寻址），则进入DT。</p>
</li>
<li><p>执行周期ET：取得操作数后，CPU进入ET，这也是 各类指令都需经历的最后一个工作阶段（公共性操作）。</p>
</li>
<li><p>中断周期IT：除了考虑指令的正常执行，还需考虑 外部请求带来的变化。</p>
</li>
<li><p>DMA周期DMAT：响应DMA请 求之后，CPU进入DMAT。在DMAT 中，CPU交出系统总线的控制权， 即MAR、MDR与系统总线断开 （呈高阻态），改由DMA控制器 控制系统总线，实现主存与外 围设备间的数据直传。</p>
</li>
</ol>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926195633064.png"></p>
<p><strong>时钟周期（节拍）</strong></p>
<p>指令的读取与执行既有<strong>CPU内部数据通路操作</strong>，也包含 <strong>访问主存的操作</strong>。为简化时序控制，模型机将两类操作 周期统一起来，即以主存访问周期所需时间为时钟周期 的宽度，这里设为1微秒。</p>
<p><strong>工作脉冲</strong></p>
<p>时钟周期表示一个时间段，在这段时间内可以进行某种 数据通路操作，如两数相加。但有些操作需要同步定时 脉冲进行控制，如将稳定的运算结果打入寄存器，又如 进行周期状态切换。模型机在每个时钟周期的末尾发一 个工作脉冲P，作为各种同步脉冲的来源，如下页图所示。</p>
<p>工作脉冲P的<strong>前沿作为打入寄存器的定时</strong>，它标志着 一次数据通路操作的完成。<strong>P的后沿作为时序转换的定时</strong>，在此刻如果本工作周期未结束，则对时钟周期计数 器T计数，进入新的节拍；如果本工作周期结束，则将T 清零，并清除本工作周期状态标志，设置新的工作周期 状态标志。</p>
<h2 id="指令流程与操作时间表"><a href="#指令流程与操作时间表" class="headerlink" title="指令流程与操作时间表"></a>指令流程与操作时间表</h2><p>通过有关讨论应能较深人地了解CPU执行指令的工作 机制。分两个层次进行讨论：</p>
<ol>
<li>在寄存器传送级拟定<strong>各类指令的执行流程</strong>，也就是 确定指令执行的具体步骤，即各类信息如何分步地按要 求流动。</li>
<li>拟定<strong>操作时间表</strong>，即给出实现上述流程所需的微操 作命令序列。其中包含维持一个时钟周期的电位型微命 令，以及短暂的脉冲型微命令。操作时间表还将表明出 现各种微命令的逻辑条件与时间条件。</li>
</ol>
<p>这里是<strong>以指令为线索</strong>，按指令类型分别拟定操作流程。 这种方法的优点是对指令的执行过程拟出了清晰的线索， 便于理解CPU的工作过程。</p>
<h3 id="取址周期FT：Fetch-Time"><a href="#取址周期FT：Fetch-Time" class="headerlink" title="取址周期FT：Fetch Time"></a><strong>取址周期FT：Fetch Time</strong></h3><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926203944810.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926204444731.png"></p>
<p>EMAR: 地址使能，由它将MAR中的地址输出到地址总线</p>
<p>EMDR: 数据使能，由它控制吧MDR中的数据输出到数据总线</p>
<p>SMDR: 把数据总线上的数据置入寄存器MDR</p>
<p>SIR: 把从主存读取到的指令从数据总线置入IR</p>
<p>R/W: 控制主存的读取模式</p>
<h3 id="ST：寻址方式（MOV、双操作数指令）"><a href="#ST：寻址方式（MOV、双操作数指令）" class="headerlink" title="ST：寻址方式（MOV、双操作数指令）"></a>ST：寻址方式（MOV、双操作数指令）</h3><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210500984.png" style="zoom:50%;">

<img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210520231.png" style="zoom:50%;">

<img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210542208.png" style="zoom:50%;">

<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210558198.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210627426.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210644822.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926210703202.png"></p>
<h3 id="DT：寻址方式（MOV、双操作数指令）"><a href="#DT：寻址方式（MOV、双操作数指令）" class="headerlink" title="DT：寻址方式（MOV、双操作数指令）"></a>DT：寻址方式（MOV、双操作数指令）</h3><p>与ST寻址方式相似</p>
<p>区别：</p>
<p>MOV指令：在DT中，缺少取出目的操作数一步，即M-&gt;MDR-&gt;D</p>
<p>双操作数指令：在DT中，需要取出目的操作数（R寻 址除外）,所以，多一步操作，即 M→MDR→D。</p>
<h3 id="ET"><a href="#ET" class="headerlink" title="ET"></a>ET</h3><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926213720831.png"></p>
<img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210926213821574.png" style="zoom:80%;">



<h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E6%A8%A1%E5%9E%8B%E6%9C%BA%E7%9A%84%E7%BB%84%E5%90%88%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%99%A8/image-20210927093926395.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（五）：算数逻辑运算部件</title>
    <url>/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="运算器"><a href="#运算器" class="headerlink" title="运算器"></a>运算器</h2><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922204521682.png"> </p>
<h2 id="加法单元"><a href="#加法单元" class="headerlink" title="加法单元"></a>加法单元</h2><p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922205023331.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922205253204.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922205325770.png"></p>
<p><strong>串行加法器</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922205717093.png"></p>
<p><strong>并行加法器</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922210253412.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922211153301.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922211320033.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922211330310.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922211341717.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922212429933.png"></p>
<p>利用低位进位的输出作为高位进位的输入</p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922212757720.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922212805950.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922213027530.png"></p>
<h2 id="ALU单元与多位ALU部件"><a href="#ALU单元与多位ALU部件" class="headerlink" title="ALU单元与多位ALU部件"></a>ALU单元与多位ALU部件</h2><p>定义：若干全加器，并行进位链，输入选择们继承在一块芯片上</p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E7%AE%97%E6%95%B0%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E9%83%A8%E4%BB%B6/image-20210922213636470.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>计组（六）：运算方法</title>
    <url>/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="定点加法运算"><a href="#定点加法运算" class="headerlink" title="定点加法运算"></a>定点加法运算</h2><p><strong>补码加减运算的基本关系式</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/image-20210922214041390.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/image-20210922214101337.png"></p>
<p><strong>补码加减运算规则</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/image-20210922214126415.png"></p>
<p><strong>补码加减运算的逻辑实现</strong></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/image-20210922214200810.png"></p>
<p><img src="/2021/09/22/%E8%AE%A1%E7%BB%84%EF%BC%9A%E8%BF%90%E7%AE%97%E6%96%B9%E6%B3%95/image-20210922214226442.png"></p>
]]></content>
      <categories>
        <category>计算机组成原理</category>
      </categories>
      <tags>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
</search>
